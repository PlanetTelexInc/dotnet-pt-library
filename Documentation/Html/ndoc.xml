<?xml version="1.0" encoding="utf-8"?>
<ndoc SchemaVersion="2.0" xmlns="urn:ndoc-schema">
  <feedbackEmail>inquiries@planettelex.net</feedbackEmail>
  <copyright text="Copyright Planet Telex, Inc. 2007-2015" href="http://www.planettelex.net" />
  <threadsafety static="true" instance="false" />
  <namespaceHierarchies>
    <namespaceHierarchy name="PlanetTelex.Extensions">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Extensions.CollectionExtensions" displayName="CollectionExtensions" namespace="PlanetTelex.Extensions" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Extensions.DateTimeExtensions" displayName="DateTimeExtensions" namespace="PlanetTelex.Extensions" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Extensions.EnumerableExtensions" displayName="EnumerableExtensions" namespace="PlanetTelex.Extensions" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Extensions.EnumExtensions" displayName="EnumExtensions" namespace="PlanetTelex.Extensions" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Extensions.ObjectExtensions" displayName="ObjectExtensions" namespace="PlanetTelex.Extensions" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Extensions.StringExtensions" displayName="StringExtensions" namespace="PlanetTelex.Extensions" assembly="PlanetTelex" />
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Web.Mvc.Extensions.Html.Analytics">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Web.Mvc.Extensions.Html.Analytics.GoogleAnalyticsExtensions" displayName="GoogleAnalyticsExtensions" namespace="PlanetTelex.Web.Mvc.Extensions.Html.Analytics" assembly="PlanetTelex.Web.Mvc" />
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Web.Protocols.Http">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Web.Protocols.Http.HttpString" displayName="HttpString" namespace="PlanetTelex.Web.Protocols.Http" assembly="PlanetTelex.Web" />
        <hierarchyType id="T:System.Exception" displayName="Exception" namespace="System" assembly="mscorlib">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:System.Runtime.Serialization.ISerializable" displayName="ISerializable" namespace="System.Runtime.Serialization" fullName="System.Runtime.Serialization.ISerializable" assembly="mscorlib" />
          </hierarchyInterfaces>
          <hierarchyType id="T:System.SystemException" displayName="SystemException" namespace="System" assembly="mscorlib">
            <hierarchyType id="T:System.Runtime.InteropServices.ExternalException" displayName="ExternalException" namespace="System.Runtime.InteropServices" assembly="mscorlib">
              <hierarchyType id="T:System.Web.HttpException" displayName="HttpException" namespace="System.Web" assembly="System.Web">
                <hierarchyType id="T:PlanetTelex.Web.Protocols.Http.HttpNotFoundException" displayName="HttpNotFoundException" namespace="PlanetTelex.Web.Protocols.Http" assembly="PlanetTelex.Web" />
              </hierarchyType>
            </hierarchyType>
          </hierarchyType>
        </hierarchyType>
        <hierarchyType id="T:System.ValueType" displayName="ValueType" namespace="System" assembly="mscorlib">
          <hierarchyType id="T:System.Enum" displayName="Enum" namespace="System" assembly="mscorlib">
            <hierarchyInterfaces>
              <hierarchyInterface id="T:System.IComparable" displayName="IComparable" namespace="System" fullName="System.IComparable" assembly="mscorlib" />
              <hierarchyInterface id="T:System.IConvertible" displayName="IConvertible" namespace="System" fullName="System.IConvertible" assembly="mscorlib" />
              <hierarchyInterface id="T:System.IFormattable" displayName="IFormattable" namespace="System" fullName="System.IFormattable" assembly="mscorlib" />
            </hierarchyInterfaces>
            <hierarchyType id="T:PlanetTelex.Web.Protocols.Http.StatusMessage" displayName="StatusMessage" namespace="PlanetTelex.Web.Protocols.Http" assembly="PlanetTelex.Web" />
          </hierarchyType>
        </hierarchyType>
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Web.Mvc.Results">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:System.Web.Mvc.ActionResult" displayName="ActionResult" namespace="System.Web.Mvc" assembly="System.Web.Mvc">
          <hierarchyType id="T:System.Web.Mvc.FileResult" displayName="FileResult" namespace="System.Web.Mvc" assembly="System.Web.Mvc">
            <hierarchyType id="T:System.Web.Mvc.FileStreamResult" displayName="FileStreamResult" namespace="System.Web.Mvc" assembly="System.Web.Mvc">
              <hierarchyType id="T:PlanetTelex.Web.Mvc.Results.StreamTrackingResult" displayName="StreamTrackingResult" namespace="PlanetTelex.Web.Mvc.Results" assembly="PlanetTelex.Web.Mvc" />
            </hierarchyType>
          </hierarchyType>
        </hierarchyType>
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Web.Syndication">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Web.Syndication.IRssItem" displayName="IRssItem" namespace="PlanetTelex.Web.Syndication" assembly="PlanetTelex.Web" />
        <hierarchyType id="T:PlanetTelex.Web.Syndication.IRssPodcastItem" displayName="IRssPodcastItem" namespace="PlanetTelex.Web.Syndication" assembly="PlanetTelex.Web">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:PlanetTelex.Web.Syndication.IRssItem" displayName="IRssItem" namespace="PlanetTelex.Web.Syndication" fullName="PlanetTelex.Web.Syndication.IRssItem" assembly="PlanetTelex.Web" />
          </hierarchyInterfaces>
        </hierarchyType>
        <hierarchyType id="T:PlanetTelex.Web.Syndication.RssChannel`1" displayName="RssChannel{T}" namespace="PlanetTelex.Web.Syndication" assembly="PlanetTelex.Web" />
        <hierarchyType id="T:PlanetTelex.Web.Syndication.RssWriter`1" displayName="RssWriter{T}" namespace="PlanetTelex.Web.Syndication" assembly="PlanetTelex.Web" />
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Web.Caching">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Web.Caching.DataCache" displayName="DataCache" namespace="PlanetTelex.Web.Caching" assembly="PlanetTelex.Web" />
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Web.Extensions">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Web.Extensions.StringExtensions" displayName="StringExtensions" namespace="PlanetTelex.Web.Extensions" assembly="PlanetTelex.Web" />
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Web.Mvc.Extensions.Html.Lists">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Web.Mvc.Extensions.Html.Lists.ListExtensions" displayName="ListExtensions" namespace="PlanetTelex.Web.Mvc.Extensions.Html.Lists" assembly="PlanetTelex.Web.Mvc" />
        <hierarchyType id="T:PlanetTelex.Web.Mvc.Extensions.Html.Lists.SelectListExtensions" displayName="SelectListExtensions" namespace="PlanetTelex.Web.Mvc.Extensions.Html.Lists" assembly="PlanetTelex.Web.Mvc" />
        <hierarchyType id="T:PlanetTelex.Web.Mvc.Extensions.Html.Lists.TimeDropDownListExtensions" displayName="TimeDropDownListExtensions" namespace="PlanetTelex.Web.Mvc.Extensions.Html.Lists" assembly="PlanetTelex.Web.Mvc" />
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Serialization">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Serialization.BinarySerializer" displayName="BinarySerializer" namespace="PlanetTelex.Serialization" assembly="PlanetTelex">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:PlanetTelex.Serialization.ISerializer" displayName="ISerializer" namespace="PlanetTelex.Serialization" fullName="PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex" />
          </hierarchyInterfaces>
        </hierarchyType>
        <hierarchyType id="T:PlanetTelex.Serialization.DataContractJsonSerializer" displayName="DataContractJsonSerializer" namespace="PlanetTelex.Serialization" assembly="PlanetTelex">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:PlanetTelex.Serialization.ISerializer" displayName="ISerializer" namespace="PlanetTelex.Serialization" fullName="PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex" />
          </hierarchyInterfaces>
        </hierarchyType>
        <hierarchyType id="T:PlanetTelex.Serialization.DataContractXmlSerializer" displayName="DataContractXmlSerializer" namespace="PlanetTelex.Serialization" assembly="PlanetTelex">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:PlanetTelex.Serialization.ISerializer" displayName="ISerializer" namespace="PlanetTelex.Serialization" fullName="PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex" />
          </hierarchyInterfaces>
        </hierarchyType>
        <hierarchyType id="T:PlanetTelex.Serialization.ISerializer" displayName="ISerializer" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Serialization.XmlCData" displayName="XmlCData" namespace="PlanetTelex.Serialization" assembly="PlanetTelex">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:System.Xml.Serialization.IXmlSerializable" displayName="IXmlSerializable" namespace="System.Xml.Serialization" fullName="System.Xml.Serialization.IXmlSerializable" assembly="System.Xml" />
          </hierarchyInterfaces>
        </hierarchyType>
        <hierarchyType id="T:PlanetTelex.Serialization.XmlSerializer" displayName="XmlSerializer" namespace="PlanetTelex.Serialization" assembly="PlanetTelex">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:PlanetTelex.Serialization.ISerializer" displayName="ISerializer" namespace="PlanetTelex.Serialization" fullName="PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex" />
          </hierarchyInterfaces>
        </hierarchyType>
        <hierarchyType id="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{TKey,TValue}" namespace="System.Collections.Generic" assembly="mscorlib">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:System.Collections.Generic.ICollection`1" displayName="ICollection{T}" namespace="System.Collections.Generic" fullName="System.Collections.Generic.ICollection`1" assembly="mscorlib" />
            <hierarchyInterface id="T:System.Collections.Generic.IDictionary`2" displayName="IDictionary{TKey,TValue}" namespace="System.Collections.Generic" fullName="System.Collections.Generic.IDictionary`2" assembly="mscorlib" />
            <hierarchyInterface id="T:System.Collections.Generic.IEnumerable`1" displayName="IEnumerable{T}" namespace="System.Collections.Generic" fullName="System.Collections.Generic.IEnumerable`1" assembly="mscorlib" />
            <hierarchyInterface id="T:System.Collections.ICollection" displayName="ICollection" namespace="System.Collections" fullName="System.Collections.ICollection" assembly="mscorlib" />
            <hierarchyInterface id="T:System.Collections.IDictionary" displayName="IDictionary" namespace="System.Collections" fullName="System.Collections.IDictionary" assembly="mscorlib" />
            <hierarchyInterface id="T:System.Collections.IEnumerable" displayName="IEnumerable" namespace="System.Collections" fullName="System.Collections.IEnumerable" assembly="mscorlib" />
            <hierarchyInterface id="T:System.Runtime.Serialization.IDeserializationCallback" displayName="IDeserializationCallback" namespace="System.Runtime.Serialization" fullName="System.Runtime.Serialization.IDeserializationCallback" assembly="mscorlib" />
            <hierarchyInterface id="T:System.Runtime.Serialization.ISerializable" displayName="ISerializable" namespace="System.Runtime.Serialization" fullName="System.Runtime.Serialization.ISerializable" assembly="mscorlib" />
          </hierarchyInterfaces>
          <hierarchyType id="T:PlanetTelex.Serialization.XmlSerializableDictionary`2" displayName="XmlSerializableDictionary{TKey,TValue}" namespace="PlanetTelex.Serialization" assembly="PlanetTelex">
            <hierarchyInterfaces>
              <hierarchyInterface id="T:System.Xml.Serialization.IXmlSerializable" displayName="IXmlSerializable" namespace="System.Xml.Serialization" fullName="System.Xml.Serialization.IXmlSerializable" assembly="System.Xml" />
            </hierarchyInterfaces>
          </hierarchyType>
        </hierarchyType>
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Attributes">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:System.Attribute" displayName="Attribute" namespace="System" assembly="mscorlib">
          <hierarchyType id="T:PlanetTelex.Attributes.MimeTypeAttribute" displayName="MimeTypeAttribute" namespace="PlanetTelex.Attributes" assembly="PlanetTelex" />
        </hierarchyType>
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Web.Mvc.Extensions.Ajax">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Web.Mvc.Extensions.Ajax.AjaxExtensions" displayName="AjaxExtensions" namespace="PlanetTelex.Web.Mvc.Extensions.Ajax" assembly="PlanetTelex.Web.Mvc" />
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Drawing">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Drawing.ImageEditor" displayName="ImageEditor" namespace="PlanetTelex.Drawing" assembly="PlanetTelex.Drawing" />
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Web.Common">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Web.Common.HtmlString" displayName="HtmlString" namespace="PlanetTelex.Web.Common" assembly="PlanetTelex.Web" />
        <hierarchyType id="T:PlanetTelex.Web.Common.ISelectable" displayName="ISelectable" namespace="PlanetTelex.Web.Common" assembly="PlanetTelex.Web" />
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Collections">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Collections.IPaginatedList`1" displayName="IPaginatedList{T}" namespace="PlanetTelex.Collections" assembly="PlanetTelex">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:System.Collections.Generic.ICollection`1" displayName="ICollection{T}" namespace="System.Collections.Generic" fullName="System.Collections.Generic.ICollection`1" assembly="mscorlib" />
            <hierarchyInterface id="T:System.Collections.Generic.IEnumerable`1" displayName="IEnumerable{T}" namespace="System.Collections.Generic" fullName="System.Collections.Generic.IEnumerable`1" assembly="mscorlib" />
            <hierarchyInterface id="T:System.Collections.Generic.IList`1" displayName="IList{T}" namespace="System.Collections.Generic" fullName="System.Collections.Generic.IList`1" assembly="mscorlib" />
            <hierarchyInterface id="T:System.Collections.IEnumerable" displayName="IEnumerable" namespace="System.Collections" fullName="System.Collections.IEnumerable" assembly="mscorlib" />
          </hierarchyInterfaces>
        </hierarchyType>
        <hierarchyType id="T:PlanetTelex.Collections.PaginatedList`1" displayName="PaginatedList{T}" namespace="PlanetTelex.Collections" assembly="PlanetTelex">
          <hierarchyInterfaces>
            <hierarchyInterface id="T:PlanetTelex.Collections.IPaginatedList`1" displayName="IPaginatedList{T}" namespace="PlanetTelex.Collections" fullName="PlanetTelex.Collections.IPaginatedList`1" assembly="PlanetTelex" />
            <hierarchyInterface id="T:System.Collections.Generic.ICollection`1" displayName="ICollection{T}" namespace="System.Collections.Generic" fullName="System.Collections.Generic.ICollection`1" assembly="mscorlib" />
            <hierarchyInterface id="T:System.Collections.Generic.IEnumerable`1" displayName="IEnumerable{T}" namespace="System.Collections.Generic" fullName="System.Collections.Generic.IEnumerable`1" assembly="mscorlib" />
            <hierarchyInterface id="T:System.Collections.Generic.IList`1" displayName="IList{T}" namespace="System.Collections.Generic" fullName="System.Collections.Generic.IList`1" assembly="mscorlib" />
            <hierarchyInterface id="T:System.Collections.IEnumerable" displayName="IEnumerable" namespace="System.Collections" fullName="System.Collections.IEnumerable" assembly="mscorlib" />
          </hierarchyInterfaces>
        </hierarchyType>
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Web">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Web.Settings" displayName="Settings" namespace="PlanetTelex.Web" assembly="PlanetTelex.Web" />
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Common.Models">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Common.Models.Address" displayName="Address" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Common.Models.BusinessHours" displayName="BusinessHours" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Common.Models.CreditCard" displayName="CreditCard" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Common.Models.Email" displayName="Email" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Common.Models.HoursOfOperation" displayName="HoursOfOperation" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Common.Models.Person" displayName="Person" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" />
        <hierarchyType id="T:System.ValueType" displayName="ValueType" namespace="System" assembly="mscorlib">
          <hierarchyType id="T:System.Enum" displayName="Enum" namespace="System" assembly="mscorlib">
            <hierarchyInterfaces>
              <hierarchyInterface id="T:System.IComparable" displayName="IComparable" namespace="System" fullName="System.IComparable" assembly="mscorlib" />
              <hierarchyInterface id="T:System.IConvertible" displayName="IConvertible" namespace="System" fullName="System.IConvertible" assembly="mscorlib" />
              <hierarchyInterface id="T:System.IFormattable" displayName="IFormattable" namespace="System" fullName="System.IFormattable" assembly="mscorlib" />
            </hierarchyInterfaces>
            <hierarchyType id="T:PlanetTelex.Common.Models.CreditCardType" displayName="CreditCardType" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" />
          </hierarchyType>
        </hierarchyType>
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Common">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Common.RegExPattern" displayName="RegExPattern" namespace="PlanetTelex.Common" assembly="PlanetTelex" />
        <hierarchyType id="T:System.ValueType" displayName="ValueType" namespace="System" assembly="mscorlib">
          <hierarchyType id="T:System.Enum" displayName="Enum" namespace="System" assembly="mscorlib">
            <hierarchyInterfaces>
              <hierarchyInterface id="T:System.IComparable" displayName="IComparable" namespace="System" fullName="System.IComparable" assembly="mscorlib" />
              <hierarchyInterface id="T:System.IConvertible" displayName="IConvertible" namespace="System" fullName="System.IConvertible" assembly="mscorlib" />
              <hierarchyInterface id="T:System.IFormattable" displayName="IFormattable" namespace="System" fullName="System.IFormattable" assembly="mscorlib" />
            </hierarchyInterfaces>
            <hierarchyType id="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" />
            <hierarchyType id="T:PlanetTelex.Common.Order" displayName="Order" namespace="PlanetTelex.Common" assembly="PlanetTelex" />
            <hierarchyType id="T:PlanetTelex.Common.Seasons" displayName="Seasons" namespace="PlanetTelex.Common" assembly="PlanetTelex" />
            <hierarchyType id="T:PlanetTelex.Common.TemperatureUnit" displayName="TemperatureUnit" namespace="PlanetTelex.Common" assembly="PlanetTelex" />
            <hierarchyType id="T:PlanetTelex.Common.TextEncoding" displayName="TextEncoding" namespace="PlanetTelex.Common" assembly="PlanetTelex" />
            <hierarchyType id="T:PlanetTelex.Common.TimeMode" displayName="TimeMode" namespace="PlanetTelex.Common" assembly="PlanetTelex" />
          </hierarchyType>
        </hierarchyType>
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Utilities">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Utilities.CollectionUtility" displayName="CollectionUtility" namespace="PlanetTelex.Utilities" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Utilities.ConfigurationUtility" displayName="ConfigurationUtility" namespace="PlanetTelex.Utilities" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Utilities.DateTimeUtility" displayName="DateTimeUtility" namespace="PlanetTelex.Utilities" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Utilities.EnumUtility" displayName="EnumUtility" namespace="PlanetTelex.Utilities" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Utilities.FileUtility" displayName="FileUtility" namespace="PlanetTelex.Utilities" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Utilities.MathematicsUtility" displayName="MathematicsUtility" namespace="PlanetTelex.Utilities" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Utilities.NetUtility" displayName="NetUtility" namespace="PlanetTelex.Utilities" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Utilities.ObjectUtility" displayName="ObjectUtility" namespace="PlanetTelex.Utilities" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Utilities.StringUtility" displayName="StringUtility" namespace="PlanetTelex.Utilities" assembly="PlanetTelex" />
        <hierarchyType id="T:PlanetTelex.Utilities.XmlUtility" displayName="XmlUtility" namespace="PlanetTelex.Utilities" assembly="PlanetTelex" />
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Settings" displayName="Settings" namespace="PlanetTelex" assembly="PlanetTelex" />
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Web.Mvc.Extensions.Html.Links">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Web.Mvc.Extensions.Html.Links.MirrorSiteLinkExtensions" displayName="MirrorSiteLinkExtensions" namespace="PlanetTelex.Web.Mvc.Extensions.Html.Links" assembly="PlanetTelex.Web.Mvc" />
        <hierarchyType id="T:PlanetTelex.Web.Mvc.Extensions.Html.Links.UrlLinkExtensions" displayName="UrlLinkExtensions" namespace="PlanetTelex.Web.Mvc.Extensions.Html.Links" assembly="PlanetTelex.Web.Mvc" />
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Web.Common.ModelViews">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Web.Common.ModelViews.HoursOfOperationView" displayName="HoursOfOperationView" namespace="PlanetTelex.Web.Common.ModelViews" assembly="PlanetTelex.Web" />
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Web.Request">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:PlanetTelex.Web.Request.UriParts" displayName="UriParts" namespace="PlanetTelex.Web.Request" assembly="PlanetTelex.Web" />
        <hierarchyType id="T:PlanetTelex.Web.Request.UriScheme" displayName="UriScheme" namespace="PlanetTelex.Web.Request" assembly="PlanetTelex.Web" />
        <hierarchyType id="T:System.ValueType" displayName="ValueType" namespace="System" assembly="mscorlib">
          <hierarchyType id="T:System.Enum" displayName="Enum" namespace="System" assembly="mscorlib">
            <hierarchyInterfaces>
              <hierarchyInterface id="T:System.IComparable" displayName="IComparable" namespace="System" fullName="System.IComparable" assembly="mscorlib" />
              <hierarchyInterface id="T:System.IConvertible" displayName="IConvertible" namespace="System" fullName="System.IConvertible" assembly="mscorlib" />
              <hierarchyInterface id="T:System.IFormattable" displayName="IFormattable" namespace="System" fullName="System.IFormattable" assembly="mscorlib" />
            </hierarchyInterfaces>
            <hierarchyType id="T:PlanetTelex.Web.Request.UriSchemeType" displayName="UriSchemeType" namespace="PlanetTelex.Web.Request" assembly="PlanetTelex.Web" />
          </hierarchyType>
        </hierarchyType>
      </hierarchyType>
    </namespaceHierarchy>
    <namespaceHierarchy name="PlanetTelex.Web.Mvc.Attributes">
      <hierarchyType id="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib">
        <hierarchyType id="T:System.Attribute" displayName="Attribute" namespace="System" assembly="mscorlib">
          <hierarchyType id="T:System.Web.Mvc.FilterAttribute" displayName="FilterAttribute" namespace="System.Web.Mvc" assembly="System.Web.Mvc">
            <hierarchyType id="T:System.Web.Mvc.ActionFilterAttribute" displayName="ActionFilterAttribute" namespace="System.Web.Mvc" assembly="System.Web.Mvc">
              <hierarchyInterfaces>
                <hierarchyInterface id="T:System.Web.Mvc.IActionFilter" displayName="IActionFilter" namespace="System.Web.Mvc" fullName="System.Web.Mvc.IActionFilter" assembly="System.Web.Mvc" />
                <hierarchyInterface id="T:System.Web.Mvc.IResultFilter" displayName="IResultFilter" namespace="System.Web.Mvc" fullName="System.Web.Mvc.IResultFilter" assembly="System.Web.Mvc" />
              </hierarchyInterfaces>
              <hierarchyType id="T:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute" displayName="CacheDurationAttribute" namespace="PlanetTelex.Web.Mvc.Attributes" assembly="PlanetTelex.Web.Mvc" />
              <hierarchyType id="T:PlanetTelex.Web.Mvc.Attributes.CompressOutputAttribute" displayName="CompressOutputAttribute" namespace="PlanetTelex.Web.Mvc.Attributes" assembly="PlanetTelex.Web.Mvc" />
            </hierarchyType>
          </hierarchyType>
        </hierarchyType>
      </hierarchyType>
    </namespaceHierarchy>
  </namespaceHierarchies>
  <assembly name="PlanetTelex" version="2.0.0.0">
    <assemblyReference name="mscorlib" />
    <assemblyReference name="System.Xml" />
    <assemblyReference name="System.Core" />
    <assemblyReference name="System" />
    <assemblyReference name="System.Runtime.Serialization" />
    <assemblyReference name="System.Configuration" />
    <assemblyReference name="System.Data" />
    <assemblyReference name="System.ServiceModel.Web" />
    <attribute name="System.Security.AllowPartiallyTrustedCallersAttribute" target="assembly" />
    <attribute name="System.Runtime.CompilerServices.CompilationRelaxationsAttribute" target="assembly">
      <property name="CompilationRelaxations" type="System.Int32" value="8" />
    </attribute>
    <attribute name="System.Resources.NeutralResourcesLanguageAttribute" target="assembly">
      <property name="CultureName" type="System.String" value="&quot;en-US&quot;" />
      <property name="Location" type="System.Resources.UltimateResourceFallbackLocation" value="UltimateResourceFallbackLocation.MainAssembly" />
    </attribute>
    <attribute name="System.Reflection.AssemblyDescriptionAttribute" target="assembly">
      <property name="Description" type="System.String" value="&quot;A .Net library written in C#.&quot;" />
    </attribute>
    <attribute name="System.Reflection.AssemblyConfigurationAttribute" target="assembly">
      <property name="Configuration" type="System.String" value="&quot;&quot;" />
    </attribute>
    <attribute name="System.Runtime.InteropServices.GuidAttribute" target="assembly">
      <property name="Value" type="System.String" value="&quot;519cfc57-67a7-4c06-8cc8-4d8eaf3449e3&quot;" />
    </attribute>
    <attribute name="System.Diagnostics.DebuggableAttribute" target="assembly">
      <property name="IsJITTrackingEnabled" type="System.Boolean" value="False" />
      <property name="IsJITOptimizerDisabled" type="System.Boolean" value="False" />
      <property name="DebuggingFlags" type="System.Diagnostics.DebuggableAttribute+DebuggingModes" value="DebuggingModes.IgnoreSymbolStoreSequencePoints" />
    </attribute>
    <attribute name="System.Reflection.AssemblyCompanyAttribute" target="assembly">
      <property name="Company" type="System.String" value="&quot;Planet Telex, Inc.&quot;" />
    </attribute>
    <attribute name="System.CLSCompliantAttribute" target="assembly">
      <property name="IsCompliant" type="System.Boolean" value="True" />
    </attribute>
    <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" target="assembly" />
    <attribute name="System.Reflection.AssemblyTitleAttribute" target="assembly">
      <property name="Title" type="System.String" value="&quot;Planet Telex .Net Library&quot;" />
    </attribute>
    <attribute name="System.Reflection.AssemblyFileVersionAttribute" target="assembly">
      <property name="Version" type="System.String" value="&quot;2.0.0.0&quot;" />
    </attribute>
    <attribute name="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" target="assembly">
      <property name="WrapNonExceptionThrows" type="System.Boolean" value="True" />
    </attribute>
    <attribute name="System.Reflection.AssemblyProductAttribute" target="assembly">
      <property name="Product" type="System.String" value="&quot;Planet Telex .Net Library&quot;" />
    </attribute>
    <attribute name="System.Reflection.AssemblyCopyrightAttribute" target="assembly">
      <property name="Copyright" type="System.String" value="&quot;Copyright © 2007 - 2015&quot;" />
    </attribute>
    <attribute name="System.Reflection.AssemblyTrademarkAttribute" target="assembly">
      <property name="Trademark" type="System.String" value="&quot;&quot;" />
    </attribute>
    <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" target="assembly">
      <property name="Value" type="System.Boolean" value="False" />
    </attribute>
    <module name="PlanetTelex.dll">
      <namespace name="PlanetTelex.Utilities">
        <documentation>
          <summary>General utilities.</summary>
        </documentation>
        <class name="MathematicsUtility" displayName="MathematicsUtility" namespace="PlanetTelex.Utilities" id="T:PlanetTelex.Utilities.MathematicsUtility" access="Public">
          <documentation><summary> Utility methods that assist with mathematical calculations. </summary></documentation>
          <constructor name=".ctor" id="M:PlanetTelex.Utilities.MathematicsUtility.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Utilities.MathematicsUtility" /> class.</summary>
            </documentation>
          </constructor>
          <method name="DegreesToRadians" displayName="DegreesToRadians" id="M:PlanetTelex.Utilities.MathematicsUtility.DegreesToRadians(System.Double)" access="Public" contract="Virtual" valueType="true">
            <returnType typeId="T:System.Double" displayName="Double" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Converts degrees into radians. </summary>
<param name="degrees">Degrees</param>
<returns>Radians</returns></documentation>
            <parameter name="degrees" typeId="T:System.Double" displayName="Double" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="RadiansToDegrees" displayName="RadiansToDegrees" id="M:PlanetTelex.Utilities.MathematicsUtility.RadiansToDegrees(System.Double)" access="Public" contract="Virtual" valueType="true">
            <returnType typeId="T:System.Double" displayName="Double" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Converts radians into degrees. </summary>
<param name="radians">Radians</param>
<returns>Degrees</returns></documentation>
            <parameter name="radians" typeId="T:System.Double" displayName="Double" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="FractionToDouble" displayName="FractionToDouble" id="M:PlanetTelex.Utilities.MathematicsUtility.FractionToDouble(System.String)" access="Public" contract="Virtual" valueType="true">
            <returnType typeId="T:System.Double" displayName="Double" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Converts fractions to doubles. </summary>
<param name="fraction">A string in the format 'a/b'.</param>
<returns>A double.</returns></documentation>
            <parameter name="fraction" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="DoubleToFraction" displayName="DoubleToFraction" id="M:PlanetTelex.Utilities.MathematicsUtility.DoubleToFraction(System.Double,System.Double)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Converts doubles to fractions. </summary>
<param name="toConvert">The decimal to convert.</param>
<param name="errorMargin">The error margin, a good starting one is 0.00000001. Adjust as needed, processing time will increase as this precision does.</param>
<returns>A string in the format 'a/b'.</returns></documentation>
            <parameter name="toConvert" typeId="T:System.Double" displayName="Double" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="errorMargin" typeId="T:System.Double" displayName="Double" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Utilities.MathematicsUtility.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Utilities.MathematicsUtility.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Utilities.MathematicsUtility.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Utilities.MathematicsUtility.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Utilities.MathematicsUtility.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Utilities.MathematicsUtility.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="FileUtility" displayName="FileUtility" namespace="PlanetTelex.Utilities" id="T:PlanetTelex.Utilities.FileUtility" access="Public">
          <documentation><summary> Utility methods for file and assembly management. </summary></documentation>
          <constructor name=".ctor" id="M:PlanetTelex.Utilities.FileUtility.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Utilities.FileUtility" /> class.</summary>
            </documentation>
          </constructor>
          <method name="IsDebugAssembly" displayName="IsDebugAssembly" id="M:PlanetTelex.Utilities.FileUtility.IsDebugAssembly(System.String)" access="Public" contract="Virtual" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines whether the provided assembly was compiled in 'Debug' mode. </summary>
<param name="assemblyName">Name of the assembly.</param>
<returns>
  <c>true</c> if this is a debug assembly; otherwise, <c>false</c>. </returns></documentation>
            <parameter name="assemblyName" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetEmbeddedFile" displayName="GetEmbeddedFile" id="M:PlanetTelex.Utilities.FileUtility.GetEmbeddedFile(System.String,System.String)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.IO.Stream" displayName="Stream" namespace="System.IO" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Gets an embedded file out of a given assembly. </summary>
<param name="assemblyName">The namespace of you assembly.</param>
<param name="fileName">The name of the file to extract.</param>
<returns>A <see cref="T:System.IO.Stream" />.</returns></documentation>
            <parameter name="assemblyName" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="fileName" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetEmbeddedResource" displayName="GetEmbeddedResource" id="M:PlanetTelex.Utilities.FileUtility.GetEmbeddedResource(System.String,System.String,System.String,System.String)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Gets the embedded resource out of a given assembly. </summary>
<param name="assemblyName">Name of the assembly.</param>
<param name="defaultNamespace">Default Namespace associated with the assembly</param>
<param name="resourceFileName">Name of the resource file.</param>
<param name="resourceKey">The resource key.</param>
<returns>A string.</returns></documentation>
            <parameter name="assemblyName" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="defaultNamespace" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="resourceFileName" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="resourceKey" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetResourceDataFromResourceFile" displayName="GetResourceDataFromResourceFile" id="M:PlanetTelex.Utilities.FileUtility.GetResourceDataFromResourceFile(System.String,System.String)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.Collections.Generic.IList`1" displayName="IList{KeyValuePair{String,String}}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="KeyValuePair`2" displayName="KeyValuePair{String,String}" namespace="System.Collections.Generic" typeId="T:System.Collections.Generic.KeyValuePair`2" assembly="mscorlib">
                <genericargument name="String" displayName="String" namespace="System" typeId="T:System.String" assembly="mscorlib" />
                <genericargument name="String" displayName="String" namespace="System" typeId="T:System.String" assembly="mscorlib" />
              </genericargument>
            </returnType>
            <documentation><summary> Returns all resources in a given .resx file as a List of KeyValuePairs. </summary>
<param name="filePath">full path to the resource file</param>
<param name="language">in the format "[language code]-[country code]", example: "en-US"</param>
<returns>An IList of string-string KeyValuePairs.</returns></documentation>
            <parameter name="filePath" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="language" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Utilities.FileUtility.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Utilities.FileUtility.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Utilities.FileUtility.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Utilities.FileUtility.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Utilities.FileUtility.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Utilities.FileUtility.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="CollectionUtility" displayName="CollectionUtility" namespace="PlanetTelex.Utilities" id="T:PlanetTelex.Utilities.CollectionUtility" access="Public">
          <documentation><summary> Utility methods that assist in collection manipulation. </summary></documentation>
          <constructor name=".ctor" id="M:PlanetTelex.Utilities.CollectionUtility.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Utilities.CollectionUtility" /> class.</summary>
            </documentation>
          </constructor>
          <method name="RemoveCollectionDuplicates{T}" displayName="RemoveCollectionDuplicates{T}" id="M:PlanetTelex.Utilities.CollectionUtility.RemoveCollectionDuplicates``1(System.Collections.ObjectModel.Collection{``0})" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.Collections.ObjectModel.Collection`1" displayName="Collection{T}" namespace="System.Collections.ObjectModel" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
            </returnType>
            <documentation><summary> Removes duplicates from a collection of comparable items. </summary>
<param name="toRemoveDuplicatesFrom">The collection to remove duplicates from.</param>
<returns>A new collection with unique items.</returns></documentation>
            <parameter name="toRemoveDuplicatesFrom" typeId="T:System.Collections.ObjectModel.Collection`1" displayName="Collection{T}" namespace="System.Collections.ObjectModel" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
            </parameter>
            <genericargument name="T" displayName="T" />
          </method>
          <method name="AddDictionary{T}" displayName="AddDictionary{T}" id="M:PlanetTelex.Utilities.CollectionUtility.AddDictionary``2(System.Collections.Generic.Dictionary{``0,``1},System.Collections.Generic.Dictionary{``0,``1},System.Boolean)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{TTV,TTV}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
              <genericargument name="TV" displayName="TV" />
            </returnType>
            <documentation><summary> Adds the items in a provided dictionary to a source dictionary. </summary>
<typeparam name="T">The key data type.</typeparam>
<typeparam name="TV">The value data type.</typeparam>
<param name="source">The dictionary to add to.</param>
<param name="toAdd">The dictionary with items to add.</param>
<param name="overwrite">if set to <c>true</c> overwrite values in the source dictionary with values in the dictionary being added.</param>
<returns>The source dictionary with new items added.</returns></documentation>
            <parameter name="source" typeId="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{TTV,TTV}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
              <genericargument name="TV" displayName="TV" />
            </parameter>
            <parameter name="toAdd" typeId="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{TTV,TTV}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
              <genericargument name="TV" displayName="TV" />
            </parameter>
            <parameter name="overwrite" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <genericargument name="T" displayName="T" />
            <genericargument name="TV" displayName="TV" />
          </method>
          <method name="SortArrayList" displayName="SortArrayList" id="M:PlanetTelex.Utilities.CollectionUtility.SortArrayList(System.Collections.ArrayList,System.Type,System.String,PlanetTelex.Common.Order)" access="Public" contract="Virtual" valueType="false" overload="1">
            <returnType typeId="T:System.Collections.ArrayList" displayName="ArrayList" namespace="System.Collections" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Sorts an ArrayList of objects by a given property of that class in the specified order. </summary>
<param name="toSort">The ArrayList to sort.</param>
<param name="objectsType">The type of objects we are sorting.</param>
<param name="sortByProperty">The property to sort by. The data type of this property must be either a primitive type or a type that implements IComparable.</param>
<param name="order">Ascending or descending.</param>
<returns>A new, sorted ArrayList.</returns></documentation>
            <parameter name="toSort" typeId="T:System.Collections.ArrayList" displayName="ArrayList" namespace="System.Collections" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="objectsType" typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="sortByProperty" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="order" typeId="T:PlanetTelex.Common.Order" displayName="Order" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true" />
          </method>
          <method name="SortArrayList" displayName="SortArrayList" id="M:PlanetTelex.Utilities.CollectionUtility.SortArrayList(System.Collections.ArrayList,System.String,PlanetTelex.Common.Order)" access="Public" contract="Virtual" valueType="false" overload="2">
            <returnType typeId="T:System.Collections.ArrayList" displayName="ArrayList" namespace="System.Collections" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Sorts an ArrayList of objects by a given property of that class in the specified order. </summary>
<param name="toSort">The ArrayList to sort.</param>
<param name="sortByProperty">The property to sort by. The data type of this property must be either a primative type or a type that implements IComparable.</param>
<param name="order">Ascending or descending.</param>
<returns>A new, sorted ArrayList.</returns></documentation>
            <parameter name="toSort" typeId="T:System.Collections.ArrayList" displayName="ArrayList" namespace="System.Collections" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="sortByProperty" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="order" typeId="T:PlanetTelex.Common.Order" displayName="Order" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true" />
          </method>
          <method name="SortIEnumberable{T}" displayName="SortIEnumberable{T}" id="M:PlanetTelex.Utilities.CollectionUtility.SortIEnumberable``1(System.Collections.Generic.IEnumerable{``0},System.String,PlanetTelex.Common.Order)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.Collections.Generic.IEnumerable`1" displayName="IEnumerable{T}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
            </returnType>
            <documentation><summary> Sorts an IEnumberable by a given property of their contained class in the specified order. </summary>
<typeparam name="T">The type of objects in the collection.</typeparam>
<param name="toSort">This IEnumerable.</param>
<param name="sortByProperty">The property to sort by. The data type of this property must be either a primative type or a type that implements IComparable.</param>
<param name="order">Ascending or descending.</param>
<returns>A new, sorted IEnumerable.</returns></documentation>
            <parameter name="toSort" typeId="T:System.Collections.Generic.IEnumerable`1" displayName="IEnumerable{T}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
            </parameter>
            <parameter name="sortByProperty" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="order" typeId="T:PlanetTelex.Common.Order" displayName="Order" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true" />
            <genericargument name="T" displayName="T" />
          </method>
          <method name="SwapDictionaryKeysAndValues{T}" displayName="SwapDictionaryKeysAndValues{T}" id="M:PlanetTelex.Utilities.CollectionUtility.SwapDictionaryKeysAndValues``2(System.Collections.Generic.Dictionary{``0,``1})" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{TVT,TVT}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="TV" displayName="TV" />
              <genericargument name="T" displayName="T" />
            </returnType>
            <documentation><summary> Swaps the keys and values of a given dictionary. </summary>
<typeparam name="T">The key data type.</typeparam>
<typeparam name="TV">The value data type.</typeparam>
<param name="toSwap">A key-value dictionary to swap the key-value pairs.</param>
<returns>A new dictionary with the key-value pairs interchanged.</returns></documentation>
            <parameter name="toSwap" typeId="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{TTV,TTV}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
              <genericargument name="TV" displayName="TV" />
            </parameter>
            <genericargument name="T" displayName="T" />
            <genericargument name="TV" displayName="TV" />
          </method>
          <method name="ArrayListItemPropertyValues" displayName="ArrayListItemPropertyValues" id="M:PlanetTelex.Utilities.CollectionUtility.ArrayListItemPropertyValues(System.Collections.ArrayList,System.String)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.Collections.ArrayList" displayName="ArrayList" namespace="System.Collections" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Lists the value of the specified property for each item in the ArrayList. </summary>
<param name="objects">A list of objects.</param>
<param name="propertyName">A property name of the datatype contained in the ArrayList.</param>
<returns>A new ArrayList with the values of the specified property.</returns></documentation>
            <parameter name="objects" typeId="T:System.Collections.ArrayList" displayName="ArrayList" namespace="System.Collections" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="propertyName" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Group" displayName="Group" id="M:PlanetTelex.Utilities.CollectionUtility.Group(System.Collections.ArrayList,System.String)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{Object,ArrayList}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="Object" displayName="Object" namespace="System" typeId="T:System.Object" assembly="mscorlib" />
              <genericargument name="ArrayList" displayName="ArrayList" namespace="System.Collections" typeId="T:System.Collections.ArrayList" assembly="mscorlib" />
            </returnType>
            <documentation><summary> Creates a Dictionary that groups items in the given ArrayList by a specified property of the contained items. </summary>
<param name="objects">A list of objects.</param>
<param name="property">The property to group on.</param>
<returns>An object-ArrayList Dictionary where the values of the provided property are the keys, and the values are the items in the collection sharing that property value.</returns></documentation>
            <parameter name="objects" typeId="T:System.Collections.ArrayList" displayName="ArrayList" namespace="System.Collections" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="property" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Utilities.CollectionUtility.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Utilities.CollectionUtility.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Utilities.CollectionUtility.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Utilities.CollectionUtility.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Utilities.CollectionUtility.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Utilities.CollectionUtility.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="ConfigurationUtility" displayName="ConfigurationUtility" namespace="PlanetTelex.Utilities" id="T:PlanetTelex.Utilities.ConfigurationUtility" access="Public">
          <documentation><summary> Utility methods that assist in configuration settings access. </summary></documentation>
          <constructor name=".ctor" id="M:PlanetTelex.Utilities.ConfigurationUtility.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Utilities.ConfigurationUtility" /> class.</summary>
            </documentation>
          </constructor>
          <method name="GetAppSetting" displayName="GetAppSetting" id="M:PlanetTelex.Utilities.ConfigurationUtility.GetAppSetting(System.String,System.String)" access="Public" contract="Virtual" valueType="false" overload="1">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Gets the specified application setting. </summary>
<param name="name">The application setting name.</param>
<param name="defaultValue">The default value.</param>
<returns>The application setting value.</returns></documentation>
            <parameter name="name" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="defaultValue" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetAppSetting" displayName="GetAppSetting" id="M:PlanetTelex.Utilities.ConfigurationUtility.GetAppSetting(System.String,System.Boolean)" access="Public" contract="Virtual" valueType="true" overload="2">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Gets the specified application setting. </summary>
<param name="name">The application setting name.</param>
<param name="defaultValue">The default value.</param>
<returns>The application setting value.</returns></documentation>
            <parameter name="name" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="defaultValue" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetAppSetting" displayName="GetAppSetting" id="M:PlanetTelex.Utilities.ConfigurationUtility.GetAppSetting(System.String,System.Int32)" access="Public" contract="Virtual" valueType="true" overload="3">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Gets the specified application setting. </summary>
<param name="name">The application setting name.</param>
<param name="defaultValue">The default value.</param>
<returns>The application setting value.</returns></documentation>
            <parameter name="name" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="defaultValue" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Utilities.ConfigurationUtility.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Utilities.ConfigurationUtility.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Utilities.ConfigurationUtility.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Utilities.ConfigurationUtility.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Utilities.ConfigurationUtility.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Utilities.ConfigurationUtility.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="NetUtility" displayName="NetUtility" namespace="PlanetTelex.Utilities" id="T:PlanetTelex.Utilities.NetUtility" access="Public">
          <documentation><summary> Utility methods for basic networking operations. </summary></documentation>
          <constructor name=".ctor" id="M:PlanetTelex.Utilities.NetUtility.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Utilities.NetUtility" /> class.</summary>
            </documentation>
          </constructor>
          <method name="SendEmail" displayName="SendEmail" id="M:PlanetTelex.Utilities.NetUtility.SendEmail(PlanetTelex.Common.Models.Email,System.String@,System.Net.Mail.SmtpException@)" access="Public" contract="Virtual" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Sends an email from the SMTP server specified in the application configuration file. </summary>
<param name="toSend">The email to send.</param>
<param name="message">A message generated by this method.</param>
<param name="exception">The SMTP exception should one occur.</param>
<returns>
  <c>true</c> if the email sent successfully; otherwise, <c>false</c>.</returns></documentation>
            <parameter name="toSend" typeId="T:PlanetTelex.Common.Models.Email" displayName="Email" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" nullable="false" valueType="false" />
            <parameter name="message" direction="out" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
              <attribute name="System.Runtime.InteropServices.OutAttribute" />
            </parameter>
            <parameter name="exception" direction="out" typeId="T:System.Net.Mail.SmtpException" displayName="SmtpException" namespace="System.Net.Mail" assembly="System" nullable="false" valueType="false">
              <attribute name="System.Runtime.InteropServices.OutAttribute" />
            </parameter>
          </method>
          <method name="PingUrl" displayName="PingUrl" id="M:PlanetTelex.Utilities.NetUtility.PingUrl(System.String)" access="Public" contract="Virtual" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Pings the specified URL, returning true only if the responding http status code is OK (200). </summary>
<param name="toPing">The URL to ping.</param>
<returns>
  <c>true</c> if the URL returned status code 200 when requested; otherwise, <c>false</c>.</returns></documentation>
            <parameter name="toPing" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Utilities.NetUtility.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Utilities.NetUtility.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Utilities.NetUtility.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Utilities.NetUtility.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Utilities.NetUtility.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Utilities.NetUtility.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="StringUtility" displayName="StringUtility" namespace="PlanetTelex.Utilities" id="T:PlanetTelex.Utilities.StringUtility" access="Public">
          <documentation><summary> Utility methods that assist in string manipulation. </summary></documentation>
          <constructor name=".ctor" id="M:PlanetTelex.Utilities.StringUtility.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Utilities.StringUtility" /> class.</summary>
            </documentation>
          </constructor>
          <method name="ConvertToByteArray" displayName="ConvertToByteArray" id="M:PlanetTelex.Utilities.StringUtility.ConvertToByteArray(System.String)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.Byte" displayName="Byte" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
              <array rank="1" />
            </returnType>
            <documentation><summary> Converts this string to a byte array. It is faster than System.Text.UnicodeEncoding().GetBytes() and won't convert or drop characters like an Encoding (ASCII or Unicode) would do. </summary>
<param name="toConvert">The string to convert.</param>
<returns>A new byte array.</returns></documentation>
            <parameter name="toConvert" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ConvertFromByteArray" displayName="ConvertFromByteArray" id="M:PlanetTelex.Utilities.StringUtility.ConvertFromByteArray(System.Byte[],PlanetTelex.Common.TextEncoding)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Converts a byte array into a string of the provided encoding, supports UTF8 and ASCII. </summary>
<param name="toConvert">The byte array to convert into a string.</param>
<param name="encoding">UTF8 or ASCII encoding.</param>
<returns>A new string.</returns></documentation>
            <parameter name="toConvert" typeId="T:System.Byte" displayName="Byte" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
              <array rank="1" />
            </parameter>
            <parameter name="encoding" typeId="T:PlanetTelex.Common.TextEncoding" displayName="TextEncoding" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true" />
          </method>
          <method name="ToFlagsEnum{TEnum}" displayName="ToFlagsEnum{TEnum}" id="M:PlanetTelex.Utilities.StringUtility.ToFlagsEnum``1(System.String,``0)" access="Public" contract="Virtual" valueType="true">
            <returnType typeId="T:TEnum" displayName="StringUtility.TEnum" namespace="PlanetTelex.Utilities" assembly="PlanetTelex" nullable="false" valueType="true" />
            <documentation><summary> Converts a string of comma separated integer values into a flags enum of the provided type. </summary>
<typeparam name="TEnum">The type of the enum.</typeparam>
<param name="toConvert">The string to convert into a flags enum.</param>
<param name="defaultValue">The value the enum should have.</param>
<returns>A flags enum of the specified type and values.</returns></documentation>
            <parameter name="toConvert" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="defaultValue" typeId="T:TEnum" displayName="StringUtility.TEnum" namespace="PlanetTelex.Utilities" assembly="PlanetTelex" nullable="false" valueType="true" />
            <genericargument name="TEnum" displayName="TEnum" />
            <genericconstraints param="TEnum">
              <constraint>struct</constraint>
              <constraint>System.IConvertible</constraint>
            </genericconstraints>
          </method>
          <method name="ToNullableEnum{TEnum}" displayName="ToNullableEnum{TEnum}" id="M:PlanetTelex.Utilities.StringUtility.ToNullableEnum``1(System.String,System.Nullable{``0},System.Boolean)" access="Public" contract="Virtual" valueType="true">
            <returnType typeId="T:TEnum" displayName="Nullable{TEnum}" namespace="System" assembly="mscorlib" nullable="true" valueType="true" />
            <documentation><summary> Converts this string into a nullable enum equivalent of the provided type. </summary>
<typeparam name="TEnum">The type of the enum.</typeparam>
<param name="toConvert">The string to convert into a nullable enum.</param>
<param name="defaultValue">The value the enum should have.</param>
<param name="ignoreCase">If set to <c>true</c> ignore string casing.</param>
<returns>A nullable enum of the specified type and default value.</returns></documentation>
            <parameter name="toConvert" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="defaultValue" typeId="T:TEnum" displayName="Nullable{TEnum}" namespace="System" assembly="mscorlib" nullable="true" valueType="true" />
            <parameter name="ignoreCase" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <genericargument name="TEnum" displayName="TEnum" />
            <genericconstraints param="TEnum">
              <constraint>struct</constraint>
              <constraint>System.IConvertible</constraint>
            </genericconstraints>
          </method>
          <method name="Shorten" displayName="Shorten" id="M:PlanetTelex.Utilities.StringUtility.Shorten(System.String,System.Int32,System.String)" access="Public" contract="Virtual" valueType="false" overload="1">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Shortens a given string to a specified length. If the given string is shorter than the desired length, it will be returned unchanged. </summary>
<param name="toShorten">The string to shorten.</param>
<param name="desiredLength">The length the returning string should not exceed.</param>
<param name="suffix">A string that can be appended to the end of the given string after it is shortened. The resulting string will still not exceed the desired length, more of the original string will be shortened.</param>
<returns>A new string shortened to the specified length.</returns></documentation>
            <parameter name="toShorten" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="desiredLength" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="suffix" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Shorten" displayName="Shorten" id="M:PlanetTelex.Utilities.StringUtility.Shorten(System.String,System.Int32)" access="Public" contract="Virtual" valueType="false" overload="2">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Shortens a given string to a specified length. If the given string is shorter than the desired length, it will be returned unchanged. </summary>
<param name="toShorten">The string to shorten.</param>
<param name="desiredLength">The length the returning string should not exceed.</param>
<returns>A new string shortened to the specified length.</returns></documentation>
            <parameter name="toShorten" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="desiredLength" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="StripReturns" displayName="StripReturns" id="M:PlanetTelex.Utilities.StringUtility.StripReturns(System.String)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Removes all newline and return characters from a given string. </summary>
<param name="toStrip">The string to strip of newline and return characters.</param>
<returns>A new string stripped of all newline and return characters.</returns></documentation>
            <parameter name="toStrip" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="StripNonAlphaNumeric" displayName="StripNonAlphaNumeric" id="M:PlanetTelex.Utilities.StringUtility.StripNonAlphaNumeric(System.String)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Removes all characters that are not letters or numbers from a given string. </summary>
<param name="toStrip">The string to strip of all characters that are not letters or numbers.</param>
<returns>A new string stripped of all characters that are not letters or numbers.</returns></documentation>
            <parameter name="toStrip" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="StripHtmlTags" displayName="StripHtmlTags" id="M:PlanetTelex.Utilities.StringUtility.StripHtmlTags(System.String,System.Boolean)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Removes all HTML markup tags from a given string, leaving only the text in between them. </summary>
<param name="toStrip">The string to strip of HTML.</param>
<param name="replaceWithSpace">If set to <c>true</c> tags will be replaced with a space instead of the default empty string.</param>
<returns>A new string stripped of HTML tags.</returns></documentation>
            <parameter name="toStrip" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="replaceWithSpace" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="RemoveDiacritics" displayName="RemoveDiacritics" id="M:PlanetTelex.Utilities.StringUtility.RemoveDiacritics(System.String)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Removes accents (more broadly called diacritics) from a given string. </summary>
<param name="toStrip">The string to strip of diacritics.</param>
<returns>A new string with diacritics removed.</returns></documentation>
            <parameter name="toStrip" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="RemoveLeadingNumbers" displayName="RemoveLeadingNumbers" id="M:PlanetTelex.Utilities.StringUtility.RemoveLeadingNumbers(System.String)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Removes all numbers at the beginning of a given string, leaving everything after the first non-numeric character. </summary>
<param name="toStrip">The string from which to remove leading numbers.</param>
<returns>A new string with its leading numbers removed.</returns></documentation>
            <parameter name="toStrip" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="RemoveWhitespace" displayName="RemoveWhitespace" id="M:PlanetTelex.Utilities.StringUtility.RemoveWhitespace(System.String)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Removes all whitespace from a given string. </summary>
<param name="toRemoveFrom">The string to remove the whitespace from.</param>
<returns>A new string with its whitespace removed.</returns></documentation>
            <parameter name="toRemoveFrom" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="TitleCase" displayName="TitleCase" id="M:PlanetTelex.Utilities.StringUtility.TitleCase(System.String)" access="Public" contract="Virtual" valueType="false" overload="1">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Creates a copy of a string that is titled cased. This follows the algorithm that both the first and last words of the string are capitalized, as are most other words in the string, with the exception of a list of excluded words (and, of, etc.) This list is a comma delimited assembly resource. </summary>
<param name="toTitleCase">The string to title case.</param>
<returns>A new string that is title cased.</returns></documentation>
            <parameter name="toTitleCase" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="TitleCase" displayName="TitleCase" id="M:PlanetTelex.Utilities.StringUtility.TitleCase(System.String,System.Boolean)" access="Public" contract="Virtual" valueType="false" overload="2">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Creates a copy of a string that is titled cased. This follows the algorithm that both the first and last words of the string are capitalized, as are most other words in the string, with the exception of a list of excluded words (and, of, etc.) This list is a comma delimited assembly resource. </summary>
<param name="toTitleCase">The string to title case.</param>
<param name="forceLowercasing">If set to <c>true</c> this operation will force the rest of the string to be lowercase, otherwise the casing passed the first letter is left untouched.</param>
<returns>A new string that is title cased.</returns></documentation>
            <parameter name="toTitleCase" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="forceLowercasing" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="UppercaseFirstLetter" displayName="UppercaseFirstLetter" id="M:PlanetTelex.Utilities.StringUtility.UppercaseFirstLetter(System.String)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Creates a copy of a string in which the first letter is uppercase. </summary>
<param name="toUppercase">The string to uppercase.</param>
<returns>A new string that is uppercased.</returns></documentation>
            <parameter name="toUppercase" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="FormatPhoneNumber" displayName="FormatPhoneNumber" id="M:PlanetTelex.Utilities.StringUtility.FormatPhoneNumber(System.String)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Standardizes a US phone number string into the format: xxx-xxx-xxxx. Returns an empty string if the phone number cannot be formatted. </summary>
<param name="phoneNumber">The phone number string to format.</param>
<returns>A new string that is formatted: xxx-xxx-xxxx.</returns></documentation>
            <parameter name="phoneNumber" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ReplaceTokensWithObjectValues" displayName="ReplaceTokensWithObjectValues" id="M:PlanetTelex.Utilities.StringUtility.ReplaceTokensWithObjectValues(System.String,System.Object)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Evaluates a given string for tokens in the format: [ClassName.PropertyName]. These can also be nested: [ClassName.PropertyName.SubPropertyName] All tokens formatted this way are replaced with the corresponding values in the object provided. </summary>
<param name="tokenizedText">The text that contains tokens to be replaced.</param>
<param name="valueContainer">The object that contains the values to replace the tokens with.</param>
<returns>A new string with tokens replaced by values in the provided object.</returns></documentation>
            <parameter name="tokenizedText" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="valueContainer" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ReplaceMicrosoftWordCharacters" displayName="ReplaceMicrosoftWordCharacters" id="M:PlanetTelex.Utilities.StringUtility.ReplaceMicrosoftWordCharacters(System.String)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Replaces all special Microsoft Word characters in a string with standard characters. </summary>
<param name="msWordText">A string on which to replace Microsoft Word characters.</param>
<returns>A new string with Microsoft Word special characters replaced by standard characters.</returns></documentation>
            <parameter name="msWordText" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="IsNumeric" displayName="IsNumeric" id="M:PlanetTelex.Utilities.StringUtility.IsNumeric(System.String)" access="Public" contract="Virtual" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines whether the given string is numeric. </summary>
<param name="toTest">The string to test.</param>
<returns>
  <c>true</c> if the specified string is numeric; otherwise, <c>false</c>.</returns></documentation>
            <parameter name="toTest" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="IsBoolean" displayName="IsBoolean" id="M:PlanetTelex.Utilities.StringUtility.IsBoolean(System.String)" access="Public" contract="Virtual" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines whether the given string represents a boolean. </summary>
<param name="toTest">The string to test.</param>
<returns>
  <c>true</c> if the specified string can be converted to a boolean; otherwise, <c>false</c>.</returns></documentation>
            <parameter name="toTest" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="MD5" displayName="MD5" id="M:PlanetTelex.Utilities.StringUtility.MD5(System.String)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Generates an MD5 hash a string. </summary>
<param name="toHash">The string to hash.</param>
<returns>A new hashed string created by the MD5 algorithm.</returns></documentation>
            <parameter name="toHash" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Utilities.StringUtility.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Utilities.StringUtility.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Utilities.StringUtility.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Utilities.StringUtility.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Utilities.StringUtility.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Utilities.StringUtility.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="EnumUtility" displayName="EnumUtility" namespace="PlanetTelex.Utilities" id="T:PlanetTelex.Utilities.EnumUtility" access="Public">
          <documentation><summary> Utility methods for managing enumerations. </summary></documentation>
          <constructor name=".ctor" id="M:PlanetTelex.Utilities.EnumUtility.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Utilities.EnumUtility" /> class.</summary>
            </documentation>
          </constructor>
          <method name="ConvertToDictionary" displayName="ConvertToDictionary" id="M:PlanetTelex.Utilities.EnumUtility.ConvertToDictionary(System.Type)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{Int32,String}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="Int32" displayName="Int32" namespace="System" typeId="T:System.Int32" assembly="mscorlib" />
              <genericargument name="String" displayName="String" namespace="System" typeId="T:System.String" assembly="mscorlib" />
            </returnType>
            <documentation><summary> Converts the given enum type into a dictionary. </summary>
<param name="enumType">Type of enum that we want to make into a dictionary.</param></documentation>
            <parameter name="enumType" typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ConvertToDictionaryReadable" displayName="ConvertToDictionaryReadable" id="M:PlanetTelex.Utilities.EnumUtility.ConvertToDictionaryReadable(System.Type)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{Int32,String}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="Int32" displayName="Int32" namespace="System" typeId="T:System.Int32" assembly="mscorlib" />
              <genericargument name="String" displayName="String" namespace="System" typeId="T:System.String" assembly="mscorlib" />
            </returnType>
            <documentation><summary> Converts the given enum type into a dictionary with interface displable string values. </summary>
<param name="enumType">Type of enum that we want to make into a dictionary.</param></documentation>
            <parameter name="enumType" typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetMimeType" displayName="GetMimeType" id="M:PlanetTelex.Utilities.EnumUtility.GetMimeType(PlanetTelex.Common.FileExtension)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Gets the MIME type string of a <see cref="T:PlanetTelex.Common.FileExtension" />. </summary>
<param name="fileExtension">A file extension.</param>
<returns>A MIME type string.</returns></documentation>
            <parameter name="fileExtension" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Utilities.EnumUtility.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Utilities.EnumUtility.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Utilities.EnumUtility.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Utilities.EnumUtility.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Utilities.EnumUtility.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Utilities.EnumUtility.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="XmlUtility" displayName="XmlUtility" namespace="PlanetTelex.Utilities" id="T:PlanetTelex.Utilities.XmlUtility" access="Public">
          <documentation><summary> Utility methods that assists with xml and xml document manipulation. </summary></documentation>
          <constructor name=".ctor" id="M:PlanetTelex.Utilities.XmlUtility.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Utilities.XmlUtility" /> class.</summary>
            </documentation>
          </constructor>
          <method name="LoadXmlFile" displayName="LoadXmlFile" id="M:PlanetTelex.Utilities.XmlUtility.LoadXmlFile(System.String)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.Xml.XmlDocument" displayName="XmlDocument" namespace="System.Xml" assembly="System.Xml" nullable="false" valueType="false" />
            <documentation><summary> Loads an XML file into a document, removing the XML version/encoding node and the xmlns information. </summary>
<param name="xmlFilePath">The path and filename to the XML file on the server.</param>
<returns>An <see cref="T:System.Xml.XmlDocument" />.</returns></documentation>
            <parameter name="xmlFilePath" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="PerformXslt" displayName="PerformXslt" id="M:PlanetTelex.Utilities.XmlUtility.PerformXslt(System.Xml.XmlDocument,System.Xml.XmlUrlResolver,System.String)" access="Public" contract="Virtual" valueType="false" overload="1">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Performs and XSLT transformation on a specified XmlDocument, and returns the result as a string, removing the XML DocType node from the resulting string. </summary>
<param name="sourceXml">Source Xml Document</param>
<param name="xsltResolver">XmlUrlResolver containing correct XSLT information</param>
<param name="styleSheetUri">URI to a stylesheet for the transformation.</param>
<returns>A string with the transform applied.</returns>
<remarks> WARNING! Use of this method may result in issues with Medium Trust hosting environments. </remarks></documentation>
            <parameter name="sourceXml" typeId="T:System.Xml.XmlDocument" displayName="XmlDocument" namespace="System.Xml" assembly="System.Xml" nullable="false" valueType="false" />
            <parameter name="xsltResolver" typeId="T:System.Xml.XmlUrlResolver" displayName="XmlUrlResolver" namespace="System.Xml" assembly="System.Xml" nullable="false" valueType="false" />
            <parameter name="styleSheetUri" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="PerformXslt" displayName="PerformXslt" id="M:PlanetTelex.Utilities.XmlUtility.PerformXslt(System.Xml.XmlDocument,System.Xml.XmlUrlResolver,System.String,System.Boolean)" access="Public" contract="Virtual" valueType="false" overload="2">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Performs and XSLT transformation on a specified XmlDocument, and returns the result as a string. </summary>
<param name="sourceXml">Source Xml Document</param>
<param name="xsltResolver">XmlUrlResolver containing correct XSLT information</param>
<param name="styleSheetUri">URI to a stylesheet for the transformation.</param>
<param name="removeDoctypeNode">if set to <c>true</c> [remove doctype node].</param>
<returns>A string with the transform applied.</returns>
<remarks> WARNING! Use of this method may result in issues with Medium Trust hosting environments. </remarks></documentation>
            <parameter name="sourceXml" typeId="T:System.Xml.XmlDocument" displayName="XmlDocument" namespace="System.Xml" assembly="System.Xml" nullable="false" valueType="false" />
            <parameter name="xsltResolver" typeId="T:System.Xml.XmlUrlResolver" displayName="XmlUrlResolver" namespace="System.Xml" assembly="System.Xml" nullable="false" valueType="false" />
            <parameter name="styleSheetUri" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="removeDoctypeNode" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="AddAttributeToNode" displayName="AddAttributeToNode" id="M:PlanetTelex.Utilities.XmlUtility.AddAttributeToNode(System.Xml.XmlNode,System.String,System.String)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.Xml.XmlAttribute" displayName="XmlAttribute" namespace="System.Xml" assembly="System.Xml" nullable="false" valueType="false" />
            <documentation><summary> Adds an attribute to a given XML node. </summary>
<param name="xmlNode">The node to append the attribute to.</param>
<param name="attributeName">The attribute name.</param>
<param name="attributeValue">The attribute value.</param>
<returns>An <see cref="T:System.Xml.XmlAttribute" />.</returns></documentation>
            <parameter name="xmlNode" typeId="T:System.Xml.XmlNode" displayName="XmlNode" namespace="System.Xml" assembly="System.Xml" nullable="false" valueType="false" />
            <parameter name="attributeName" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="attributeValue" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="RemoveAttributeFromNodes" displayName="RemoveAttributeFromNodes" id="M:PlanetTelex.Utilities.XmlUtility.RemoveAttributeFromNodes(System.Xml.XmlNode,System.String,System.String)" access="Public" contract="Virtual" valueType="true">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Removes the specified attribute from all nodes contained in the given XML node. </summary>
<param name="xmlNode">The node to remove all specified attributes from.</param>
<param name="rootNode">The root node to start the removal at.</param>
<param name="attributeName">The attribute name.</param></documentation>
            <parameter name="xmlNode" typeId="T:System.Xml.XmlNode" displayName="XmlNode" namespace="System.Xml" assembly="System.Xml" nullable="false" valueType="false" />
            <parameter name="rootNode" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="attributeName" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Utilities.XmlUtility.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Utilities.XmlUtility.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Utilities.XmlUtility.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Utilities.XmlUtility.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Utilities.XmlUtility.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Utilities.XmlUtility.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="ObjectUtility" displayName="ObjectUtility" namespace="PlanetTelex.Utilities" id="T:PlanetTelex.Utilities.ObjectUtility" access="Public">
          <documentation><summary> Utility methods that assist in object manipulation. </summary></documentation>
          <constructor name=".ctor" id="M:PlanetTelex.Utilities.ObjectUtility.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Utilities.ObjectUtility" /> class.</summary>
            </documentation>
          </constructor>
          <method name="Clone{T}" displayName="Clone{T}" id="M:PlanetTelex.Utilities.ObjectUtility.Clone``1(``0)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Performs a "deep copy" of a given object, resulting in a new copy of the object in memory. </summary>
<param name="toClone">The object to clone.</param>
<returns>A new object with the same type and property values as the provided object.</returns></documentation>
            <parameter name="toClone" typeId="T:T" displayName="ObjectUtility.T" namespace="PlanetTelex.Utilities" assembly="PlanetTelex" nullable="false" valueType="false" />
            <genericargument name="T" displayName="T" />
            <genericconstraints param="T">
              <constraint>class</constraint>
              <constraint>new</constraint>
            </genericconstraints>
          </method>
          <method name="ToDictionary" displayName="ToDictionary" id="M:PlanetTelex.Utilities.ObjectUtility.ToDictionary(System.Object)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{Object,Object}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="Object" displayName="Object" namespace="System" typeId="T:System.Object" assembly="mscorlib" />
              <genericargument name="Object" displayName="Object" namespace="System" typeId="T:System.Object" assembly="mscorlib" />
            </returnType>
            <documentation><summary> Converts an object instance into a dictionary. </summary>
<remarks>This method is useful when starting with an anonymous type.</remarks>
<param name="toConvert">The object to convert.</param>
<returns>A dictionary representation of the provided object.</returns></documentation>
            <parameter name="toConvert" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToDictionary{TVal}" displayName="ToDictionary{TVal}" id="M:PlanetTelex.Utilities.ObjectUtility.ToDictionary``1(System.Object)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{String,StringTVal}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="String" displayName="String" namespace="System" typeId="T:System.String" assembly="mscorlib" />
              <genericargument name="TVal" displayName="TVal" />
            </returnType>
            <documentation><summary> Converts an object instance into a dictionary. </summary>
<remarks>This method is useful when starting with an anonymous type.</remarks>
<typeparam name="TVal">The type of the value in the dictionary.</typeparam>
<param name="toConvert">The object to convert.</param>
<returns>A dictionary representation of the provided object.</returns></documentation>
            <parameter name="toConvert" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <genericargument name="TVal" displayName="TVal" />
          </method>
          <method name="GetProperties" displayName="GetProperties" id="M:PlanetTelex.Utilities.ObjectUtility.GetProperties(System.Type)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.Collections.ObjectModel.Collection`1" displayName="Collection{PropertyInfo}" namespace="System.Collections.ObjectModel" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="PropertyInfo" displayName="PropertyInfo" namespace="System.Reflection" typeId="T:System.Reflection.PropertyInfo" assembly="mscorlib" />
            </returnType>
            <documentation><summary> Gets all the properties of a specified type. </summary>
<param name="toGetPropertiesFor">The class to get properties for.</param>
<returns>A collection of <see cref="T:System.Reflection.PropertyInfo" />.</returns></documentation>
            <parameter name="toGetPropertiesFor" typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetProperty" displayName="GetProperty" id="M:PlanetTelex.Utilities.ObjectUtility.GetProperty(System.Type,System.String)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.Reflection.PropertyInfo" displayName="PropertyInfo" namespace="System.Reflection" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Gets the <see cref="T:System.Reflection.PropertyInfo" /> of the given property in a specified type. </summary>
<param name="toGetPropertyFor">The class containing the property.</param>
<param name="propertyName">The property name to get the <see cref="T:System.Reflection.PropertyInfo" /> for.</param>
<returns>A <see cref="T:System.Reflection.PropertyInfo" />, or null if the property is not found.</returns></documentation>
            <parameter name="toGetPropertyFor" typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="propertyName" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ContainsProperty" displayName="ContainsProperty" id="M:PlanetTelex.Utilities.ObjectUtility.ContainsProperty(System.String,System.Object)" access="Public" contract="Virtual" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines if the given object has the specified property. </summary>
<param name="property">The property to check for.</param>
<param name="toCheck">The object to check.</param>
<returns>
  <c>true</c> if the specified property contains property; otherwise, <c>false</c>.</returns></documentation>
            <parameter name="property" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="toCheck" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="IsComparable" displayName="IsComparable" id="M:PlanetTelex.Utilities.ObjectUtility.IsComparable(System.Type)" access="Public" contract="Virtual" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines if a given object type can be compared. </summary>
<param name="toTest">The object to test.</param>
<returns>
  <c>true</c> if the specified object is comparable; otherwise, <c>false</c>.</returns></documentation>
            <parameter name="toTest" typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="MapObject" displayName="MapObject" id="M:PlanetTelex.Utilities.ObjectUtility.MapObject(System.Object,System.Type,System.Object,System.Type)" access="Public" contract="Virtual" valueType="false" overload="1">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Maps the properties of a given 'from' object into a given 'to' object. Properties are matched up by name. Classes do not have to be of the same type. </summary>
<param name="fromObject">The object to map from.</param>
<param name="fromType">The 'from' object's type.</param>
<param name="toObject">The object to map to.</param>
<param name="toType">The 'to' object's type.</param>
<returns>The 'to' object with values from the 'from' object applied.</returns></documentation>
            <parameter name="fromObject" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="fromType" typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="toObject" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="toType" typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="MapObject" displayName="MapObject" id="M:PlanetTelex.Utilities.ObjectUtility.MapObject(System.Object,System.Object)" access="Public" contract="Virtual" valueType="false" overload="2">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Maps the properties of a given 'from' object into a given 'to' object. Properties are matched up by name. Classes do not have to be of the same type. </summary>
<param name="fromObject">The object to map from.</param>
<param name="toObject">The object to map to.</param>
<returns>The 'to' object with values from the 'from' object applied.</returns></documentation>
            <parameter name="fromObject" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="toObject" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Utilities.ObjectUtility.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Utilities.ObjectUtility.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Utilities.ObjectUtility.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Utilities.ObjectUtility.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Utilities.ObjectUtility.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Utilities.ObjectUtility.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="DateTimeUtility" displayName="DateTimeUtility" namespace="PlanetTelex.Utilities" id="T:PlanetTelex.Utilities.DateTimeUtility" access="Public">
          <documentation><summary> Utility methods that assist in <see cref="T:System.DateTime" /> manipulation. </summary></documentation>
          <constructor name=".ctor" id="M:PlanetTelex.Utilities.DateTimeUtility.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Utilities.DateTimeUtility" /> class.</summary>
            </documentation>
          </constructor>
          <method name="AllSystemTimeZones" displayName="AllSystemTimeZones" id="M:PlanetTelex.Utilities.DateTimeUtility.AllSystemTimeZones" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.Collections.ObjectModel.ReadOnlyCollection`1" displayName="ReadOnlyCollection{TimeZoneInfo}" namespace="System.Collections.ObjectModel" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="TimeZoneInfo" displayName="TimeZoneInfo" namespace="System" typeId="T:System.TimeZoneInfo" assembly="System.Core" />
            </returnType>
            <documentation><summary> Gets all system time zones. </summary></documentation>
          </method>
          <method name="GetSystemTimeZone" displayName="GetSystemTimeZone" id="M:PlanetTelex.Utilities.DateTimeUtility.GetSystemTimeZone(System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.TimeZoneInfo" displayName="TimeZoneInfo" namespace="System" assembly="System.Core" nullable="false" valueType="false" />
            <documentation><summary> Gets a system time zone for the specified system ID. </summary>
<returns>A <see cref="T:System.TimeZoneInfo" />.</returns></documentation>
            <parameter name="systemTimeZoneId" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetNext" displayName="GetNext" id="M:PlanetTelex.Utilities.DateTimeUtility.GetNext(System.DateTime,System.DayOfWeek)" access="Public" contract="Virtual" valueType="true">
            <returnType typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Returns the date for the next day of the week given after the specified date. </summary>
<param name="fromDate">From date.</param>
<param name="targetDay">The day of the week to get the next occurance of.</param>
<returns>The next DateTime that shares the specified DateTime's day of the week.</returns></documentation>
            <parameter name="fromDate" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="targetDay" typeId="T:System.DayOfWeek" displayName="DayOfWeek" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetLast" displayName="GetLast" id="M:PlanetTelex.Utilities.DateTimeUtility.GetLast(System.DateTime,System.DayOfWeek)" access="Public" contract="Virtual" valueType="true">
            <returnType typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Returns the date for the last day of the week given before the specified date. </summary>
<param name="fromDate">From date.</param>
<param name="targetDay">The day of the week to get the last occurance of.</param>
<returns>The last DateTime that shares the specified DateTime's day of the week.</returns></documentation>
            <parameter name="fromDate" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="targetDay" typeId="T:System.DayOfWeek" displayName="DayOfWeek" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetDayOfWeekString" displayName="GetDayOfWeekString" id="M:PlanetTelex.Utilities.DateTimeUtility.GetDayOfWeekString(System.DayOfWeek)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Gets a resourced string for the day of the week provided. </summary>
<param name="dayOfWeek">The day of the week.</param>
<returns>The resourced string representation of the day of the week provided.</returns></documentation>
            <parameter name="dayOfWeek" typeId="T:System.DayOfWeek" displayName="DayOfWeek" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetTimeAgoString" displayName="GetTimeAgoString" id="M:PlanetTelex.Utilities.DateTimeUtility.GetTimeAgoString(System.DateTime,PlanetTelex.Common.TimeMode)" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Generates a string describing how long ago a given DateTime was from now. </summary>
<param name="pastDateTime">The past date time.</param>
<param name="timeMode">UTC or Local.</param>
<returns>A string representing time since the date.</returns></documentation>
            <parameter name="pastDateTime" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="timeMode" typeId="T:PlanetTelex.Common.TimeMode" displayName="TimeMode" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Utilities.DateTimeUtility.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Utilities.DateTimeUtility.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Utilities.DateTimeUtility.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Utilities.DateTimeUtility.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Utilities.DateTimeUtility.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Utilities.DateTimeUtility.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
      </namespace>
      <namespace name="PlanetTelex.Serialization">
        <documentation>
          <summary>Classes to assist in the serialization and deserialization of data and objects.</summary>
        </documentation>
        <class name="DataContractXmlSerializer" displayName="DataContractXmlSerializer" namespace="PlanetTelex.Serialization" id="T:PlanetTelex.Serialization.DataContractXmlSerializer" access="Public">
          <documentation><summary> An XML serializer for data contracts. </summary></documentation>
          <implementsClass type="PlanetTelex.Serialization.ISerializer" id="T:PlanetTelex.Serialization.ISerializer" displayName="ISerializer" namespace="PlanetTelex.Serialization" />
          <constructor name=".ctor" id="M:PlanetTelex.Serialization.DataContractXmlSerializer.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Serialization.DataContractXmlSerializer" /> class.</summary>
            </documentation>
          </constructor>
          <method name="Serialize{T}" displayName="Serialize{T}" id="M:PlanetTelex.Serialization.DataContractXmlSerializer.Serialize``1(``0)" access="Public" contract="Final" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Serializes an object to a string. </summary>
<typeparam name="T">The type of object being serialized.</typeparam>
<param name="instance">The object to serialize.</param>
<returns>A string.</returns></documentation>
            <parameter name="instance" typeId="T:T" displayName="DataContractXmlSerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="Serialize" id="M:PlanetTelex.Serialization.ISerializer.Serialize``1(``0)" interface="ISerializer" interfaceId="T:PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex">
              <declaringType name="T:PlanetTelex.Serialization.ISerializer" />
            </implements>
            <genericargument name="T" displayName="T" />
          </method>
          <method name="Deserialize{T}" displayName="Deserialize{T}" id="M:PlanetTelex.Serialization.DataContractXmlSerializer.Deserialize``1(System.String)" access="Public" contract="Final" valueType="false">
            <returnType typeId="T:T" displayName="DataContractXmlSerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <documentation><summary> Deserializes a string into an object. </summary>
<typeparam name="T">The type of object being deserialized.</typeparam>
<param name="serializedInstance">A string representation of the object type specified.</param>
<returns>A new object of the type specified.</returns></documentation>
            <parameter name="serializedInstance" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <implements name="Deserialize" id="M:PlanetTelex.Serialization.ISerializer.Deserialize``1(System.String)" interface="ISerializer" interfaceId="T:PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex">
              <declaringType name="T:PlanetTelex.Serialization.ISerializer" />
            </implements>
            <genericargument name="T" displayName="T" />
          </method>
          <method name="IsSerializable{T}" displayName="IsSerializable{T}" id="M:PlanetTelex.Serialization.DataContractXmlSerializer.IsSerializable``1(``0)" access="Public" contract="Final" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines if the instance is serializable. </summary>
<typeparam name="T">The type of object being checked.</typeparam>
<param name="instance">Object instance to be checked.</param>
<returns>
  <c>true</c> if this instance is serializable; otherwise, <c>false</c>.</returns></documentation>
            <parameter name="instance" typeId="T:T" displayName="DataContractXmlSerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="IsSerializable" id="M:PlanetTelex.Serialization.ISerializer.IsSerializable``1(``0)" interface="ISerializer" interfaceId="T:PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex">
              <declaringType name="T:PlanetTelex.Serialization.ISerializer" />
            </implements>
            <genericargument name="T" displayName="T" />
            <genericconstraints param="T">
              <constraint>class</constraint>
              <constraint>new</constraint>
            </genericconstraints>
          </method>
          <method name="RoundtripSerialize{T}" displayName="RoundtripSerialize{T}" id="M:PlanetTelex.Serialization.DataContractXmlSerializer.RoundtripSerialize``1(``0)" access="Public" contract="Final" valueType="false">
            <returnType typeId="T:T" displayName="DataContractXmlSerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <documentation><summary> Serializes and deserializes an object instance to test that the class is correctly configured for serialization. </summary>
<typeparam name="T">The type of object being serialized.</typeparam>
<param name="instance">Object instance to be checked.</param>
<returns>A new object instance.</returns></documentation>
            <parameter name="instance" typeId="T:T" displayName="DataContractXmlSerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="RoundtripSerialize" id="M:PlanetTelex.Serialization.ISerializer.RoundtripSerialize``1(``0)" interface="ISerializer" interfaceId="T:PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex">
              <declaringType name="T:PlanetTelex.Serialization.ISerializer" />
            </implements>
            <genericargument name="T" displayName="T" />
            <genericconstraints param="T">
              <constraint>class</constraint>
              <constraint>new</constraint>
            </genericconstraints>
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Serialization.DataContractXmlSerializer.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Serialization.DataContractXmlSerializer.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Serialization.DataContractXmlSerializer.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Serialization.DataContractXmlSerializer.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Serialization.DataContractXmlSerializer.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Serialization.DataContractXmlSerializer.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="XmlCData" displayName="XmlCData" namespace="PlanetTelex.Serialization" id="T:PlanetTelex.Serialization.XmlCData" access="Public" sealed="true">
          <documentation><summary> A class that will be serialized as CData with the <see cref="T:PlanetTelex.Serialization.XmlSerializer" />. </summary></documentation>
          <implementsClass type="System.Xml.Serialization.IXmlSerializable" id="T:System.Xml.Serialization.IXmlSerializable" displayName="IXmlSerializable" namespace="System.Xml.Serialization" />
          <constructor name=".ctor" id="M:PlanetTelex.Serialization.XmlCData.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Serialization.XmlCData" /> class.</summary>
            </documentation>
          </constructor>
          <property name="Value" id="P:PlanetTelex.Serialization.XmlCData.Value" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> The string container of the CDATA contents. </summary>
<value> The string value of this CDATA. </value></documentation>
          </property>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Serialization.XmlCData.ToString" access="Public" contract="Override" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Returns a <see cref="T:System.String" /> that represents this instance. </summary>
<returns> A <see cref="T:System.String" /> that represents this instance. </returns></documentation>
          </method>
          <method name="GetSchema" displayName="GetSchema" id="M:PlanetTelex.Serialization.XmlCData.GetSchema" access="Public" contract="Final" valueType="false">
            <returnType typeId="T:System.Xml.Schema.XmlSchema" displayName="XmlSchema" namespace="System.Xml.Schema" assembly="System.Xml" nullable="false" valueType="false" />
            <documentation><summary> This method is reserved and should not be used. When implementing the IXmlSerializable interface, you should return null (Nothing in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> to the class. </summary>
<returns> An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method. </returns></documentation>
            <implements name="GetSchema" id="M:System.Xml.Serialization.IXmlSerializable.GetSchema" interface="IXmlSerializable" interfaceId="T:System.Xml.Serialization.IXmlSerializable" assembly="System.Xml">
              <declaringType name="T:System.Xml.Serialization.IXmlSerializable" />
            </implements>
          </method>
          <method name="WriteXml" displayName="WriteXml" id="M:PlanetTelex.Serialization.XmlCData.WriteXml(System.Xml.XmlWriter)" access="Public" contract="Final" valueType="true">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Writes this element out in a CDATA tag. </summary>
<param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to write to</param>
<example>
  <code>Ouput XML examples
           "" =&gt; <Node />
           "Foo" =&gt; <Node>Foo</Node></code>
</example></documentation>
            <parameter name="writer" typeId="T:System.Xml.XmlWriter" displayName="XmlWriter" namespace="System.Xml" assembly="System.Xml" nullable="false" valueType="false" />
            <implements name="WriteXml" id="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" interface="IXmlSerializable" interfaceId="T:System.Xml.Serialization.IXmlSerializable" assembly="System.Xml">
              <declaringType name="T:System.Xml.Serialization.IXmlSerializable" />
            </implements>
          </method>
          <method name="ReadXml" displayName="ReadXml" id="M:PlanetTelex.Serialization.XmlCData.ReadXml(System.Xml.XmlReader)" access="Public" contract="Final" valueType="true">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Reads this element in from the reader. </summary>
<param name="reader">The reader to read from</param>
<example> Input XML examples <code><Node /> =&gt; ""
            <Node></Node> =&gt; ""
            <Node>Foo</Node> =&gt; "Foo"
            <Node>Foo</Node> =&gt; "Foo"
            </code></example></documentation>
            <parameter name="reader" typeId="T:System.Xml.XmlReader" displayName="XmlReader" namespace="System.Xml" assembly="System.Xml" nullable="false" valueType="false" />
            <implements name="ReadXml" id="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" interface="IXmlSerializable" interfaceId="T:System.Xml.Serialization.IXmlSerializable" assembly="System.Xml">
              <declaringType name="T:System.Xml.Serialization.IXmlSerializable" />
            </implements>
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Serialization.XmlCData.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Serialization.XmlCData.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Serialization.XmlCData.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Serialization.XmlCData.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Serialization.XmlCData.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <operator name="op_Implicit" id="M:PlanetTelex.Serialization.XmlCData.op_Implicit(PlanetTelex.Serialization.XmlCData)~System.String" access="Public" contract="Static" valueType="false" overload="1">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Implicitly converts from a <see cref="T:PlanetTelex.Serialization.XmlCData" /> to a <see cref="T:System.String" />. </summary>
<param name="cdata">The <see cref="T:PlanetTelex.Serialization.XmlCData" /> to be converted</param>
<returns> The <see cref="T:System.String" /> representation </returns>
<example>
  <code>string text = new CDataString("Testing")
  </code>
</example></documentation>
            <parameter name="cdata" typeId="T:PlanetTelex.Serialization.XmlCData" displayName="XmlCData" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
          </operator>
          <operator name="op_Implicit" id="M:PlanetTelex.Serialization.XmlCData.op_Implicit(System.String)~PlanetTelex.Serialization.XmlCData" access="Public" contract="Static" valueType="false" overload="2">
            <returnType typeId="T:PlanetTelex.Serialization.XmlCData" displayName="XmlCData" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <documentation><summary> Implicitly converts from a <see cref="T:System.String" /> to a <see cref="T:PlanetTelex.Serialization.XmlCData" />. </summary>
<param name="text">The <see cref="T:System.String" /> to be converted.</param>
<returns> A <see cref="T:PlanetTelex.Serialization.XmlCData" /> object with its Text property initialized to <paramref name="text" /></returns>
<example>
  <code>CDataString text = "Some string values";
  </code>
</example></documentation>
            <parameter name="text" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </operator>
        </class>
        <class name="XmlSerializableDictionary`2" displayName="XmlSerializableDictionary{TKey,TValue}" namespace="PlanetTelex.Serialization" id="T:PlanetTelex.Serialization.XmlSerializableDictionary`2" access="Public">
          <documentation><summary> A generic dictionary that can be XML serialized, a limitation of IDictionary. </summary></documentation>
          <attribute name="System.SerializableAttribute" />
          <attribute name="System.Xml.Serialization.XmlRootAttribute">
            <property name="ElementName" type="System.String" value="&quot;dictionary&quot;" />
            <property name="Namespace" type="System.String" value="null" />
            <property name="DataType" type="System.String" value="&quot;&quot;" />
            <property name="IsNullable" type="System.Boolean" value="True" />
          </attribute>
          <attribute name="System.Diagnostics.DebuggerTypeProxyAttribute">
            <property name="ProxyTypeName" type="System.String" value="&quot;System.Collections.Generic.Mscorlib_DictionaryDebugView`2, mscorlib, Version=2.0.&quot; +&#xD;&#xA;    &quot;0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;" />
            <property name="Target" type="System.Type" value="null" />
            <property name="TargetTypeName" type="System.String" value="null" />
          </attribute>
          <attribute name="System.Reflection.DefaultMemberAttribute">
            <property name="MemberName" type="System.String" value="&quot;Item&quot;" />
          </attribute>
          <attribute name="System.Diagnostics.DebuggerDisplayAttribute">
            <property name="Value" type="System.String" value="&quot;Count = {Count}&quot;" />
            <property name="Name" type="System.String" value="&quot;&quot;" />
            <property name="Type" type="System.String" value="&quot;&quot;" />
            <property name="Target" type="System.Type" value="null" />
            <property name="TargetTypeName" type="System.String" value="null" />
          </attribute>
          <baseType name="Dictionary`2" id="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{TKeyTValue,TKeyTValue}" namespace="System.Collections.Generic" assembly="mscorlib">
            <genericargument name="TKey" displayName="TKey" />
            <genericargument name="TValue" displayName="TValue" />
          </baseType>
          <implementsClass type="System.Collections.Generic.IDictionary`2" id="T:System.Collections.Generic.IDictionary`2" displayName="IDictionary{TKey,TValue}" namespace="System.Collections.Generic" inherited="true">
            <genericargument name="TKey" displayName="TKey" />
            <genericargument name="TValue" displayName="TValue" />
          </implementsClass>
          <implementsClass type="System.Collections.Generic.ICollection`1" id="T:System.Collections.Generic.ICollection`1" displayName="ICollection{T}" namespace="System.Collections.Generic" inherited="true">
            <genericargument name="T" displayName="T" />
          </implementsClass>
          <implementsClass type="System.Collections.Generic.IEnumerable`1" id="T:System.Collections.Generic.IEnumerable`1" displayName="IEnumerable{T}" namespace="System.Collections.Generic" inherited="true">
            <genericargument name="T" displayName="T" />
          </implementsClass>
          <implementsClass type="System.Collections.IEnumerable" id="T:System.Collections.IEnumerable" displayName="IEnumerable" namespace="System.Collections" inherited="true" />
          <implementsClass type="System.Collections.IDictionary" id="T:System.Collections.IDictionary" displayName="IDictionary" namespace="System.Collections" inherited="true" />
          <implementsClass type="System.Collections.ICollection" id="T:System.Collections.ICollection" displayName="ICollection" namespace="System.Collections" inherited="true" />
          <implementsClass type="System.Runtime.Serialization.ISerializable" id="T:System.Runtime.Serialization.ISerializable" displayName="ISerializable" namespace="System.Runtime.Serialization" inherited="true" />
          <implementsClass type="System.Runtime.Serialization.IDeserializationCallback" id="T:System.Runtime.Serialization.IDeserializationCallback" displayName="IDeserializationCallback" namespace="System.Runtime.Serialization" inherited="true" />
          <implementsClass type="System.Xml.Serialization.IXmlSerializable" id="T:System.Xml.Serialization.IXmlSerializable" displayName="IXmlSerializable" namespace="System.Xml.Serialization" />
          <genericargument name="TKey" displayName="TKey" />
          <genericargument name="TValue" displayName="TValue" />
          <constructor name=".ctor" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.#ctor" access="Public" contract="Normal" overload="1">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Serialization.XmlSerializableDictionary`2" /> class. </summary></documentation>
          </constructor>
          <constructor name=".ctor" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" access="Family" contract="Normal" overload="2">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Serialization.XmlSerializableDictionary`2" /> class. </summary>
<param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
<param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.Dictionary`2" />.</param></documentation>
            <parameter name="info" typeId="T:System.Runtime.Serialization.SerializationInfo" displayName="SerializationInfo" namespace="System.Runtime.Serialization" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="context" typeId="T:System.Runtime.Serialization.StreamingContext" displayName="StreamingContext" namespace="System.Runtime.Serialization" assembly="mscorlib" nullable="false" valueType="true" />
          </constructor>
          <property name="Comparer" id="P:PlanetTelex.Serialization.XmlSerializableDictionary`2.Comparer" access="Public" contract="Normal" declaringType="System.Collections.Generic.Dictionary`2" declaringAssembly="mscorlib" declaringId="P:System.Collections.Generic.Dictionary`2.Comparer" get="Public" set="false" typeId="T:System.Collections.Generic.IEqualityComparer`1" displayName="IEqualityComparer{TKey}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
            <genericargument name="TKey" displayName="TKey" />
          </property>
          <property name="Count" id="P:PlanetTelex.Serialization.XmlSerializableDictionary`2.Count" access="Public" contract="Final" declaringType="System.Collections.Generic.Dictionary`2" declaringAssembly="mscorlib" declaringId="P:System.Collections.Generic.Dictionary`2.Count" get="Public" set="false" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <implements name="Count" id="P:System.Collections.ICollection.Count" interface="ICollection" assembly="mscorlib" interfaceId="T:System.Collections.ICollection">
              <declaringType name="T:System.Collections.ICollection" />
            </implements>
          </property>
          <property name="Keys" id="P:PlanetTelex.Serialization.XmlSerializableDictionary`2.Keys" access="Public" contract="Normal" declaringType="System.Collections.Generic.Dictionary`2" declaringAssembly="mscorlib" declaringId="P:System.Collections.Generic.Dictionary`2.Keys" get="Public" set="false" typeId="T:System.Collections.Generic.Dictionary`2.KeyCollection" displayName="Dictionary{TKey,TValue}.KeyCollection" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
            <genericargument name="TKey" displayName="TKey" />
            <genericargument name="TValue" displayName="TValue" />
          </property>
          <property name="Values" id="P:PlanetTelex.Serialization.XmlSerializableDictionary`2.Values" access="Public" contract="Normal" declaringType="System.Collections.Generic.Dictionary`2" declaringAssembly="mscorlib" declaringId="P:System.Collections.Generic.Dictionary`2.Values" get="Public" set="false" typeId="T:System.Collections.Generic.Dictionary`2.ValueCollection" displayName="Dictionary{TKey,TValue}.ValueCollection" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
            <genericargument name="TKey" displayName="TKey" />
            <genericargument name="TValue" displayName="TValue" />
          </property>
          <property name="Item" id="P:PlanetTelex.Serialization.XmlSerializableDictionary`2.Item(`0)" access="Public" contract="Final" declaringType="System.Collections.Generic.Dictionary`2" declaringAssembly="mscorlib" declaringId="P:System.Collections.Generic.Dictionary`2.Item(`0)" get="Public" set="Public" typeId="T:TValue" displayName="XmlSerializableDictionary{TKey,TValue}.TValue" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false">
            <parameter name="key" typeId="T:TKey" displayName="XmlSerializableDictionary{TKey,TValue}.TKey" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="Item" id="P:System.Collections.Generic.IDictionary`2.Item(`0)" interface="IDictionary`2" assembly="mscorlib" interfaceId="T:System.Collections.Generic.IDictionary`2">
              <declaringType name="T:System.Collections.Generic.IDictionary`2">
                <genericargument name="TKey" displayName="TKey" />
                <genericargument name="TValue" displayName="TValue" />
              </declaringType>
            </implements>
          </property>
          <method name="GetSchema" displayName="GetSchema" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.GetSchema" access="Public" contract="Final" valueType="false">
            <returnType typeId="T:System.Xml.Schema.XmlSchema" displayName="XmlSchema" namespace="System.Xml.Schema" assembly="System.Xml" nullable="false" valueType="false" />
            <documentation><summary> This method is reserved and should not be used. When implementing the IXmlSerializable interface, you should return null (Nothing in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> to the class. </summary>
<returns> An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method. </returns></documentation>
            <implements name="GetSchema" id="M:System.Xml.Serialization.IXmlSerializable.GetSchema" interface="IXmlSerializable" interfaceId="T:System.Xml.Serialization.IXmlSerializable" assembly="System.Xml">
              <declaringType name="T:System.Xml.Serialization.IXmlSerializable" />
            </implements>
          </method>
          <method name="ReadXml" displayName="ReadXml" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.ReadXml(System.Xml.XmlReader)" access="Public" contract="Final" valueType="true">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Generates an object from its XML representation. </summary>
<param name="reader">The <see cref="T:System.Xml.XmlReader" /> stream from which the object is deserialized.</param></documentation>
            <parameter name="reader" typeId="T:System.Xml.XmlReader" displayName="XmlReader" namespace="System.Xml" assembly="System.Xml" nullable="false" valueType="false" />
            <implements name="ReadXml" id="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" interface="IXmlSerializable" interfaceId="T:System.Xml.Serialization.IXmlSerializable" assembly="System.Xml">
              <declaringType name="T:System.Xml.Serialization.IXmlSerializable" />
            </implements>
          </method>
          <method name="WriteXml" displayName="WriteXml" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.WriteXml(System.Xml.XmlWriter)" access="Public" contract="Final" valueType="true">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Converts an object into its XML representation. </summary>
<param name="writer">The <see cref="T:System.Xml.XmlWriter" /> stream to which the object is serialized.</param></documentation>
            <parameter name="writer" typeId="T:System.Xml.XmlWriter" displayName="XmlWriter" namespace="System.Xml" assembly="System.Xml" nullable="false" valueType="false" />
            <implements name="WriteXml" id="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" interface="IXmlSerializable" interfaceId="T:System.Xml.Serialization.IXmlSerializable" assembly="System.Xml">
              <declaringType name="T:System.Xml.Serialization.IXmlSerializable" />
            </implements>
          </method>
          <method name="Add" displayName="Add" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.Add(`0,`1)" access="Public" contract="Final" valueType="true" declaringType="System.Collections.Generic.Dictionary`2" declaringAssembly="mscorlib" declaringId="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="key" typeId="T:TKey" displayName="XmlSerializableDictionary{TKey,TValue}.TKey" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <parameter name="value" typeId="T:TValue" displayName="XmlSerializableDictionary{TKey,TValue}.TValue" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="Add" id="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)" interface="IDictionary{TKeyTValue,TKeyTValue}" interfaceId="T:System.Collections.Generic.IDictionary`2" assembly="mscorlib">
              <declaringType name="T:System.Collections.Generic.IDictionary`2">
                <genericargument name="TKey" displayName="TKey" />
                <genericargument name="TValue" displayName="TValue" />
              </declaringType>
            </implements>
          </method>
          <method name="Clear" displayName="Clear" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.Clear" access="Public" contract="Final" valueType="true" declaringType="System.Collections.Generic.Dictionary`2" declaringAssembly="mscorlib" declaringId="M:System.Collections.Generic.Dictionary`2.Clear">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <implements name="Clear" id="M:System.Collections.IDictionary.Clear" interface="IDictionary" interfaceId="T:System.Collections.IDictionary" assembly="mscorlib">
              <declaringType name="T:System.Collections.IDictionary" />
            </implements>
          </method>
          <method name="ContainsKey" displayName="ContainsKey" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.ContainsKey(`0)" access="Public" contract="Final" valueType="true" declaringType="System.Collections.Generic.Dictionary`2" declaringAssembly="mscorlib" declaringId="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="key" typeId="T:TKey" displayName="XmlSerializableDictionary{TKey,TValue}.TKey" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="ContainsKey" id="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)" interface="IDictionary{TKeyTValue,TKeyTValue}" interfaceId="T:System.Collections.Generic.IDictionary`2" assembly="mscorlib">
              <declaringType name="T:System.Collections.Generic.IDictionary`2">
                <genericargument name="TKey" displayName="TKey" />
                <genericargument name="TValue" displayName="TValue" />
              </declaringType>
            </implements>
          </method>
          <method name="ContainsValue" displayName="ContainsValue" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.ContainsValue(`1)" access="Public" contract="Normal" valueType="true" declaringType="System.Collections.Generic.Dictionary`2" declaringAssembly="mscorlib" declaringId="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="value" typeId="T:TValue" displayName="XmlSerializableDictionary{TKey,TValue}.TValue" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
          </method>
          <method name="GetEnumerator" displayName="GetEnumerator" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.GetEnumerator" access="Public" contract="Normal" valueType="true" declaringType="System.Collections.Generic.Dictionary`2" declaringAssembly="mscorlib" declaringId="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
            <returnType typeId="T:System.Collections.Generic.Dictionary`2.Enumerator" displayName="Dictionary{TKey,TValue}.Enumerator" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="true">
              <genericargument name="TKey" displayName="TKey" />
              <genericargument name="TValue" displayName="TValue" />
            </returnType>
          </method>
          <method name="GetObjectData" displayName="GetObjectData" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" access="Public" contract="Virtual" valueType="true" declaringType="System.Collections.Generic.Dictionary`2" declaringAssembly="mscorlib" declaringId="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Security.Permissions.SecurityPermissionAttribute">
              <property name="Flags" type="System.Security.Permissions.SecurityPermissionFlag" value="SecurityPermissionFlag.SerializationFormatter" />
              <property name="Assertion" type="System.Boolean" value="False" />
              <property name="UnmanagedCode" type="System.Boolean" value="False" />
              <property name="SkipVerification" type="System.Boolean" value="False" />
              <property name="Execution" type="System.Boolean" value="False" />
              <property name="ControlThread" type="System.Boolean" value="False" />
              <property name="ControlEvidence" type="System.Boolean" value="False" />
              <property name="ControlPolicy" type="System.Boolean" value="False" />
              <property name="SerializationFormatter" type="System.Boolean" value="True" />
              <property name="ControlDomainPolicy" type="System.Boolean" value="False" />
              <property name="ControlPrincipal" type="System.Boolean" value="False" />
              <property name="ControlAppDomain" type="System.Boolean" value="False" />
              <property name="RemotingConfiguration" type="System.Boolean" value="False" />
              <property name="Infrastructure" type="System.Boolean" value="False" />
              <property name="BindingRedirects" type="System.Boolean" value="False" />
              <property name="Action" type="System.Security.Permissions.SecurityAction" value="SecurityAction.LinkDemand" />
              <property name="Unrestricted" type="System.Boolean" value="False" />
            </attribute>
            <parameter name="info" typeId="T:System.Runtime.Serialization.SerializationInfo" displayName="SerializationInfo" namespace="System.Runtime.Serialization" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="context" typeId="T:System.Runtime.Serialization.StreamingContext" displayName="StreamingContext" namespace="System.Runtime.Serialization" assembly="mscorlib" nullable="false" valueType="true" />
            <implements name="GetObjectData" id="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" interface="ISerializable" interfaceId="T:System.Runtime.Serialization.ISerializable" assembly="mscorlib">
              <declaringType name="T:System.Runtime.Serialization.ISerializable" />
            </implements>
          </method>
          <method name="OnDeserialization" displayName="OnDeserialization" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.OnDeserialization(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Collections.Generic.Dictionary`2" declaringAssembly="mscorlib" declaringId="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="sender" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <implements name="OnDeserialization" id="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)" interface="IDeserializationCallback" interfaceId="T:System.Runtime.Serialization.IDeserializationCallback" assembly="mscorlib">
              <declaringType name="T:System.Runtime.Serialization.IDeserializationCallback" />
            </implements>
          </method>
          <method name="Remove" displayName="Remove" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.Remove(`0)" access="Public" contract="Final" valueType="true" declaringType="System.Collections.Generic.Dictionary`2" declaringAssembly="mscorlib" declaringId="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="key" typeId="T:TKey" displayName="XmlSerializableDictionary{TKey,TValue}.TKey" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="Remove" id="M:System.Collections.Generic.IDictionary`2.Remove(`0)" interface="IDictionary{TKeyTValue,TKeyTValue}" interfaceId="T:System.Collections.Generic.IDictionary`2" assembly="mscorlib">
              <declaringType name="T:System.Collections.Generic.IDictionary`2">
                <genericargument name="TKey" displayName="TKey" />
                <genericargument name="TValue" displayName="TValue" />
              </declaringType>
            </implements>
          </method>
          <method name="TryGetValue" displayName="TryGetValue" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.TryGetValue(`0,`1@)" access="Public" contract="Final" valueType="true" declaringType="System.Collections.Generic.Dictionary`2" declaringAssembly="mscorlib" declaringId="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="key" typeId="T:TKey" displayName="XmlSerializableDictionary{TKey,TValue}.TKey" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <parameter name="value" direction="out" typeId="T:TValue" displayName="XmlSerializableDictionary{TKey,TValue}.TValue" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false">
              <attribute name="System.Runtime.InteropServices.OutAttribute" />
            </parameter>
            <implements name="TryGetValue" id="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)" interface="IDictionary{TKeyTValue,TKeyTValue}" interfaceId="T:System.Collections.Generic.IDictionary`2" assembly="mscorlib">
              <declaringType name="T:System.Collections.Generic.IDictionary`2">
                <genericargument name="TKey" displayName="TKey" />
                <genericargument name="TValue" displayName="TValue" />
              </declaringType>
            </implements>
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Serialization.XmlSerializableDictionary`2.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="XmlSerializer" displayName="XmlSerializer" namespace="PlanetTelex.Serialization" id="T:PlanetTelex.Serialization.XmlSerializer" access="Public">
          <documentation><summary> An XML serializer. </summary></documentation>
          <implementsClass type="PlanetTelex.Serialization.ISerializer" id="T:PlanetTelex.Serialization.ISerializer" displayName="ISerializer" namespace="PlanetTelex.Serialization" />
          <constructor name=".ctor" id="M:PlanetTelex.Serialization.XmlSerializer.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Serialization.XmlSerializer" /> class.</summary>
            </documentation>
          </constructor>
          <method name="Serialize{T}" displayName="Serialize{T}" id="M:PlanetTelex.Serialization.XmlSerializer.Serialize``1(``0)" access="Public" contract="Final" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Serializes an object to a string. </summary>
<typeparam name="T">The type of object being serialized.</typeparam>
<param name="instance">The object to serialize.</param>
<returns>A string.</returns></documentation>
            <parameter name="instance" typeId="T:T" displayName="XmlSerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="Serialize" id="M:PlanetTelex.Serialization.ISerializer.Serialize``1(``0)" interface="ISerializer" interfaceId="T:PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex">
              <declaringType name="T:PlanetTelex.Serialization.ISerializer" />
            </implements>
            <genericargument name="T" displayName="T" />
          </method>
          <method name="Deserialize{T}" displayName="Deserialize{T}" id="M:PlanetTelex.Serialization.XmlSerializer.Deserialize``1(System.String)" access="Public" contract="Final" valueType="false">
            <returnType typeId="T:T" displayName="XmlSerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <documentation><summary> Deserializes a string into an object. </summary>
<typeparam name="T">The type of object being deserialized.</typeparam>
<param name="serializedInstance">A string representation of the object type specified.</param>
<returns>A new object of the type specified.</returns></documentation>
            <parameter name="serializedInstance" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <implements name="Deserialize" id="M:PlanetTelex.Serialization.ISerializer.Deserialize``1(System.String)" interface="ISerializer" interfaceId="T:PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex">
              <declaringType name="T:PlanetTelex.Serialization.ISerializer" />
            </implements>
            <genericargument name="T" displayName="T" />
          </method>
          <method name="IsSerializable{T}" displayName="IsSerializable{T}" id="M:PlanetTelex.Serialization.XmlSerializer.IsSerializable``1(``0)" access="Public" contract="Final" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines if the instance is serializable. </summary>
<typeparam name="T">The type of object being checked.</typeparam>
<param name="instance">Object instance to be checked.</param>
<returns>
  <c>true</c> if this instance is serializable; otherwise, <c>false</c>.</returns></documentation>
            <parameter name="instance" typeId="T:T" displayName="XmlSerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="IsSerializable" id="M:PlanetTelex.Serialization.ISerializer.IsSerializable``1(``0)" interface="ISerializer" interfaceId="T:PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex">
              <declaringType name="T:PlanetTelex.Serialization.ISerializer" />
            </implements>
            <genericargument name="T" displayName="T" />
            <genericconstraints param="T">
              <constraint>class</constraint>
              <constraint>new</constraint>
            </genericconstraints>
          </method>
          <method name="RoundtripSerialize{T}" displayName="RoundtripSerialize{T}" id="M:PlanetTelex.Serialization.XmlSerializer.RoundtripSerialize``1(``0)" access="Public" contract="Final" valueType="false">
            <returnType typeId="T:T" displayName="XmlSerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <documentation><summary> Serializes and deserializes an object instance to test that the class is correctly configured for serialization. </summary>
<typeparam name="T">The type of object being serialized.</typeparam>
<param name="instance">Object instance to be checked.</param>
<returns>A new object instance.</returns></documentation>
            <parameter name="instance" typeId="T:T" displayName="XmlSerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="RoundtripSerialize" id="M:PlanetTelex.Serialization.ISerializer.RoundtripSerialize``1(``0)" interface="ISerializer" interfaceId="T:PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex">
              <declaringType name="T:PlanetTelex.Serialization.ISerializer" />
            </implements>
            <genericargument name="T" displayName="T" />
            <genericconstraints param="T">
              <constraint>class</constraint>
              <constraint>new</constraint>
            </genericconstraints>
          </method>
          <method name="SerializeAsXmlDocument{T}" displayName="SerializeAsXmlDocument{T}" id="M:PlanetTelex.Serialization.XmlSerializer.SerializeAsXmlDocument``1(``0)" access="Public" contract="Normal" valueType="false">
            <returnType typeId="T:System.Xml.XmlDocument" displayName="XmlDocument" namespace="System.Xml" assembly="System.Xml" nullable="false" valueType="false" />
            <documentation><summary> Converts an object into an <see cref="T:System.Xml.XmlDocument" />. </summary>
<param name="toSerialize">The object to serialize.</param>
<returns>An <see cref="T:System.Xml.XmlDocument" /></returns></documentation>
            <parameter name="toSerialize" typeId="T:T" displayName="XmlSerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <genericargument name="T" displayName="T" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Serialization.XmlSerializer.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Serialization.XmlSerializer.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Serialization.XmlSerializer.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Serialization.XmlSerializer.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Serialization.XmlSerializer.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Serialization.XmlSerializer.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="BinarySerializer" displayName="BinarySerializer" namespace="PlanetTelex.Serialization" id="T:PlanetTelex.Serialization.BinarySerializer" access="Public">
          <documentation><summary> A binary serializer. </summary></documentation>
          <implementsClass type="PlanetTelex.Serialization.ISerializer" id="T:PlanetTelex.Serialization.ISerializer" displayName="ISerializer" namespace="PlanetTelex.Serialization" />
          <constructor name=".ctor" id="M:PlanetTelex.Serialization.BinarySerializer.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Serialization.BinarySerializer" /> class.</summary>
            </documentation>
          </constructor>
          <method name="Serialize{T}" displayName="Serialize{T}" id="M:PlanetTelex.Serialization.BinarySerializer.Serialize``1(``0)" access="Public" contract="Final" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Serializes an object to a string. </summary>
<typeparam name="T">The type of object being serialized.</typeparam>
<param name="instance">The object to serialize.</param>
<returns>A string.</returns></documentation>
            <parameter name="instance" typeId="T:T" displayName="BinarySerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="Serialize" id="M:PlanetTelex.Serialization.ISerializer.Serialize``1(``0)" interface="ISerializer" interfaceId="T:PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex">
              <declaringType name="T:PlanetTelex.Serialization.ISerializer" />
            </implements>
            <genericargument name="T" displayName="T" />
          </method>
          <method name="Deserialize{T}" displayName="Deserialize{T}" id="M:PlanetTelex.Serialization.BinarySerializer.Deserialize``1(System.String)" access="Public" contract="Final" valueType="false">
            <returnType typeId="T:T" displayName="BinarySerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <documentation><summary> Deserializes a string into an object. </summary>
<typeparam name="T">The type of object being deserialized.</typeparam>
<param name="serializedInstance">A string representation of the object type specified.</param>
<returns>A new object of the type specified.</returns></documentation>
            <parameter name="serializedInstance" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <implements name="Deserialize" id="M:PlanetTelex.Serialization.ISerializer.Deserialize``1(System.String)" interface="ISerializer" interfaceId="T:PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex">
              <declaringType name="T:PlanetTelex.Serialization.ISerializer" />
            </implements>
            <genericargument name="T" displayName="T" />
          </method>
          <method name="IsSerializable{T}" displayName="IsSerializable{T}" id="M:PlanetTelex.Serialization.BinarySerializer.IsSerializable``1(``0)" access="Public" contract="Final" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines if the instance is serializable. </summary>
<typeparam name="T">The type of object being checked.</typeparam>
<param name="instance">Object instance to be checked.</param>
<returns>
  <c>true</c> if this instance is serializable; otherwise, <c>false</c>.</returns></documentation>
            <parameter name="instance" typeId="T:T" displayName="BinarySerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="IsSerializable" id="M:PlanetTelex.Serialization.ISerializer.IsSerializable``1(``0)" interface="ISerializer" interfaceId="T:PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex">
              <declaringType name="T:PlanetTelex.Serialization.ISerializer" />
            </implements>
            <genericargument name="T" displayName="T" />
            <genericconstraints param="T">
              <constraint>class</constraint>
              <constraint>new</constraint>
            </genericconstraints>
          </method>
          <method name="RoundtripSerialize{T}" displayName="RoundtripSerialize{T}" id="M:PlanetTelex.Serialization.BinarySerializer.RoundtripSerialize``1(``0)" access="Public" contract="Final" valueType="false">
            <returnType typeId="T:T" displayName="BinarySerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <documentation><summary> Serializes and deserializes an object instance to test that the class is correctly configured for serialization. </summary>
<typeparam name="T">The type of object being serialized.</typeparam>
<param name="instance">Object instance to be checked.</param>
<returns>A new object instance.</returns></documentation>
            <parameter name="instance" typeId="T:T" displayName="BinarySerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="RoundtripSerialize" id="M:PlanetTelex.Serialization.ISerializer.RoundtripSerialize``1(``0)" interface="ISerializer" interfaceId="T:PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex">
              <declaringType name="T:PlanetTelex.Serialization.ISerializer" />
            </implements>
            <genericargument name="T" displayName="T" />
            <genericconstraints param="T">
              <constraint>class</constraint>
              <constraint>new</constraint>
            </genericconstraints>
          </method>
          <method name="Serialize" displayName="Serialize" id="M:PlanetTelex.Serialization.BinarySerializer.Serialize(System.Object)" access="Public" contract="Normal" valueType="false">
            <returnType typeId="T:System.Byte" displayName="Byte" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
              <array rank="1" />
            </returnType>
            <documentation><summary> Converts an object into a binary serialization. </summary>
<param name="instance">The instance.</param>
<returns></returns></documentation>
            <parameter name="instance" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Deserialize" displayName="Deserialize" id="M:PlanetTelex.Serialization.BinarySerializer.Deserialize(System.Byte[])" access="Public" contract="Normal" valueType="false">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Converts a binary serialization of an object into an object instance. </summary>
<param name="binarySerializedObject">A binary serialized object.</param>
<returns>A new object.</returns></documentation>
            <parameter name="binarySerializedObject" typeId="T:System.Byte" displayName="Byte" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
              <array rank="1" />
            </parameter>
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Serialization.BinarySerializer.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Serialization.BinarySerializer.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Serialization.BinarySerializer.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Serialization.BinarySerializer.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Serialization.BinarySerializer.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Serialization.BinarySerializer.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="DataContractJsonSerializer" displayName="DataContractJsonSerializer" namespace="PlanetTelex.Serialization" id="T:PlanetTelex.Serialization.DataContractJsonSerializer" access="Public">
          <documentation><summary> A JSON serializer for data contracts. </summary></documentation>
          <implementsClass type="PlanetTelex.Serialization.ISerializer" id="T:PlanetTelex.Serialization.ISerializer" displayName="ISerializer" namespace="PlanetTelex.Serialization" />
          <constructor name=".ctor" id="M:PlanetTelex.Serialization.DataContractJsonSerializer.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Serialization.DataContractJsonSerializer" /> class.</summary>
            </documentation>
          </constructor>
          <method name="Serialize{T}" displayName="Serialize{T}" id="M:PlanetTelex.Serialization.DataContractJsonSerializer.Serialize``1(``0)" access="Public" contract="Final" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Serializes an object to a string. </summary>
<typeparam name="T">The type of object being serialized.</typeparam>
<param name="instance">The object to serialize.</param>
<returns>A string.</returns></documentation>
            <parameter name="instance" typeId="T:T" displayName="DataContractJsonSerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="Serialize" id="M:PlanetTelex.Serialization.ISerializer.Serialize``1(``0)" interface="ISerializer" interfaceId="T:PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex">
              <declaringType name="T:PlanetTelex.Serialization.ISerializer" />
            </implements>
            <genericargument name="T" displayName="T" />
          </method>
          <method name="Deserialize{T}" displayName="Deserialize{T}" id="M:PlanetTelex.Serialization.DataContractJsonSerializer.Deserialize``1(System.String)" access="Public" contract="Final" valueType="false">
            <returnType typeId="T:T" displayName="DataContractJsonSerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <documentation><summary> Deserializes a string into an object. </summary>
<typeparam name="T">The type of object being deserialized.</typeparam>
<param name="serializedInstance">A string representation of the object type specified.</param>
<returns>A new object of the type specified.</returns></documentation>
            <parameter name="serializedInstance" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <implements name="Deserialize" id="M:PlanetTelex.Serialization.ISerializer.Deserialize``1(System.String)" interface="ISerializer" interfaceId="T:PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex">
              <declaringType name="T:PlanetTelex.Serialization.ISerializer" />
            </implements>
            <genericargument name="T" displayName="T" />
          </method>
          <method name="IsSerializable{T}" displayName="IsSerializable{T}" id="M:PlanetTelex.Serialization.DataContractJsonSerializer.IsSerializable``1(``0)" access="Public" contract="Final" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines if the instance is serializable. </summary>
<typeparam name="T">The type of object being checked.</typeparam>
<param name="instance">Object instance to be checked.</param>
<returns>
  <c>true</c> if this instance is serializable; otherwise, <c>false</c>.</returns></documentation>
            <parameter name="instance" typeId="T:T" displayName="DataContractJsonSerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="IsSerializable" id="M:PlanetTelex.Serialization.ISerializer.IsSerializable``1(``0)" interface="ISerializer" interfaceId="T:PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex">
              <declaringType name="T:PlanetTelex.Serialization.ISerializer" />
            </implements>
            <genericargument name="T" displayName="T" />
            <genericconstraints param="T">
              <constraint>class</constraint>
              <constraint>new</constraint>
            </genericconstraints>
          </method>
          <method name="RoundtripSerialize{T}" displayName="RoundtripSerialize{T}" id="M:PlanetTelex.Serialization.DataContractJsonSerializer.RoundtripSerialize``1(``0)" access="Public" contract="Final" valueType="false">
            <returnType typeId="T:T" displayName="DataContractJsonSerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <documentation><summary> Serializes and deserializes an object instance to test that the class is correctly configured for serialization. </summary>
<typeparam name="T">The type of object being serialized.</typeparam>
<param name="instance">Object instance to be checked.</param>
<returns>A new object instance.</returns></documentation>
            <parameter name="instance" typeId="T:T" displayName="DataContractJsonSerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="RoundtripSerialize" id="M:PlanetTelex.Serialization.ISerializer.RoundtripSerialize``1(``0)" interface="ISerializer" interfaceId="T:PlanetTelex.Serialization.ISerializer" assembly="PlanetTelex">
              <declaringType name="T:PlanetTelex.Serialization.ISerializer" />
            </implements>
            <genericargument name="T" displayName="T" />
            <genericconstraints param="T">
              <constraint>class</constraint>
              <constraint>new</constraint>
            </genericconstraints>
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Serialization.DataContractJsonSerializer.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Serialization.DataContractJsonSerializer.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Serialization.DataContractJsonSerializer.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Serialization.DataContractJsonSerializer.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Serialization.DataContractJsonSerializer.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Serialization.DataContractJsonSerializer.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <interface name="ISerializer" displayName="ISerializer" namespace="PlanetTelex.Serialization" id="T:PlanetTelex.Serialization.ISerializer" access="Public">
          <documentation><summary> Defines a contract for a serializer. </summary></documentation>
          <implementedBy id="T:PlanetTelex.Serialization.BinarySerializer" displayName="BinarySerializer" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" />
          <implementedBy id="T:PlanetTelex.Serialization.DataContractJsonSerializer" displayName="DataContractJsonSerializer" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" />
          <implementedBy id="T:PlanetTelex.Serialization.DataContractXmlSerializer" displayName="DataContractXmlSerializer" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" />
          <implementedBy id="T:PlanetTelex.Serialization.XmlSerializer" displayName="XmlSerializer" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" />
          <method name="Serialize{T}" displayName="Serialize{T}" id="M:PlanetTelex.Serialization.ISerializer.Serialize``1(``0)" access="Public" contract="Abstract" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Serializes an object to a string. </summary>
<typeparam name="T">The type of object being serialized.</typeparam>
<param name="instance">The object to serialize.</param>
<returns>A string.</returns></documentation>
            <parameter name="instance" typeId="T:T" displayName="ISerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <genericargument name="T" displayName="T" />
          </method>
          <method name="Deserialize{T}" displayName="Deserialize{T}" id="M:PlanetTelex.Serialization.ISerializer.Deserialize``1(System.String)" access="Public" contract="Abstract" valueType="false">
            <returnType typeId="T:T" displayName="ISerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <documentation><summary> Deserializes a string into an object. </summary>
<typeparam name="T">The type of object being deserialized.</typeparam>
<param name="serializedInstance">A string representation of the object type specified.</param>
<returns>A new object of the type specified.</returns></documentation>
            <parameter name="serializedInstance" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <genericargument name="T" displayName="T" />
          </method>
          <method name="IsSerializable{T}" displayName="IsSerializable{T}" id="M:PlanetTelex.Serialization.ISerializer.IsSerializable``1(``0)" access="Public" contract="Abstract" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines if the instance is serializable. </summary>
<typeparam name="T">The type of object being checked.</typeparam>
<param name="instance">Object instance to be checked.</param>
<returns>
  <c>true</c> if this instance is serializable; otherwise, <c>false</c>.</returns></documentation>
            <parameter name="instance" typeId="T:T" displayName="ISerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <genericargument name="T" displayName="T" />
            <genericconstraints param="T">
              <constraint>class</constraint>
              <constraint>new</constraint>
            </genericconstraints>
          </method>
          <method name="RoundtripSerialize{T}" displayName="RoundtripSerialize{T}" id="M:PlanetTelex.Serialization.ISerializer.RoundtripSerialize``1(``0)" access="Public" contract="Abstract" valueType="false">
            <returnType typeId="T:T" displayName="ISerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <documentation><summary> Serializes and deserializes an object instance to test that the class is correctly configured for serialization. </summary>
<typeparam name="T">The type of object being serialized.</typeparam>
<param name="instance">Object instance to be checked.</param>
<returns>A new object instance.</returns></documentation>
            <parameter name="instance" typeId="T:T" displayName="ISerializer.T" namespace="PlanetTelex.Serialization" assembly="PlanetTelex" nullable="false" valueType="false" />
            <genericargument name="T" displayName="T" />
            <genericconstraints param="T">
              <constraint>class</constraint>
              <constraint>new</constraint>
            </genericconstraints>
          </method>
        </interface>
      </namespace>
      <namespace name="PlanetTelex.Attributes">
        <documentation>
          <summary>Class and method attributes.</summary>
        </documentation>
        <class name="MimeTypeAttribute" displayName="MimeTypeAttribute" namespace="PlanetTelex.Attributes" id="T:PlanetTelex.Attributes.MimeTypeAttribute" access="Public">
          <documentation><summary> Field attribute for specifiying a MIME type. </summary></documentation>
          <attribute name="System.AttributeUsageAttribute">
            <property name="ValidOn" type="System.AttributeTargets" value="AttributeTargets.Field" />
            <property name="AllowMultiple" type="System.Boolean" value="False" />
            <property name="Inherited" type="System.Boolean" value="True" />
          </attribute>
          <baseType name="Attribute" id="T:System.Attribute" displayName="Attribute" namespace="System" assembly="mscorlib" />
          <constructor name=".ctor" id="M:PlanetTelex.Attributes.MimeTypeAttribute.#ctor(System.String)" access="Public" contract="Normal">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Attributes.MimeTypeAttribute" /> class. </summary>
<param name="value">The MIME type value.</param></documentation>
            <parameter name="value" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </constructor>
          <property name="Value" id="P:PlanetTelex.Attributes.MimeTypeAttribute.Value" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> The MIME type value. </summary></documentation>
          </property>
          <property name="TypeId" id="P:PlanetTelex.Attributes.MimeTypeAttribute.TypeId" access="Public" contract="Virtual" declaringType="System.Attribute" declaringAssembly="mscorlib" declaringId="P:System.Attribute.TypeId" get="Public" set="false" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Attributes.MimeTypeAttribute.Equals(System.Object)" access="Public" contract="Override" valueType="true" declaringType="System.Attribute" declaringAssembly="mscorlib" declaringId="M:System.Attribute.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Attributes.MimeTypeAttribute.GetHashCode" access="Public" contract="Override" valueType="true" declaringType="System.Attribute" declaringAssembly="mscorlib" declaringId="M:System.Attribute.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="Match" displayName="Match" id="M:PlanetTelex.Attributes.MimeTypeAttribute.Match(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Attribute" declaringAssembly="mscorlib" declaringId="M:System.Attribute.Match(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="IsDefaultAttribute" displayName="IsDefaultAttribute" id="M:PlanetTelex.Attributes.MimeTypeAttribute.IsDefaultAttribute" access="Public" contract="Virtual" valueType="true" declaringType="System.Attribute" declaringAssembly="mscorlib" declaringId="M:System.Attribute.IsDefaultAttribute">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Attributes.MimeTypeAttribute.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Attributes.MimeTypeAttribute.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Attributes.MimeTypeAttribute.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Attributes.MimeTypeAttribute.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
      </namespace>
      <namespace name="PlanetTelex.Extensions">
        <documentation>
          <summary>Extension methods for a variety of classes.</summary>
        </documentation>
        <class name="EnumerableExtensions" displayName="EnumerableExtensions" namespace="PlanetTelex.Extensions" id="T:PlanetTelex.Extensions.EnumerableExtensions" access="Public" static="true">
          <documentation><summary> IEnumerable extension methods. </summary></documentation>
          <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
          <method name="Sort{T}" displayName="Sort{T}" id="M:PlanetTelex.Extensions.EnumerableExtensions.Sort``1(System.Collections.Generic.IEnumerable{``0},System.String,PlanetTelex.Common.Order)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.Collections.Generic.IEnumerable`1" displayName="IEnumerable{T}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
            </returnType>
            <documentation><summary> Sorts this IEnumberable by a given property of their contained class in the specified order. </summary>
<typeparam name="T">The type of objects in the collection.</typeparam>
<param name="source">This IEnumerable.</param>
<param name="sortByProperty">The property to sort by. The data type of this property must be either a primative type or a type that implements IComparable.</param>
<param name="order">Ascending or descending.</param>
<returns>A new, sorted IEnumerable.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="source" extension="true" typeId="T:System.Collections.Generic.IEnumerable`1" displayName="IEnumerable{T}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
            </parameter>
            <parameter name="sortByProperty" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="order" extension="true" typeId="T:PlanetTelex.Common.Order" displayName="Order" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true" />
            <genericargument name="T" displayName="T" />
          </method>
          <method name="ToString{TKey}" displayName="ToString{TKey}" id="M:PlanetTelex.Extensions.EnumerableExtensions.ToString``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.String)" access="Public" contract="Static" valueType="false" overload="1">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Converts the key-value pairs of this IEnumerable into a formatted string. </summary>
<typeparam name="TKey">The key type.</typeparam>
<typeparam name="TVal">The value type.</typeparam>
<param name="items">This IEnumerable.</param>
<param name="pairFormat">A format string. Defaults to "{0}='{1}'"</param>
<returns>A new string of key-value pairs.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="items" extension="true" typeId="T:System.Collections.Generic.IEnumerable`1" displayName="IEnumerable{KeyValuePair{TKeyTVal,TKeyTVal}}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="KeyValuePair`2" displayName="KeyValuePair{TKeyTVal,TKeyTVal}" namespace="System.Collections.Generic" typeId="T:System.Collections.Generic.KeyValuePair`2" assembly="mscorlib">
                <genericargument name="TKey" displayName="TKey" />
                <genericargument name="TVal" displayName="TVal" />
              </genericargument>
            </parameter>
            <parameter name="pairFormat" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <genericargument name="TKey" displayName="TKey" />
            <genericargument name="TVal" displayName="TVal" />
          </method>
          <method name="ToString{TKey}" displayName="ToString{TKey}" id="M:PlanetTelex.Extensions.EnumerableExtensions.ToString``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.String,System.String)" access="Public" contract="Static" valueType="false" overload="2">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Converts the key-value pairs of this IEnumerable into a formatted string. </summary>
<typeparam name="TKey">The key type.</typeparam>
<typeparam name="TVal">The value type.</typeparam>
<param name="items">This IEnumerable.</param>
<param name="pairFormat">A format string. Defaults to "{0}='{1}'"</param>
<param name="separator">The pair separater. Defaults to " "</param>
<returns>A new string of key-value pairs.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="items" extension="true" typeId="T:System.Collections.Generic.IEnumerable`1" displayName="IEnumerable{KeyValuePair{TKeyTVal,TKeyTVal}}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="KeyValuePair`2" displayName="KeyValuePair{TKeyTVal,TKeyTVal}" namespace="System.Collections.Generic" typeId="T:System.Collections.Generic.KeyValuePair`2" assembly="mscorlib">
                <genericargument name="TKey" displayName="TKey" />
                <genericargument name="TVal" displayName="TVal" />
              </genericargument>
            </parameter>
            <parameter name="pairFormat" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="separator" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <genericargument name="TKey" displayName="TKey" />
            <genericargument name="TVal" displayName="TVal" />
          </method>
          <method name="Join{T}" displayName="Join{T}" id="M:PlanetTelex.Extensions.EnumerableExtensions.Join``1(System.Collections.Generic.IEnumerable{``0})" access="Public" contract="Static" valueType="false" overload="1">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Concatenates the items in this instance into a string delimited by ", ". </summary>
<typeparam name="T">The enumerated type.</typeparam>
<param name="items">This IEnumerable.</param>
<returns>A new concatenated string.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="items" extension="true" typeId="T:System.Collections.Generic.IEnumerable`1" displayName="IEnumerable{T}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
            </parameter>
            <genericargument name="T" displayName="T" />
          </method>
          <method name="Join{T}" displayName="Join{T}" id="M:PlanetTelex.Extensions.EnumerableExtensions.Join``1(System.Collections.Generic.IEnumerable{``0},System.String)" access="Public" contract="Static" valueType="false" overload="2">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Concatenates the items in this instance into a string delimited by the provided separator. </summary>
<typeparam name="T">The enumerated type.</typeparam>
<param name="items">This IEnumerable.</param>
<param name="separator">The separator.</param>
<returns>A new concatenated string.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="items" extension="true" typeId="T:System.Collections.Generic.IEnumerable`1" displayName="IEnumerable{T}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
            </parameter>
            <parameter name="separator" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <genericargument name="T" displayName="T" />
          </method>
          <method name="Join{T}" displayName="Join{T}" id="M:PlanetTelex.Extensions.EnumerableExtensions.Join``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})" access="Public" contract="Static" valueType="false" overload="3">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Concatenates the items in this instance into a string delimited by ",". </summary>
<typeparam name="T">The enumerated type.</typeparam>
<param name="items">This IEnumerable.</param>
<param name="selector">A selector to determine the items concatenated.</param>
<returns>A new concatenated string.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="items" extension="true" typeId="T:System.Collections.Generic.IEnumerable`1" displayName="IEnumerable{T}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
            </parameter>
            <parameter name="selector" extension="true" typeId="T:System.Func`2" displayName="Func{TString,String}" namespace="System" assembly="System.Core" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
              <genericargument name="String" displayName="String" namespace="System" typeId="T:System.String" assembly="mscorlib" />
            </parameter>
            <genericargument name="T" displayName="T" />
          </method>
          <method name="Join{T}" displayName="Join{T}" id="M:PlanetTelex.Extensions.EnumerableExtensions.Join``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Func{``0,System.String})" access="Public" contract="Static" valueType="false" overload="4">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Concatenates the items in this instance into a string delimited by the provided separator. </summary>
<typeparam name="T">The enumerated type.</typeparam>
<param name="items">This IEnumerable.</param>
<param name="separator">The separator.</param>
<param name="selector">A selector to determine the items concatenated.</param>
<returns>A new concatenated string.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="items" extension="true" typeId="T:System.Collections.Generic.IEnumerable`1" displayName="IEnumerable{T}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
            </parameter>
            <parameter name="separator" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="selector" extension="true" typeId="T:System.Func`2" displayName="Func{TString,String}" namespace="System" assembly="System.Core" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
              <genericargument name="String" displayName="String" namespace="System" typeId="T:System.String" assembly="mscorlib" />
            </parameter>
            <genericargument name="T" displayName="T" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Extensions.EnumerableExtensions.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Extensions.EnumerableExtensions.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Extensions.EnumerableExtensions.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Extensions.EnumerableExtensions.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Extensions.EnumerableExtensions.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Extensions.EnumerableExtensions.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="EnumExtensions" displayName="EnumExtensions" namespace="PlanetTelex.Extensions" id="T:PlanetTelex.Extensions.EnumExtensions" access="Public" static="true">
          <documentation><summary> Extension methods to various enum types. </summary></documentation>
          <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
          <method name="IsNullableEnum" displayName="IsNullableEnum" id="M:PlanetTelex.Extensions.EnumExtensions.IsNullableEnum(System.Type)" access="Public" contract="Static" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines whether this type is a nullable enum. </summary>
<param name="t">The type.</param>
<returns>
  <c>true</c> if the type is a nullable enum; otherwise, <c>false</c>. </returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="t" extension="true" typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="IsEnum" displayName="IsEnum" id="M:PlanetTelex.Extensions.EnumExtensions.IsEnum(System.Type)" access="Public" contract="Static" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines whether this type is an enum. </summary>
<param name="t">The type.</param>
<returns>
  <c>true</c> if the type is an enum; otherwise, <c>false</c>. </returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="t" extension="true" typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="MimeType" displayName="MimeType" id="M:PlanetTelex.Extensions.EnumExtensions.MimeType(PlanetTelex.Common.FileExtension)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Gets the MIME type string of this file extension. </summary>
<param name="fileExtension">A file extension.</param>
<returns>A MIME type string.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="fileExtension" extension="true" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Extensions.EnumExtensions.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Extensions.EnumExtensions.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Extensions.EnumExtensions.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Extensions.EnumExtensions.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Extensions.EnumExtensions.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Extensions.EnumExtensions.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="DateTimeExtensions" displayName="DateTimeExtensions" namespace="PlanetTelex.Extensions" id="T:PlanetTelex.Extensions.DateTimeExtensions" access="Public" static="true">
          <documentation><summary>
  <see cref="T:System.DateTime" /> extension methods. </summary></documentation>
          <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
          <method name="ToTimeZone" displayName="ToTimeZone" id="M:PlanetTelex.Extensions.DateTimeExtensions.ToTimeZone(System.DateTime,System.DateTimeOffset)" access="Public" contract="Static" valueType="true" overload="1">
            <returnType typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Converts this UTC DateTime into a local DateTime based on the time zone provided. </summary>
<param name="d">This DateTime.</param>
<param name="timeZone">The time zone of the local DateTime to return.</param>
<returns>A local DateTime.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="d" extension="true" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="timeZone" extension="true" typeId="T:System.DateTimeOffset" displayName="DateTimeOffset" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="ToTimeZone" displayName="ToTimeZone" id="M:PlanetTelex.Extensions.DateTimeExtensions.ToTimeZone(System.DateTime,System.String)" access="Public" contract="Static" valueType="true" overload="2">
            <returnType typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Converts this UTC DateTime into a local DateTime based on the time zone ID provided. </summary>
<param name="d">This DateTime.</param>
<param name="timeZoneId">The system time zone id.</param>
<returns>A local DateTime.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="d" extension="true" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="timeZoneId" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToUtc" displayName="ToUtc" id="M:PlanetTelex.Extensions.DateTimeExtensions.ToUtc(System.DateTime,System.DateTimeOffset)" access="Public" contract="Static" valueType="true">
            <returnType typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Converts this local DateTime into a UTC DateTime based on the time zone provided. </summary>
<param name="d">This DateTime.</param>
<param name="timeZone">The time zone of the local DateTime provided.</param>
<returns>A UTC DateTime.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="d" extension="true" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="timeZone" extension="true" typeId="T:System.DateTimeOffset" displayName="DateTimeOffset" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetFirstDateOfMonth" displayName="GetFirstDateOfMonth" id="M:PlanetTelex.Extensions.DateTimeExtensions.GetFirstDateOfMonth(System.DateTime)" access="Public" contract="Static" valueType="true">
            <returnType typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Gets the first date of month. </summary>
<param name="d">This DateTime.</param>
<returns>The first DateTime on this datetime's month.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="d" extension="true" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetLastDateOfMonth" displayName="GetLastDateOfMonth" id="M:PlanetTelex.Extensions.DateTimeExtensions.GetLastDateOfMonth(System.DateTime)" access="Public" contract="Static" valueType="true">
            <returnType typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Gets the last date of month. </summary>
<param name="d">This DateTime.</param>
<returns>The last DateTime on this datetime's month.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="d" extension="true" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetNext" displayName="GetNext" id="M:PlanetTelex.Extensions.DateTimeExtensions.GetNext(System.DateTime,System.DayOfWeek)" access="Public" contract="Static" valueType="true">
            <returnType typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Returns the date for the next day of the week given after this date. </summary>
<param name="d">This DateTime.</param>
<param name="targetDay">The day of the week to get the next occurance of.</param>
<returns>The next DateTime that shares this DateTime's day of the week.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="d" extension="true" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="targetDay" extension="true" typeId="T:System.DayOfWeek" displayName="DayOfWeek" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetLast" displayName="GetLast" id="M:PlanetTelex.Extensions.DateTimeExtensions.GetLast(System.DateTime,System.DayOfWeek)" access="Public" contract="Static" valueType="true">
            <returnType typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Returns the date for the last day of the week given before this date. </summary>
<param name="d">This DateTime.</param>
<param name="targetDay">The day of the week to get the last occurance of.</param>
<returns>The last DateTime that shares this DateTime's day of the week.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="d" extension="true" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="targetDay" extension="true" typeId="T:System.DayOfWeek" displayName="DayOfWeek" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetDayOfWeekString" displayName="GetDayOfWeekString" id="M:PlanetTelex.Extensions.DateTimeExtensions.GetDayOfWeekString(System.DateTime)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Gets a resourced string for the day of the week of this DateTime. </summary>
<param name="d">This DateTime.</param>
<returns>The resourced string representation of the day of the week of this DateTime.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="d" extension="true" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="ToTimeAgoString" displayName="ToTimeAgoString" id="M:PlanetTelex.Extensions.DateTimeExtensions.ToTimeAgoString(System.DateTime,PlanetTelex.Common.TimeMode)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Generates a string describing how long ago this DateTime was from now. </summary>
<param name="d">This DateTime.</param>
<param name="timeMode">UTC or Local.</param>
<returns>A string representing time since the date.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="d" extension="true" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="timeMode" extension="true" typeId="T:PlanetTelex.Common.TimeMode" displayName="TimeMode" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true" />
          </method>
          <method name="GetDifference" displayName="GetDifference" id="M:PlanetTelex.Extensions.DateTimeExtensions.GetDifference(System.DateTime,System.DateTime)" access="Public" contract="Static" valueType="true">
            <returnType typeId="T:System.TimeSpan" displayName="TimeSpan" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines the difference between this date and provided one. </summary>
<param name="d">This DateTime.</param>
<param name="secondDate">Date to be subtracted.</param>
<returns>TimeSpan representing the difference between two dates.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="d" extension="true" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="secondDate" extension="true" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Extensions.DateTimeExtensions.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Extensions.DateTimeExtensions.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Extensions.DateTimeExtensions.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Extensions.DateTimeExtensions.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Extensions.DateTimeExtensions.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Extensions.DateTimeExtensions.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="ObjectExtensions" displayName="ObjectExtensions" namespace="PlanetTelex.Extensions" id="T:PlanetTelex.Extensions.ObjectExtensions" access="Public" static="true">
          <documentation><summary>
  <see cref="T:System.Object" /> extension methods. See <see cref="F:PlanetTelex.Extensions.ObjectExtensions.ObjectUtility" /> for additional methods not included as extensions. </summary></documentation>
          <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
          <method name="Clone" displayName="Clone" id="M:PlanetTelex.Extensions.ObjectExtensions.Clone(System.Object)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Performs a "deep copy" of a given object, resulting in a new copy of this object in memory. </summary>
<param name="o">This object.</param>
<returns>A new object with the same type and property values as this object.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="o" extension="true" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToDictionary" displayName="ToDictionary" id="M:PlanetTelex.Extensions.ObjectExtensions.ToDictionary(System.Object)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{Object,Object}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="Object" displayName="Object" namespace="System" typeId="T:System.Object" assembly="mscorlib" />
              <genericargument name="Object" displayName="Object" namespace="System" typeId="T:System.Object" assembly="mscorlib" />
            </returnType>
            <documentation><summary> Converts this object instance into a dictionary. </summary>
<remarks>This method is useful when starting with an anonymous type.</remarks>
<param name="o">This object.</param>
<returns>A dictionary representation of this object.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="o" extension="true" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToDictionary{TVal}" displayName="ToDictionary{TVal}" id="M:PlanetTelex.Extensions.ObjectExtensions.ToDictionary``1(System.Object)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{String,StringTVal}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="String" displayName="String" namespace="System" typeId="T:System.String" assembly="mscorlib" />
              <genericargument name="TVal" displayName="TVal" />
            </returnType>
            <documentation><summary> Converts this object instance into a dictionary. </summary>
<remarks>This method is useful when starting with an anonymous type.</remarks>
<param name="o">This object.</param>
<returns>A dictionary representation of this object.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="o" extension="true" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <genericargument name="TVal" displayName="TVal" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Extensions.ObjectExtensions.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Extensions.ObjectExtensions.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Extensions.ObjectExtensions.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Extensions.ObjectExtensions.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Extensions.ObjectExtensions.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Extensions.ObjectExtensions.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="StringExtensions" displayName="StringExtensions" namespace="PlanetTelex.Extensions" id="T:PlanetTelex.Extensions.StringExtensions" access="Public" static="true">
          <documentation><summary>
  <see cref="T:System.String" /> extension methods. </summary></documentation>
          <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
          <method name="ToByteArray" displayName="ToByteArray" id="M:PlanetTelex.Extensions.StringExtensions.ToByteArray(System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.Byte" displayName="Byte" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
              <array rank="1" />
            </returnType>
            <documentation><summary> Converts this string to a byte array. It is faster than System.Text.UnicodeEncoding().GetBytes() and won't convert or drop characters like an Encoding (ASCII or Unicode) would do. </summary>
<param name="s">This string.</param>
<returns>A byte array.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToInt" displayName="ToInt" id="M:PlanetTelex.Extensions.StringExtensions.ToInt(System.String)" access="Public" contract="Static" valueType="true" overload="1">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Converts this string into a 32 bit integer. </summary>
<param name="s">This string.</param>
<returns>An integer.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToInt" displayName="ToInt" id="M:PlanetTelex.Extensions.StringExtensions.ToInt(System.String,System.Nullable{System.Int32})" access="Public" contract="Static" valueType="true" overload="2">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Converts this string into a 32 bit integer. </summary>
<param name="s">This string.</param>
<param name="defaultValue">The default value.</param>
<returns>An integer.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="defaultValue" extension="true" typeId="T:System.Int32" displayName="Nullable{Int32}" namespace="System" assembly="mscorlib" nullable="true" valueType="true" />
          </method>
          <method name="ToNullableInt" displayName="ToNullableInt" id="M:PlanetTelex.Extensions.StringExtensions.ToNullableInt(System.String)" access="Public" contract="Static" valueType="true" overload="1">
            <returnType typeId="T:System.Int32" displayName="Nullable{Int32}" namespace="System" assembly="mscorlib" nullable="true" valueType="true" />
            <documentation><summary> Converts this string into a nullable 32 bit integer. </summary>
<param name="s">This string.</param>
<returns>An integer or null if it can't be converted.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToNullableInt" displayName="ToNullableInt" id="M:PlanetTelex.Extensions.StringExtensions.ToNullableInt(System.String,System.Nullable{System.Int32})" access="Public" contract="Static" valueType="true" overload="2">
            <returnType typeId="T:System.Int32" displayName="Nullable{Int32}" namespace="System" assembly="mscorlib" nullable="true" valueType="true" />
            <documentation><summary> Converts this string into a nullable 32 bit integer. </summary>
<param name="s">This string.</param>
<param name="defaultValue">A default value to use if conversion fails.</param>
<returns>An integer or the default value if it can't be converted.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="defaultValue" extension="true" typeId="T:System.Int32" displayName="Nullable{Int32}" namespace="System" assembly="mscorlib" nullable="true" valueType="true" />
          </method>
          <method name="ToLong" displayName="ToLong" id="M:PlanetTelex.Extensions.StringExtensions.ToLong(System.String)" access="Public" contract="Static" valueType="true">
            <returnType typeId="T:System.Int64" displayName="Int64" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Converts this string into a 64 bit integer, or long. </summary>
<param name="s">This string.</param>
<returns>A long.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToNullableLong" displayName="ToNullableLong" id="M:PlanetTelex.Extensions.StringExtensions.ToNullableLong(System.String)" access="Public" contract="Static" valueType="true" overload="1">
            <returnType typeId="T:System.Int64" displayName="Nullable{Int64}" namespace="System" assembly="mscorlib" nullable="true" valueType="true" />
            <documentation><summary> Converts this string into a nullable 64 bit integer, or long. </summary>
<param name="s">This string.</param>
<returns>A long or null if it can't be converted.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToNullableLong" displayName="ToNullableLong" id="M:PlanetTelex.Extensions.StringExtensions.ToNullableLong(System.String,System.Nullable{System.Int64})" access="Public" contract="Static" valueType="true" overload="2">
            <returnType typeId="T:System.Int64" displayName="Nullable{Int64}" namespace="System" assembly="mscorlib" nullable="true" valueType="true" />
            <documentation><summary> Converts this string into a nullable 64 bit integer, or long. </summary>
<param name="s">This string.</param>
<param name="defaultValue">A default value to use if conversion fails.</param>
<returns>A long or the default value if it can't be converted.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="defaultValue" extension="true" typeId="T:System.Int64" displayName="Nullable{Int64}" namespace="System" assembly="mscorlib" nullable="true" valueType="true" />
          </method>
          <method name="ToFlagsEnum{TEnum}" displayName="ToFlagsEnum{TEnum}" id="M:PlanetTelex.Extensions.StringExtensions.ToFlagsEnum``1(System.String,``0)" access="Public" contract="Static" valueType="true" overload="1">
            <returnType typeId="T:TEnum" displayName="StringExtensions.TEnum" namespace="PlanetTelex.Extensions" assembly="PlanetTelex" nullable="false" valueType="true" />
            <documentation><summary> Converts this string of comma separated integer values into a flags enum. </summary>
<typeparam name="TEnum">The type of the enum.</typeparam>
<param name="s">This string.</param>
<param name="defaultValue">The default value.</param>
<returns>A flags enum of the specified type and values.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="defaultValue" extension="true" typeId="T:TEnum" displayName="StringExtensions.TEnum" namespace="PlanetTelex.Extensions" assembly="PlanetTelex" nullable="false" valueType="true" />
            <genericargument name="TEnum" displayName="TEnum" />
            <genericconstraints param="TEnum">
              <constraint>struct</constraint>
              <constraint>System.IConvertible</constraint>
            </genericconstraints>
          </method>
          <method name="ToFlagsEnum{TEnum}" displayName="ToFlagsEnum{TEnum}" id="M:PlanetTelex.Extensions.StringExtensions.ToFlagsEnum``1(System.String,System.Int32)" access="Public" contract="Static" valueType="true" overload="2">
            <returnType typeId="T:TEnum" displayName="StringExtensions.TEnum" namespace="PlanetTelex.Extensions" assembly="PlanetTelex" nullable="false" valueType="true" />
            <documentation><summary> Converts this string of comma separated integer values into a flags enum. </summary>
<typeparam name="TEnum">The type of the enum.</typeparam>
<param name="s">This string.</param>
<param name="defaultValue">The default value.</param>
<returns>A flags enum of the specified type and values.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="defaultValue" extension="true" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <genericargument name="TEnum" displayName="TEnum" />
            <genericconstraints param="TEnum">
              <constraint>struct</constraint>
              <constraint>System.IConvertible</constraint>
            </genericconstraints>
          </method>
          <method name="ToFlagsEnum{TEnum}" displayName="ToFlagsEnum{TEnum}" id="M:PlanetTelex.Extensions.StringExtensions.ToFlagsEnum``1(System.String)" access="Public" contract="Static" valueType="true" overload="3">
            <returnType typeId="T:TEnum" displayName="StringExtensions.TEnum" namespace="PlanetTelex.Extensions" assembly="PlanetTelex" nullable="false" valueType="true" />
            <documentation><summary> Converts this string of comma separated integer values into a flags enum. </summary>
<typeparam name="TEnum">The type of the enum.</typeparam>
<param name="s">This string.</param>
<returns>A flags enum of the specified type and values.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <genericargument name="TEnum" displayName="TEnum" />
            <genericconstraints param="TEnum">
              <constraint>struct</constraint>
              <constraint>System.IConvertible</constraint>
            </genericconstraints>
          </method>
          <method name="ToNullableEnum{TEnum}" displayName="ToNullableEnum{TEnum}" id="M:PlanetTelex.Extensions.StringExtensions.ToNullableEnum``1(System.String,System.Nullable{``0},System.Boolean)" access="Public" contract="Static" valueType="true" overload="1">
            <returnType typeId="T:TEnum" displayName="Nullable{TEnum}" namespace="System" assembly="mscorlib" nullable="true" valueType="true" />
            <documentation><summary> Converts this string of comma separated integer values into a nullable enum. </summary>
<typeparam name="TEnum">The type of the enum.</typeparam>
<param name="s">This string.</param>
<param name="defaultValue">The default value.</param>
<param name="ignoreCase">If set to <c>true</c> ignore string casing.</param>
<returns>A new nullable enum of the given type and value.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="defaultValue" extension="true" typeId="T:TEnum" displayName="Nullable{TEnum}" namespace="System" assembly="mscorlib" nullable="true" valueType="true" />
            <parameter name="ignoreCase" extension="true" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <genericargument name="TEnum" displayName="TEnum" />
            <genericconstraints param="TEnum">
              <constraint>struct</constraint>
              <constraint>System.IConvertible</constraint>
            </genericconstraints>
          </method>
          <method name="ToNullableEnum{TEnum}" displayName="ToNullableEnum{TEnum}" id="M:PlanetTelex.Extensions.StringExtensions.ToNullableEnum``1(System.String,System.Nullable{``0})" access="Public" contract="Static" valueType="true" overload="2">
            <returnType typeId="T:TEnum" displayName="Nullable{TEnum}" namespace="System" assembly="mscorlib" nullable="true" valueType="true" />
            <documentation><summary> Converts this string of comma separated integer values into a nullable enum. </summary>
<typeparam name="TEnum">The type of the enum.</typeparam>
<param name="s">This string.</param>
<param name="defaultValue">The default value.</param>
<returns>A new nullable enum of the given type and value.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="defaultValue" extension="true" typeId="T:TEnum" displayName="Nullable{TEnum}" namespace="System" assembly="mscorlib" nullable="true" valueType="true" />
            <genericargument name="TEnum" displayName="TEnum" />
            <genericconstraints param="TEnum">
              <constraint>struct</constraint>
              <constraint>System.IConvertible</constraint>
            </genericconstraints>
          </method>
          <method name="ToNullableEnum{TEnum}" displayName="ToNullableEnum{TEnum}" id="M:PlanetTelex.Extensions.StringExtensions.ToNullableEnum``1(System.String,System.Boolean)" access="Public" contract="Static" valueType="true" overload="3">
            <returnType typeId="T:TEnum" displayName="Nullable{TEnum}" namespace="System" assembly="mscorlib" nullable="true" valueType="true" />
            <documentation><summary> Converts this string of comma separated integer values into a nullable enum. </summary>
<typeparam name="TEnum">The type of the enum.</typeparam>
<param name="s">This string.</param>
<param name="ignoreCase">If set to <c>true</c> ignore string casing.</param>
<returns>A new nullable enum of the given type.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="ignoreCase" extension="true" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <genericargument name="TEnum" displayName="TEnum" />
            <genericconstraints param="TEnum">
              <constraint>struct</constraint>
              <constraint>System.IConvertible</constraint>
            </genericconstraints>
          </method>
          <method name="ToUri" displayName="ToUri" id="M:PlanetTelex.Extensions.StringExtensions.ToUri(System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.Uri" displayName="Uri" namespace="System" assembly="System" nullable="false" valueType="false" />
            <documentation><summary> Converts this URL string to a Uri. </summary>
<param name="s">This string.</param>
<returns>A new <see cref="T:System.Uri" />.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Shorten" displayName="Shorten" id="M:PlanetTelex.Extensions.StringExtensions.Shorten(System.String,System.Int32,System.String)" access="Public" contract="Static" valueType="false" overload="1">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Shortens this string to a specified length. If this string is shorter than the desired length, it will be returned unchanged. </summary>
<param name="s">This string.</param>
<param name="desiredLength">The length the returning string should not exceed.</param>
<param name="suffix">A string that can be appended to the end of the given string after it is shortened. The resulting string will still not exceed the desired length, more of the original string will be shortened.</param>
<returns>A new string shortened to the specified length.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="desiredLength" extension="true" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="suffix" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Shorten" displayName="Shorten" id="M:PlanetTelex.Extensions.StringExtensions.Shorten(System.String,System.Int32)" access="Public" contract="Static" valueType="false" overload="2">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Shortens this string to a specified length. If this string is shorter than the desired length, it will be returned unchanged. </summary>
<param name="s">This string.</param>
<param name="desiredLength">The length the returning string should not exceed.</param>
<returns>A new string shortened to the specified length.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="desiredLength" extension="true" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="StripReturns" displayName="StripReturns" id="M:PlanetTelex.Extensions.StringExtensions.StripReturns(System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Removes all newline and return characters from this string. </summary>
<param name="s">This string.</param>
<returns>A new string stripped of all newline and return characters.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="StripNonAlphaNumeric" displayName="StripNonAlphaNumeric" id="M:PlanetTelex.Extensions.StringExtensions.StripNonAlphaNumeric(System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Removes all characters that are not letters or numbers from this string. </summary>
<param name="s">This string.</param>
<returns>A new string stripped of all characters that are not letters or numbers.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="StripHtmlTags" displayName="StripHtmlTags" id="M:PlanetTelex.Extensions.StringExtensions.StripHtmlTags(System.String,System.Boolean)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Removes all HTML markup tags from this string, leaving only the text in between them. </summary>
<param name="s">This string.</param>
<param name="replaceWithSpace">if set to <c>true</c> [replace with space].</param>
<returns>A new string stripped of HTML tags.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="replaceWithSpace" extension="true" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="RemoveDiacritics" displayName="RemoveDiacritics" id="M:PlanetTelex.Extensions.StringExtensions.RemoveDiacritics(System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Removes accents (more broadly called diacritics) from this string. </summary>
<param name="s">This string.</param>
<returns>A new string with diacritics removed.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="RemoveLeadingNumbers" displayName="RemoveLeadingNumbers" id="M:PlanetTelex.Extensions.StringExtensions.RemoveLeadingNumbers(System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Removes all numbers at the beginning of this string, leaving everything after the first non-numeric character. </summary>
<param name="s">This string.</param>
<returns>A new string with its leading numbers removed.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="RemoveWhitespace" displayName="RemoveWhitespace" id="M:PlanetTelex.Extensions.StringExtensions.RemoveWhitespace(System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Removes all whitespace from this string. </summary>
<param name="s">This string.</param>
<returns>A new string with its whitespace removed.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="TitleCase" displayName="TitleCase" id="M:PlanetTelex.Extensions.StringExtensions.TitleCase(System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Creates a copy of this string that is titled cased. This follows the algorithm that both the first and last words of the string are capitalized, as are most other words in the string, with the exception of a list of excluded words (and, of, etc.) This list is a comma delimited assembly resource. </summary>
<param name="s">This string.</param>
<returns>A new string that is title cased.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="UppercaseFirstLetter" displayName="UppercaseFirstLetter" id="M:PlanetTelex.Extensions.StringExtensions.UppercaseFirstLetter(System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Creates a copy of this string in which the first letter is uppercase. </summary>
<param name="s">This string.</param>
<returns>A new string that is uppercased.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="FormatPhoneNumber" displayName="FormatPhoneNumber" id="M:PlanetTelex.Extensions.StringExtensions.FormatPhoneNumber(System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Standardizes this US phone number string into the format: xxx-xxx-xxxx. Returns an empty string if the phone number cannot be formatted. </summary>
<param name="s">This string.</param></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="FormatWith" displayName="FormatWith" id="M:PlanetTelex.Extensions.StringExtensions.FormatWith(System.String,System.Object[])" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Replaces each format item in this string with the string representation of a corresponding object in a specified array using the current runtime culture. </summary>
<param name="s">This string.</param>
<param name="args">An array of objects to format. </param>
<returns>A new, formatted string.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="args" extension="true" isParamArray="true" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
              <array rank="1" />
              <attribute name="System.ParamArrayAttribute" />
            </parameter>
          </method>
          <method name="ReplaceTokensWithObjectValues" displayName="ReplaceTokensWithObjectValues" id="M:PlanetTelex.Extensions.StringExtensions.ReplaceTokensWithObjectValues(System.String,System.Object)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Evaluates this string for tokens in the format: [ClassName.PropertyName]. These can also be nested: [ClassName.PropertyName.SubPropertyName] All tokens formatted this way are replaced with the corresponding values in the object provided. </summary>
<param name="s">This string.</param>
<param name="valueContainer">The object that contains the values to replace the tokens</param>
<returns>A new string with tokens replaced by values in the provided object.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="valueContainer" extension="true" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ReplaceMicrosoftWordCharacters" displayName="ReplaceMicrosoftWordCharacters" id="M:PlanetTelex.Extensions.StringExtensions.ReplaceMicrosoftWordCharacters(System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Replaces all special Microsoft Word characters in this string with standard characters. </summary>
<param name="s">This string.</param>
<returns>A new string with Microsoft Word special characters replaced by standard characters.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Reverse" displayName="Reverse" id="M:PlanetTelex.Extensions.StringExtensions.Reverse(System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Reverses the characters of this string. </summary>
<param name="s">This string.</param>
<returns>A new string with the characters reversed.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="RegexReplace" displayName="RegexReplace" id="M:PlanetTelex.Extensions.StringExtensions.RegexReplace(System.String,System.String,System.String)" access="Public" contract="Static" valueType="false" overload="1">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Returns a new string in which all matches of a specified regular expression in this string are replaced with another specified string. </summary>
<param name="s">This string.</param>
<param name="pattern">The regular expression pattern to match.</param>
<param name="replacement">The replacement string.</param>
<returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
<exception cref="T:System.ArgumentNullException">
  <paramref name="s" /> is <c>null</c>.</exception></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="pattern" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="replacement" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="RegexReplace" displayName="RegexReplace" id="M:PlanetTelex.Extensions.StringExtensions.RegexReplace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)" access="Public" contract="Static" valueType="false" overload="2">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Returns a new string in which all matches of a specified regular expression in this string are replaced with another specified string. </summary>
<param name="s">This string.</param>
<param name="pattern">The regular expression pattern to match.</param>
<param name="replacement">The replacement string.</param>
<param name="options">Regex Options (ex: ignorecase) </param>
<returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
<exception cref="T:System.ArgumentNullException">
  <paramref name="s" /> is <c>null</c>.</exception></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="pattern" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="replacement" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="options" extension="true" typeId="T:System.Text.RegularExpressions.RegexOptions" displayName="RegexOptions" namespace="System.Text.RegularExpressions" assembly="System" nullable="false" valueType="true" />
          </method>
          <method name="ContainsHtml" displayName="ContainsHtml" id="M:PlanetTelex.Extensions.StringExtensions.ContainsHtml(System.String)" access="Public" contract="Static" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines whether a given string contains HTML markup. </summary>
<param name="s">This string.</param>
<returns>
  <c>true</c> if this string contains HTML; otherwise, <c>false</c>. </returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="IsNullOrEmpty" displayName="IsNullOrEmpty" id="M:PlanetTelex.Extensions.StringExtensions.IsNullOrEmpty(System.String)" access="Public" contract="Static" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines whether this string is null or an empty string. </summary>
<param name="s">This string.</param>
<returns>
  <c>true</c> if this string is null or empty; otherwise, <c>false</c>. </returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="IsNotNullOrEmpty" displayName="IsNotNullOrEmpty" id="M:PlanetTelex.Extensions.StringExtensions.IsNotNullOrEmpty(System.String)" access="Public" contract="Static" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines whether this string is NOT null or NOT an empty string. </summary>
<param name="s">This string.</param>
<returns>
  <c>true</c> if this string is NOT null or NOT empty; otherwise, <c>false</c>. </returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="IsNumeric" displayName="IsNumeric" id="M:PlanetTelex.Extensions.StringExtensions.IsNumeric(System.String)" access="Public" contract="Static" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines whether this string is numeric. </summary>
<param name="s">This string.</param>
<returns>
  <c>true</c> if this string is numeric; otherwise, <c>false</c>. </returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="IsBoolean" displayName="IsBoolean" id="M:PlanetTelex.Extensions.StringExtensions.IsBoolean(System.String)" access="Public" contract="Static" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines whether this string represents a boolean. </summary>
<param name="s">This string.</param>
<returns>
  <c>true</c> if this string can be converted to a boolean; otherwise, <c>false</c>. </returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="IsValidEmailAddress" displayName="IsValidEmailAddress" id="M:PlanetTelex.Extensions.StringExtensions.IsValidEmailAddress(System.String)" access="Public" contract="Static" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines whether this string is a valid email address. </summary>
<param name="s">This string.</param>
<returns>
  <c>true</c> if the string is a valid email address; otherwise, <c>false</c>. </returns>
<exception cref="T:System.ArgumentNullException">
  <paramref name="s" /> is <c>null</c>.</exception></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="IsValidUri" displayName="IsValidUri" id="M:PlanetTelex.Extensions.StringExtensions.IsValidUri(System.String)" access="Public" contract="Static" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines whether this string is a valid email URI. </summary>
<param name="s">This string.</param>
<returns>
  <c>true</c> if the string is a valid URI; otherwise, <c>false</c>. </returns>
<exception cref="T:System.ArgumentNullException">
  <paramref name="s" /> is <c>null</c>.</exception></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="RegexMatch" displayName="RegexMatch" id="M:PlanetTelex.Extensions.StringExtensions.RegexMatch(System.String,System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Gets a Regex match within this string. </summary>
<param name="s">This string.</param>
<param name="pattern">The pattern.</param>
<returns>A new string with matched characters.</returns>
<exception cref="T:System.ArgumentNullException">
  <paramref name="s" /> is <c>null</c>.</exception></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="pattern" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="MD5" displayName="MD5" id="M:PlanetTelex.Extensions.StringExtensions.MD5(System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Generates an MD5 hash of this string. </summary>
<param name="s">This string.</param>
<returns>A new hashed string created by the MD5 algorithm.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Extensions.StringExtensions.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Extensions.StringExtensions.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Extensions.StringExtensions.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Extensions.StringExtensions.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Extensions.StringExtensions.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Extensions.StringExtensions.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="CollectionExtensions" displayName="CollectionExtensions" namespace="PlanetTelex.Extensions" id="T:PlanetTelex.Extensions.CollectionExtensions" access="Public" static="true">
          <documentation><summary> Extension methods for various collection classes. </summary></documentation>
          <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
          <method name="RemoveDuplicates{T}" displayName="RemoveDuplicates{T}" id="M:PlanetTelex.Extensions.CollectionExtensions.RemoveDuplicates``1(System.Collections.ObjectModel.Collection{``0})" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.Collections.ObjectModel.Collection`1" displayName="Collection{T}" namespace="System.Collections.ObjectModel" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
            </returnType>
            <documentation><summary> Removes duplicates from a collection of comparable items. </summary>
<param name="source">This collection.</param>
<returns>A new collection with unique items.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="source" extension="true" typeId="T:System.Collections.ObjectModel.Collection`1" displayName="Collection{T}" namespace="System.Collections.ObjectModel" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
            </parameter>
            <genericargument name="T" displayName="T" />
          </method>
          <method name="Add{T}" displayName="Add{T}" id="M:PlanetTelex.Extensions.CollectionExtensions.Add``2(System.Collections.Generic.Dictionary{``0,``1},System.Collections.Generic.Dictionary{``0,``1},System.Boolean)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{TTV,TTV}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
              <genericargument name="TV" displayName="TV" />
            </returnType>
            <documentation><summary> Adds the items in a provided dictionary to this dictionary. </summary>
<typeparam name="T">The key data type.</typeparam>
<typeparam name="TV">The value data type.</typeparam>
<param name="source">This dictionary.</param>
<param name="toAdd">The dictionary with items to add.</param>
<param name="overwrite">if set to <c>true</c> overwrite values in the source dictionary with values in the dictionary being added.</param>
<returns>This dictionary with new items added.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="source" extension="true" typeId="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{TTV,TTV}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
              <genericargument name="TV" displayName="TV" />
            </parameter>
            <parameter name="toAdd" extension="true" typeId="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{TTV,TTV}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
              <genericargument name="TV" displayName="TV" />
            </parameter>
            <parameter name="overwrite" extension="true" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <genericargument name="T" displayName="T" />
            <genericargument name="TV" displayName="TV" />
          </method>
          <method name="Sort" displayName="Sort" id="M:PlanetTelex.Extensions.CollectionExtensions.Sort(System.Collections.ArrayList,System.Type,System.String,PlanetTelex.Common.Order)" access="Public" contract="Static" valueType="false" overload="1">
            <returnType typeId="T:System.Collections.ArrayList" displayName="ArrayList" namespace="System.Collections" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Sorts this ArrayList by a given property of their contained class in the specified order. </summary>
<param name="source">This ArrayList.</param>
<param name="objectsType">The type of objects we are sorting.</param>
<param name="sortByProperty">The property to sort by. The data type of this property must be either a primative type or a type that implements IComparable.</param>
<param name="order">Ascending or descending.</param>
<returns>A sorted ArrayList.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="source" extension="true" typeId="T:System.Collections.ArrayList" displayName="ArrayList" namespace="System.Collections" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="objectsType" extension="true" typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="sortByProperty" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="order" extension="true" typeId="T:PlanetTelex.Common.Order" displayName="Order" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true" />
          </method>
          <method name="Sort" displayName="Sort" id="M:PlanetTelex.Extensions.CollectionExtensions.Sort(System.Collections.ArrayList,System.String,PlanetTelex.Common.Order)" access="Public" contract="Static" valueType="false" overload="2">
            <returnType typeId="T:System.Collections.ArrayList" displayName="ArrayList" namespace="System.Collections" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Sorts this ArrayList by a given property of their contained class in the specified order. </summary>
<param name="source">This ArrayList.</param>
<param name="sortByProperty">The property to sort by. The data type of this property must be either a primative type or a type that implements IComparable.</param>
<param name="order">Ascending or descending.</param>
<returns>A sorted ArrayList.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="source" extension="true" typeId="T:System.Collections.ArrayList" displayName="ArrayList" namespace="System.Collections" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="sortByProperty" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="order" extension="true" typeId="T:PlanetTelex.Common.Order" displayName="Order" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true" />
          </method>
          <method name="SwapKeysAndValues{T}" displayName="SwapKeysAndValues{T}" id="M:PlanetTelex.Extensions.CollectionExtensions.SwapKeysAndValues``2(System.Collections.Generic.Dictionary{``0,``1})" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{TVT,TVT}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="TV" displayName="TV" />
              <genericargument name="T" displayName="T" />
            </returnType>
            <documentation><summary> Swaps the keys and values of this dictionary. </summary>
<typeparam name="T">The key data type.</typeparam>
<typeparam name="TV">The value data type.</typeparam>
<param name="source">This dictionary.</param>
<returns>A new dictionary with the key-value pairs interchanged.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="source" extension="true" typeId="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{TTV,TTV}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
              <genericargument name="TV" displayName="TV" />
            </parameter>
            <genericargument name="T" displayName="T" />
            <genericargument name="TV" displayName="TV" />
          </method>
          <method name="ListPropertyValues" displayName="ListPropertyValues" id="M:PlanetTelex.Extensions.CollectionExtensions.ListPropertyValues(System.Collections.ArrayList,System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.Collections.ArrayList" displayName="ArrayList" namespace="System.Collections" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Lists the value of the specified property for each item in this ArrayList. </summary>
<param name="source">This ArrayList.</param>
<param name="propertyName">A property name of a datatype of the provided objects.</param></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="source" extension="true" typeId="T:System.Collections.ArrayList" displayName="ArrayList" namespace="System.Collections" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="propertyName" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Group" displayName="Group" id="M:PlanetTelex.Extensions.CollectionExtensions.Group(System.Collections.ArrayList,System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{Object,ArrayList}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="Object" displayName="Object" namespace="System" typeId="T:System.Object" assembly="mscorlib" />
              <genericargument name="ArrayList" displayName="ArrayList" namespace="System.Collections" typeId="T:System.Collections.ArrayList" assembly="mscorlib" />
            </returnType>
            <documentation><summary> Creates a Dictionary that groups items in this ArrayList by a specified property of the contained items. </summary>
<param name="source">This dictionary.</param>
<param name="property">The property to group on.</param>
<returns>An object-ArrayList Dictionary where the values of the provided property are the keys, and the values are the items in the collection sharing that property value.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="source" extension="true" typeId="T:System.Collections.ArrayList" displayName="ArrayList" namespace="System.Collections" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="property" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Extensions.CollectionExtensions.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Extensions.CollectionExtensions.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Extensions.CollectionExtensions.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Extensions.CollectionExtensions.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Extensions.CollectionExtensions.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Extensions.CollectionExtensions.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
      </namespace>
      <namespace name="PlanetTelex.Common.Models">
        <documentation>
          <summary>Common data models and buisness objects.</summary>
        </documentation>
        <class name="Address" displayName="Address" namespace="PlanetTelex.Common.Models" id="T:PlanetTelex.Common.Models.Address" access="Public">
          <documentation><summary> A simple mailing address. </summary></documentation>
          <attribute name="System.SerializableAttribute" />
          <constructor name=".ctor" id="M:PlanetTelex.Common.Models.Address.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Common.Models.Address" /> class.</summary>
            </documentation>
          </constructor>
          <property name="Street1" id="P:PlanetTelex.Common.Models.Address.Street1" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the first line of the street address. </summary>
<value> The first, or primary street address. </value></documentation>
          </property>
          <property name="Street2" id="P:PlanetTelex.Common.Models.Address.Street2" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the second line of the street address. </summary>
<value> The secondary street address, often used to express unit numbers. </value></documentation>
          </property>
          <property name="City" id="P:PlanetTelex.Common.Models.Address.City" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the city name. </summary>
<value> The city name. </value></documentation>
          </property>
          <property name="Region" id="P:PlanetTelex.Common.Models.Address.Region" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the region name. This is typically a state or province. </summary>
<value> The region name. This is typically a state or province. </value></documentation>
          </property>
          <property name="Country" id="P:PlanetTelex.Common.Models.Address.Country" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the country name. </summary>
<value> The country name. </value></documentation>
          </property>
          <property name="PostalCode" id="P:PlanetTelex.Common.Models.Address.PostalCode" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the postal, or zip, code. </summary>
<value> The postal code. In the US this is the ZIP code. </value></documentation>
          </property>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Common.Models.Address.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Common.Models.Address.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Common.Models.Address.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Common.Models.Address.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Common.Models.Address.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Common.Models.Address.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="Email" displayName="Email" namespace="PlanetTelex.Common.Models" id="T:PlanetTelex.Common.Models.Email" access="Public">
          <documentation><summary> An email. </summary></documentation>
          <constructor name=".ctor" id="M:PlanetTelex.Common.Models.Email.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Common.Models.Email" /> class.</summary>
            </documentation>
          </constructor>
          <property name="EmailFrom" id="P:PlanetTelex.Common.Models.Email.EmailFrom" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the email "from" address. </summary>
<value> The email "from" address. </value></documentation>
          </property>
          <property name="EmailTo" id="P:PlanetTelex.Common.Models.Email.EmailTo" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the email "to" address. </summary>
<value> The email "to" address. </value></documentation>
          </property>
          <property name="CC" id="P:PlanetTelex.Common.Models.Email.CC" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <array rank="1" />
            <documentation><summary> Gets or sets the email "cc" addresses. </summary>
<value> The email "cc" address(es). </value></documentation>
          </property>
          <property name="Subject" id="P:PlanetTelex.Common.Models.Email.Subject" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the subject. </summary>
<value> The subject. </value></documentation>
          </property>
          <property name="EmailMessage" id="P:PlanetTelex.Common.Models.Email.EmailMessage" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the email message. </summary>
<value> The email message. </value></documentation>
          </property>
          <property name="EmailAttachments" id="P:PlanetTelex.Common.Models.Email.EmailAttachments" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.Net.Mail.Attachment" displayName="Attachment" namespace="System.Net.Mail" assembly="System" nullable="false" valueType="false">
            <array rank="1" />
            <documentation><summary> Gets or sets the email attachments. </summary>
<value> The email attachments. </value></documentation>
          </property>
          <property name="IsHtml" id="P:PlanetTelex.Common.Models.Email.IsHtml" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets or sets a value indicating whether this instance's message is HTML. </summary>
<value>
  <c>true</c> if this instance's message is HTML; otherwise, <c>false</c>. </value></documentation>
          </property>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Common.Models.Email.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Common.Models.Email.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Common.Models.Email.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Common.Models.Email.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Common.Models.Email.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Common.Models.Email.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="CreditCard" displayName="CreditCard" namespace="PlanetTelex.Common.Models" id="T:PlanetTelex.Common.Models.CreditCard" access="Public">
          <documentation><summary> A credit card. </summary></documentation>
          <attribute name="System.SerializableAttribute" />
          <constructor name=".ctor" id="M:PlanetTelex.Common.Models.CreditCard.#ctor" access="Public" contract="Normal" overload="1">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Common.Models.CreditCard" /> class. </summary></documentation>
          </constructor>
          <constructor name=".ctor" id="M:PlanetTelex.Common.Models.CreditCard.#ctor(System.String)" access="Public" contract="Normal" overload="2">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Common.Models.CreditCard" /> class. </summary>
<param name="creditCardNumber">The credit card number.</param></documentation>
            <parameter name="creditCardNumber" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </constructor>
          <property name="CreditCardNumber" id="P:PlanetTelex.Common.Models.CreditCard.CreditCardNumber" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <attribute name="System.Xml.Serialization.XmlIgnoreAttribute" />
            <documentation><summary> Gets or sets the credit card number. </summary>
<value> The full credit card number, ignored in XML serialization for security purposes. </value></documentation>
          </property>
          <property name="CreditCardName" id="P:PlanetTelex.Common.Models.CreditCard.CreditCardName" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the name on the credit card used in this transaction. </summary>
<value> The name of the credit card's owner. </value></documentation>
          </property>
          <property name="CreditCardCvn" id="P:PlanetTelex.Common.Models.CreditCard.CreditCardCvn" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the card verification number (CVN). </summary>
<value> The credit card CVN number, the 3 or 4 digit security number that cannot be imprinted, often on the back of a card. </value></documentation>
          </property>
          <property name="ExpirationDate" id="P:PlanetTelex.Common.Models.CreditCard.ExpirationDate" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets or sets the credit card expiration date. </summary>
<value> The expiration date on the card. </value></documentation>
          </property>
          <property name="CardType" id="P:PlanetTelex.Common.Models.CreditCard.CardType" access="Public" contract="Normal" get="Public" set="false" typeId="T:PlanetTelex.Common.Models.CreditCardType" displayName="CreditCardType" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary> Gets the type of credit card used in this transaction, derived from the CreditCardNumber. </summary>
<value> The type of the card. </value></documentation>
          </property>
          <property name="LastFourDigits" id="P:PlanetTelex.Common.Models.CreditCard.LastFourDigits" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets the last four digits of the credit card number as an integer, returning zero if there isn't a number. </summary></documentation>
          </property>
          <property name="ExpirationDateString" id="P:PlanetTelex.Common.Models.CreditCard.ExpirationDateString" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the string format specified by Settings.CreditCardDateFormatString, which defaults to "MMyy". </summary></documentation>
          </property>
          <property name="IsValid" id="P:PlanetTelex.Common.Models.CreditCard.IsValid" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Runs the CheckSum algorithm on this instance's credit card number, returning true if it passes, false otherwise. </summary>
<value>
  <c>true</c> if this credit card passes the CheckSum test; otherwise, <c>false</c>. </value></documentation>
          </property>
          <method name="ValidateCardType" displayName="ValidateCardType" id="M:PlanetTelex.Common.Models.CreditCard.ValidateCardType(PlanetTelex.Common.Models.CreditCardType)" access="Public" contract="Normal" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines if this instance's is the same type as the one specified. </summary>
<param name="cardType">Type of the card.</param>
<returns>
  <c>true</c> if this credit card is of the supplied type; otherwise, <c>false</c>.</returns></documentation>
            <parameter name="cardType" typeId="T:PlanetTelex.Common.Models.CreditCardType" displayName="CreditCardType" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" nullable="false" valueType="true" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Common.Models.CreditCard.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Common.Models.CreditCard.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Common.Models.CreditCard.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Common.Models.CreditCard.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Common.Models.CreditCard.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Common.Models.CreditCard.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="HoursOfOperation" displayName="HoursOfOperation" namespace="PlanetTelex.Common.Models" id="T:PlanetTelex.Common.Models.HoursOfOperation" access="Public">
          <documentation><summary> The hours of operation (i.e. open and closing times of a business) for each day of the week. </summary></documentation>
          <attribute name="System.SerializableAttribute" />
          <constructor name=".ctor" id="M:PlanetTelex.Common.Models.HoursOfOperation.#ctor" access="Public" contract="Normal">
            <documentation><summary> Constructor initializes all 7 days of the week to the default hours of 8am-11pm. </summary></documentation>
          </constructor>
          <property name="DailyHours" id="P:PlanetTelex.Common.Models.HoursOfOperation.DailyHours" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.Collections.Generic.List`1" displayName="List{BusinessHours}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
            <genericargument name="BusinessHours" displayName="BusinessHours" namespace="PlanetTelex.Common.Models" typeId="T:PlanetTelex.Common.Models.BusinessHours" assembly="PlanetTelex" />
            <documentation><summary> Gets a list of the business hours, one for each day of the week. </summary></documentation>
          </property>
          <method name="SetOpenTime" displayName="SetOpenTime" id="M:PlanetTelex.Common.Models.HoursOfOperation.SetOpenTime(System.DayOfWeek,System.DateTime)" access="Public" contract="Normal" valueType="true" overload="1">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Sets the open time for a given day. </summary>
<param name="day">A day of the week.</param>
<param name="time">The time the business opens.</param></documentation>
            <parameter name="day" typeId="T:System.DayOfWeek" displayName="DayOfWeek" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="time" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="SetOpenTime" displayName="SetOpenTime" id="M:PlanetTelex.Common.Models.HoursOfOperation.SetOpenTime(System.DayOfWeek,System.String)" access="Public" contract="Normal" valueType="true" overload="2">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Sets the open time for a given day. </summary>
<param name="day">A day of the week.</param>
<param name="time">The time the business opens.</param></documentation>
            <parameter name="day" typeId="T:System.DayOfWeek" displayName="DayOfWeek" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="time" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="SetCloseTime" displayName="SetCloseTime" id="M:PlanetTelex.Common.Models.HoursOfOperation.SetCloseTime(System.DayOfWeek,System.DateTime)" access="Public" contract="Normal" valueType="true" overload="1">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Sets the close time for a given day. </summary>
<param name="day">A day of the week.</param>
<param name="time">The time the business closes.</param></documentation>
            <parameter name="day" typeId="T:System.DayOfWeek" displayName="DayOfWeek" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="time" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="SetCloseTime" displayName="SetCloseTime" id="M:PlanetTelex.Common.Models.HoursOfOperation.SetCloseTime(System.DayOfWeek,System.String)" access="Public" contract="Normal" valueType="true" overload="2">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Sets the close time for a given day. </summary>
<param name="day">A day of the week.</param>
<param name="time">The time the business closes.</param></documentation>
            <parameter name="day" typeId="T:System.DayOfWeek" displayName="DayOfWeek" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="time" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="OpenTimes" displayName="OpenTimes" id="M:PlanetTelex.Common.Models.HoursOfOperation.OpenTimes(System.DayOfWeek)" access="Public" contract="Normal" valueType="false" overload="1">
            <returnType typeId="T:System.Collections.Generic.List`1" displayName="List{String}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="String" displayName="String" namespace="System" typeId="T:System.String" assembly="mscorlib" />
            </returnType>
            <documentation><summary> Returns all the times between the open and close times, spaced at half hour intervals, for a given day of the week. </summary>
<param name="day">A day of the week.</param>
<returns>An ArrayList of string values.</returns></documentation>
            <parameter name="day" typeId="T:System.DayOfWeek" displayName="DayOfWeek" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="OpenTimes" displayName="OpenTimes" id="M:PlanetTelex.Common.Models.HoursOfOperation.OpenTimes(System.DateTime)" access="Public" contract="Normal" valueType="false" overload="2">
            <returnType typeId="T:System.Collections.Generic.List`1" displayName="List{String}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="String" displayName="String" namespace="System" typeId="T:System.String" assembly="mscorlib" />
            </returnType>
            <documentation><summary> Returns all the times between the open and close times, spaced at half hour intervals, for a given date. </summary>
<param name="day">A day of the week.</param>
<returns>An ArrayList of string values.</returns></documentation>
            <parameter name="day" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Common.Models.HoursOfOperation.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Common.Models.HoursOfOperation.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Common.Models.HoursOfOperation.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Common.Models.HoursOfOperation.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Common.Models.HoursOfOperation.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Common.Models.HoursOfOperation.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="Person" displayName="Person" namespace="PlanetTelex.Common.Models" id="T:PlanetTelex.Common.Models.Person" access="Public">
          <documentation><summary> A basic representation of a person. </summary></documentation>
          <attribute name="System.SerializableAttribute" />
          <constructor name=".ctor" id="M:PlanetTelex.Common.Models.Person.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Common.Models.Person" /> class.</summary>
            </documentation>
          </constructor>
          <property name="FirstName" id="P:PlanetTelex.Common.Models.Person.FirstName" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the person's first name. </summary>
<value> The first name. </value></documentation>
          </property>
          <property name="LastName" id="P:PlanetTelex.Common.Models.Person.LastName" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the person's last name. </summary>
<value> The last name. </value></documentation>
          </property>
          <property name="Email" id="P:PlanetTelex.Common.Models.Person.Email" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the person's email address. </summary>
<value> An email address. </value></documentation>
          </property>
          <property name="Phone" id="P:PlanetTelex.Common.Models.Person.Phone" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the person's primary phone number. </summary>
<value> The person's phone number. </value></documentation>
          </property>
          <property name="CellPhone" id="P:PlanetTelex.Common.Models.Person.CellPhone" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the person's cell phone number. </summary>
<value> The person's cell phone number. </value></documentation>
          </property>
          <property name="Fax" id="P:PlanetTelex.Common.Models.Person.Fax" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the person's fax number. </summary>
<value> The person's fax number. </value></documentation>
          </property>
          <property name="Address" id="P:PlanetTelex.Common.Models.Person.Address" access="Public" contract="Normal" get="Public" set="Public" typeId="T:PlanetTelex.Common.Models.Address" displayName="Address" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the person's <see cref="P:PlanetTelex.Common.Models.Person.Address" nolink="true" />. </summary>
<value> The person's street <see cref="P:PlanetTelex.Common.Models.Person.Address" nolink="true" />. </value></documentation>
          </property>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Common.Models.Person.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Common.Models.Person.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Common.Models.Person.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Common.Models.Person.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Common.Models.Person.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Common.Models.Person.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="BusinessHours" displayName="BusinessHours" namespace="PlanetTelex.Common.Models" id="T:PlanetTelex.Common.Models.BusinessHours" access="Public">
          <documentation><summary> The hours a business is open in a single day. </summary></documentation>
          <attribute name="System.SerializableAttribute" />
          <constructor name=".ctor" id="M:PlanetTelex.Common.Models.BusinessHours.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Common.Models.BusinessHours" /> class.</summary>
            </documentation>
          </constructor>
          <property name="IsClosed" id="P:PlanetTelex.Common.Models.BusinessHours.IsClosed" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets or sets whether this location is closed. </summary>
<value>
  <c>true</c> if the business is closed all day; otherwise, <c>false</c>. </value></documentation>
          </property>
          <property name="OpenAllDay" id="P:PlanetTelex.Common.Models.BusinessHours.OpenAllDay" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets whether this location is open all day, or 24 hours, which occurs when the open time and close time are equal. </summary>
<value>
  <c>true</c> if the business is open 24 hours this day; otherwise, <c>false</c>. </value></documentation>
          </property>
          <property name="OpenTime" id="P:PlanetTelex.Common.Models.BusinessHours.OpenTime" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets or sets the opening minute of the day starting from 0 = 12:00 AM. Defaults to 8:00 AM. </summary>
<value> The opening time for the day, as expressed as the number of minutes since midnight. </value></documentation>
          </property>
          <property name="CloseTime" id="P:PlanetTelex.Common.Models.BusinessHours.CloseTime" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets or sets the closing minute of the day starting from 0 = 12:00 AM. Defaults to 11:00 PM. </summary>
<value> The closing time for the day, as expressed as the number of minutes since midnight. </value></documentation>
          </property>
          <property name="DisplayOpenTime" id="P:PlanetTelex.Common.Models.BusinessHours.DisplayOpenTime" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the short time string for the open time. </summary></documentation>
          </property>
          <property name="DisplayCloseTime" id="P:PlanetTelex.Common.Models.BusinessHours.DisplayCloseTime" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the short time string for the close time. </summary></documentation>
          </property>
          <method name="SetOpenTime" displayName="SetOpenTime" id="M:PlanetTelex.Common.Models.BusinessHours.SetOpenTime(System.DateTime)" access="Public" contract="Normal" valueType="true" overload="1">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Sets the OpenTime property from a given DateTime. </summary>
<param name="openTime">The time the business opens.</param></documentation>
            <parameter name="openTime" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="SetOpenTime" displayName="SetOpenTime" id="M:PlanetTelex.Common.Models.BusinessHours.SetOpenTime(System.String)" access="Public" contract="Normal" valueType="true" overload="2">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Sets the OpenTime property from a given DateTime string. </summary>
<param name="openTime">The time the business opens.</param></documentation>
            <parameter name="openTime" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="SetCloseTime" displayName="SetCloseTime" id="M:PlanetTelex.Common.Models.BusinessHours.SetCloseTime(System.DateTime)" access="Public" contract="Normal" valueType="true" overload="1">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Sets the CloseTime property from a given DateTime. </summary>
<param name="closeTime">The time the business closes.</param></documentation>
            <parameter name="closeTime" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="SetCloseTime" displayName="SetCloseTime" id="M:PlanetTelex.Common.Models.BusinessHours.SetCloseTime(System.String)" access="Public" contract="Normal" valueType="true" overload="2">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Sets the CloseTime property from a given DateTime string. </summary>
<param name="closeTime">The time the business closes.</param></documentation>
            <parameter name="closeTime" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="AllTimes" displayName="AllTimes" id="M:PlanetTelex.Common.Models.BusinessHours.AllTimes" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.Collections.Generic.List`1" displayName="List{String}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="String" displayName="String" namespace="System" typeId="T:System.String" assembly="mscorlib" />
            </returnType>
            <documentation><summary> Gets all the times for the next two days, spaced at half hour intervals. </summary>
<returns>A list of half hour incremented times.</returns></documentation>
          </method>
          <method name="OpenTimes" displayName="OpenTimes" id="M:PlanetTelex.Common.Models.BusinessHours.OpenTimes" access="Public" contract="Normal" valueType="false">
            <returnType typeId="T:System.Collections.Generic.List`1" displayName="List{String}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="String" displayName="String" namespace="System" typeId="T:System.String" assembly="mscorlib" />
            </returnType>
            <documentation><summary> Gets all the times between this instance's open and close times, spaced at half hour intervals. </summary>
<returns>A list of half hour incremented times.</returns></documentation>
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Common.Models.BusinessHours.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Common.Models.BusinessHours.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Common.Models.BusinessHours.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Common.Models.BusinessHours.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Common.Models.BusinessHours.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Common.Models.BusinessHours.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <enumeration name="CreditCardType" id="T:PlanetTelex.Common.Models.CreditCardType" displayName="CreditCardType" namespace="PlanetTelex.Common.Models" access="Public">
          <documentation><summary> Types of credit cards. </summary></documentation>
          <field name="Unknown" id="F:PlanetTelex.Common.Models.CreditCardType.Unknown" access="Public" contract="Static" literal="true" value="-1" typeId="T:PlanetTelex.Common.Models.CreditCardType" displayName="CreditCardType" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Unknown = -1</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Unknown&quot;" />
            </attribute>
          </field>
          <field name="None" id="F:PlanetTelex.Common.Models.CreditCardType.None" access="Public" contract="Static" literal="true" value="0" typeId="T:PlanetTelex.Common.Models.CreditCardType" displayName="CreditCardType" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>None = 0</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;None&quot;" />
            </attribute>
          </field>
          <field name="Visa" id="F:PlanetTelex.Common.Models.CreditCardType.Visa" access="Public" contract="Static" literal="true" value="1" typeId="T:PlanetTelex.Common.Models.CreditCardType" displayName="CreditCardType" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Visa = 1</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Visa&quot;" />
            </attribute>
          </field>
          <field name="Mastercard" id="F:PlanetTelex.Common.Models.CreditCardType.Mastercard" access="Public" contract="Static" literal="true" value="2" typeId="T:PlanetTelex.Common.Models.CreditCardType" displayName="CreditCardType" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Mastercard = 2</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Mastercard&quot;" />
            </attribute>
          </field>
          <field name="American_Express" id="F:PlanetTelex.Common.Models.CreditCardType.American_Express" access="Public" contract="Static" literal="true" value="3" typeId="T:PlanetTelex.Common.Models.CreditCardType" displayName="CreditCardType" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>American_Express = 3</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;AmericanExpress&quot;" />
            </attribute>
          </field>
          <field name="Discover" id="F:PlanetTelex.Common.Models.CreditCardType.Discover" access="Public" contract="Static" literal="true" value="4" typeId="T:PlanetTelex.Common.Models.CreditCardType" displayName="CreditCardType" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Discover = 4</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Discover&quot;" />
            </attribute>
          </field>
          <field name="Diners_Club" id="F:PlanetTelex.Common.Models.CreditCardType.Diners_Club" access="Public" contract="Static" literal="true" value="5" typeId="T:PlanetTelex.Common.Models.CreditCardType" displayName="CreditCardType" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Diners_Club = 5</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;DinersClub&quot;" />
            </attribute>
          </field>
          <field name="Jcb" id="F:PlanetTelex.Common.Models.CreditCardType.Jcb" access="Public" contract="Static" literal="true" value="6" typeId="T:PlanetTelex.Common.Models.CreditCardType" displayName="CreditCardType" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Jcb = 6</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Jcb&quot;" />
            </attribute>
          </field>
        </enumeration>
      </namespace>
      <namespace name="PlanetTelex">
        <documentation>
          <summary>PlanetTelex assembly root namespace.</summary>
        </documentation>
        <class name="Settings" displayName="Settings" namespace="PlanetTelex" id="T:PlanetTelex.Settings" access="Public">
          <documentation><summary> Optional settings for the PlanetTelex assembly obtained from application settings configuration. </summary></documentation>
          <constructor name=".ctor" id="M:PlanetTelex.Settings.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Settings" /> class.</summary>
            </documentation>
          </constructor>
          <property name="Current" id="P:PlanetTelex.Settings.Current" access="Public" contract="Static" get="Public" set="false" typeId="T:PlanetTelex.Settings" displayName="Settings" namespace="PlanetTelex" assembly="PlanetTelex" nullable="false" valueType="false">
            <documentation><summary> Gets the current settings. </summary></documentation>
          </property>
          <property name="CreditCardDateFormatString" id="P:PlanetTelex.Settings.CreditCardDateFormatString" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the string specifying the date format specified by the AppSettings key "CreditCardDateFormat". Default is "MMyy". </summary></documentation>
          </property>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Settings.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Settings.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Settings.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Settings.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Settings.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Settings.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
      </namespace>
      <namespace name="PlanetTelex.Collections">
        <documentation>
          <summary>Collection classes.</summary>
        </documentation>
        <class name="PaginatedList`1" displayName="PaginatedList{T}" namespace="PlanetTelex.Collections" id="T:PlanetTelex.Collections.PaginatedList`1" access="Public">
          <documentation><summary> A paginated list. </summary>
<typeparam name="T">The type listed.</typeparam></documentation>
          <attribute name="System.SerializableAttribute" />
          <attribute name="System.Reflection.DefaultMemberAttribute">
            <property name="MemberName" type="System.String" value="&quot;Item&quot;" />
          </attribute>
          <implementsClass type="PlanetTelex.Collections.IPaginatedList`1" id="T:PlanetTelex.Collections.IPaginatedList`1" displayName="IPaginatedList{T}" namespace="PlanetTelex.Collections">
            <genericargument name="T" displayName="T" />
          </implementsClass>
          <implementsClass type="System.Collections.Generic.IList`1" id="T:System.Collections.Generic.IList`1" displayName="IList{T}" namespace="System.Collections.Generic">
            <genericargument name="T" displayName="T" />
          </implementsClass>
          <implementsClass type="System.Collections.Generic.ICollection`1" id="T:System.Collections.Generic.ICollection`1" displayName="ICollection{T}" namespace="System.Collections.Generic">
            <genericargument name="T" displayName="T" />
          </implementsClass>
          <implementsClass type="System.Collections.Generic.IEnumerable`1" id="T:System.Collections.Generic.IEnumerable`1" displayName="IEnumerable{T}" namespace="System.Collections.Generic">
            <genericargument name="T" displayName="T" />
          </implementsClass>
          <implementsClass type="System.Collections.IEnumerable" id="T:System.Collections.IEnumerable" displayName="IEnumerable" namespace="System.Collections" />
          <genericargument name="T" displayName="T" />
          <constructor name=".ctor" id="M:PlanetTelex.Collections.PaginatedList`1.#ctor" access="Public" contract="Normal" overload="1">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Collections.PaginatedList`1" /> class. </summary></documentation>
          </constructor>
          <constructor name=".ctor" id="M:PlanetTelex.Collections.PaginatedList`1.#ctor(System.Collections.Generic.List{`0})" access="Public" contract="Normal" overload="2">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Collections.PaginatedList`1" /> class. </summary>
<param name="list">A list to initialize this instance with.</param></documentation>
            <parameter name="list" typeId="T:System.Collections.Generic.List`1" displayName="List{T}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
            </parameter>
          </constructor>
          <constructor name=".ctor" id="M:PlanetTelex.Collections.PaginatedList`1.#ctor(System.Collections.Generic.List{`0},System.Int32)" access="Public" contract="Normal" overload="3">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Collections.PaginatedList`1" /> class. </summary>
<param name="list">A list to initialize this instance with.</param>
<param name="totalCount">The total count.</param></documentation>
            <parameter name="list" typeId="T:System.Collections.Generic.List`1" displayName="List{T}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
            </parameter>
            <parameter name="totalCount" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </constructor>
          <field name="List" id="F:PlanetTelex.Collections.PaginatedList`1.List" access="Family" contract="Normal" typeId="T:System.Collections.Generic.List`1" displayName="List{T}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
            <genericargument name="T" displayName="T" />
            <documentation><summary> This list. </summary></documentation>
          </field>
          <property name="TotalCount" id="P:PlanetTelex.Collections.PaginatedList`1.TotalCount" access="Public" contract="Final" get="Public" set="Public" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets or sets the total result count. </summary>
<value> The total result count, which may be greater than the count in this list. </value></documentation>
            <implements name="TotalCount" id="P:PlanetTelex.Collections.IPaginatedList`1.TotalCount" interface="IPaginatedList`1" assembly="PlanetTelex" interfaceId="T:PlanetTelex.Collections.IPaginatedList`1">
              <declaringType name="T:PlanetTelex.Collections.IPaginatedList`1">
                <genericargument name="T" displayName="T" />
              </declaringType>
            </implements>
          </property>
          <property name="Item" id="P:PlanetTelex.Collections.PaginatedList`1.Item(System.Int32)" access="Public" contract="Final" get="Public" set="Public" typeId="T:T" displayName="PaginatedList{T}.T" namespace="PlanetTelex.Collections" assembly="PlanetTelex" nullable="false" valueType="false">
            <parameter name="index" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Gets or sets the element at the specified index. </summary>
<returns> The element at the specified index. </returns>
<exception cref="T:System.ArgumentOutOfRangeException">
  <paramref name="index" /> is not a valid index in the list. </exception>
<exception cref="T:System.NotSupportedException"> The property is set and the list is read-only. </exception></documentation>
            <implements name="Item" id="P:System.Collections.Generic.IList`1.Item(System.Int32)" interface="IList`1" assembly="mscorlib" interfaceId="T:System.Collections.Generic.IList`1">
              <declaringType name="T:System.Collections.Generic.IList`1">
                <genericargument name="T" displayName="T" />
              </declaringType>
            </implements>
          </property>
          <property name="Count" id="P:PlanetTelex.Collections.PaginatedList`1.Count" access="Public" contract="Final" get="Public" set="false" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />. </summary>
<returns> The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />. </returns></documentation>
            <implements name="Count" id="P:System.Collections.Generic.ICollection`1.Count" interface="ICollection`1" assembly="mscorlib" interfaceId="T:System.Collections.Generic.ICollection`1">
              <declaringType name="T:System.Collections.Generic.ICollection`1">
                <genericargument name="T" displayName="T" />
              </declaringType>
            </implements>
          </property>
          <property name="IsReadOnly" id="P:PlanetTelex.Collections.PaginatedList`1.IsReadOnly" access="Public" contract="Final" get="Public" set="false" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </summary>
<returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false. </returns></documentation>
            <implements name="IsReadOnly" id="P:System.Collections.Generic.ICollection`1.IsReadOnly" interface="ICollection`1" assembly="mscorlib" interfaceId="T:System.Collections.Generic.ICollection`1">
              <declaringType name="T:System.Collections.Generic.ICollection`1">
                <genericargument name="T" displayName="T" />
              </declaringType>
            </implements>
          </property>
          <method name="IndexOf" displayName="IndexOf" id="M:PlanetTelex.Collections.PaginatedList`1.IndexOf(`0)" access="Public" contract="Final" valueType="true">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines the index of a specific item in the list. </summary>
<param name="item">The object to locate in the list.</param>
<returns> The index of <paramref name="item" /> if found in the list; otherwise, -1. </returns></documentation>
            <parameter name="item" typeId="T:T" displayName="PaginatedList{T}.T" namespace="PlanetTelex.Collections" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="IndexOf" id="M:System.Collections.Generic.IList`1.IndexOf(`0)" interface="IList{T}" interfaceId="T:System.Collections.Generic.IList`1" assembly="mscorlib">
              <declaringType name="T:System.Collections.Generic.IList`1">
                <genericargument name="T" displayName="T" />
              </declaringType>
            </implements>
          </method>
          <method name="Insert" displayName="Insert" id="M:PlanetTelex.Collections.PaginatedList`1.Insert(System.Int32,`0)" access="Public" contract="Final" valueType="true">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Inserts an item to the list at the specified index. </summary>
<param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
<param name="item">The object to insert into the list.</param>
<exception cref="T:System.ArgumentOutOfRangeException">
  <paramref name="index" /> is not a valid index in the list. </exception>
<exception cref="T:System.NotSupportedException"> The list is read-only. </exception></documentation>
            <parameter name="index" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="item" typeId="T:T" displayName="PaginatedList{T}.T" namespace="PlanetTelex.Collections" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="Insert" id="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)" interface="IList{T}" interfaceId="T:System.Collections.Generic.IList`1" assembly="mscorlib">
              <declaringType name="T:System.Collections.Generic.IList`1">
                <genericargument name="T" displayName="T" />
              </declaringType>
            </implements>
          </method>
          <method name="RemoveAt" displayName="RemoveAt" id="M:PlanetTelex.Collections.PaginatedList`1.RemoveAt(System.Int32)" access="Public" contract="Final" valueType="true">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Removes the list item at the specified index. </summary>
<param name="index">The zero-based index of the item to remove.</param>
<exception cref="T:System.ArgumentOutOfRangeException">
  <paramref name="index" /> is not a valid index in the list. </exception>
<exception cref="T:System.NotSupportedException"> The list is read-only. </exception></documentation>
            <parameter name="index" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <implements name="RemoveAt" id="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)" interface="IList{T}" interfaceId="T:System.Collections.Generic.IList`1" assembly="mscorlib">
              <declaringType name="T:System.Collections.Generic.IList`1">
                <genericargument name="T" displayName="T" />
              </declaringType>
            </implements>
          </method>
          <method name="Add" displayName="Add" id="M:PlanetTelex.Collections.PaginatedList`1.Add(`0)" access="Public" contract="Final" valueType="true">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />. </summary>
<param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
<exception cref="T:System.NotSupportedException"> The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </exception></documentation>
            <parameter name="item" typeId="T:T" displayName="PaginatedList{T}.T" namespace="PlanetTelex.Collections" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="Add" id="M:System.Collections.Generic.ICollection`1.Add(`0)" interface="ICollection{T}" interfaceId="T:System.Collections.Generic.ICollection`1" assembly="mscorlib">
              <declaringType name="T:System.Collections.Generic.ICollection`1">
                <genericargument name="T" displayName="T" />
              </declaringType>
            </implements>
          </method>
          <method name="Clear" displayName="Clear" id="M:PlanetTelex.Collections.PaginatedList`1.Clear" access="Public" contract="Final" valueType="true">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />. </summary>
<exception cref="T:System.NotSupportedException"> The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </exception></documentation>
            <implements name="Clear" id="M:System.Collections.Generic.ICollection`1.Clear" interface="ICollection{T}" interfaceId="T:System.Collections.Generic.ICollection`1" assembly="mscorlib">
              <declaringType name="T:System.Collections.Generic.ICollection`1">
                <genericargument name="T" displayName="T" />
              </declaringType>
            </implements>
          </method>
          <method name="Contains" displayName="Contains" id="M:PlanetTelex.Collections.PaginatedList`1.Contains(`0)" access="Public" contract="Final" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value. </summary>
<param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
<returns> true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. </returns></documentation>
            <parameter name="item" typeId="T:T" displayName="PaginatedList{T}.T" namespace="PlanetTelex.Collections" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="Contains" id="M:System.Collections.Generic.ICollection`1.Contains(`0)" interface="ICollection{T}" interfaceId="T:System.Collections.Generic.ICollection`1" assembly="mscorlib">
              <declaringType name="T:System.Collections.Generic.ICollection`1">
                <genericargument name="T" displayName="T" />
              </declaringType>
            </implements>
          </method>
          <method name="CopyTo" displayName="CopyTo" id="M:PlanetTelex.Collections.PaginatedList`1.CopyTo(`0[],System.Int32)" access="Public" contract="Final" valueType="true">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Copies to. </summary>
<param name="array">The array.</param>
<param name="arrayIndex">Index of the array.</param></documentation>
            <parameter name="array" typeId="T:T" displayName="PaginatedList{T}.T" namespace="PlanetTelex.Collections" assembly="PlanetTelex" nullable="false" valueType="false">
              <array rank="1" />
            </parameter>
            <parameter name="arrayIndex" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <implements name="CopyTo" id="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" interface="ICollection{T}" interfaceId="T:System.Collections.Generic.ICollection`1" assembly="mscorlib">
              <declaringType name="T:System.Collections.Generic.ICollection`1">
                <genericargument name="T" displayName="T" />
              </declaringType>
            </implements>
          </method>
          <method name="Remove" displayName="Remove" id="M:PlanetTelex.Collections.PaginatedList`1.Remove(`0)" access="Public" contract="Final" valueType="true">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />. </summary>
<param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
<returns> true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" nolink="true" />. </returns>
<exception cref="T:System.NotSupportedException"> The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only. </exception></documentation>
            <parameter name="item" typeId="T:T" displayName="PaginatedList{T}.T" namespace="PlanetTelex.Collections" assembly="PlanetTelex" nullable="false" valueType="false" />
            <implements name="Remove" id="M:System.Collections.Generic.ICollection`1.Remove(`0)" interface="ICollection{T}" interfaceId="T:System.Collections.Generic.ICollection`1" assembly="mscorlib">
              <declaringType name="T:System.Collections.Generic.ICollection`1">
                <genericargument name="T" displayName="T" />
              </declaringType>
            </implements>
          </method>
          <method name="GetEnumerator" displayName="GetEnumerator" id="M:PlanetTelex.Collections.PaginatedList`1.GetEnumerator" access="Public" contract="Final" valueType="false">
            <returnType typeId="T:System.Collections.Generic.IEnumerator`1" displayName="IEnumerator{T}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
            </returnType>
            <documentation><summary> Returns an enumerator that iterates through the collection. </summary>
<returns> A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection. </returns></documentation>
            <implements name="GetEnumerator" id="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" interface="IEnumerable{T}" interfaceId="T:System.Collections.Generic.IEnumerable`1" assembly="mscorlib">
              <declaringType name="T:System.Collections.Generic.IEnumerable`1">
                <genericargument name="T" displayName="T" />
              </declaringType>
            </implements>
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Collections.PaginatedList`1.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Collections.PaginatedList`1.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Collections.PaginatedList`1.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Collections.PaginatedList`1.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Collections.PaginatedList`1.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Collections.PaginatedList`1.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <interface name="IPaginatedList`1" displayName="IPaginatedList{T}" namespace="PlanetTelex.Collections" id="T:PlanetTelex.Collections.IPaginatedList`1" access="Public">
          <documentation><summary> Defines a contract for a paginated list. </summary>
<typeparam name="T">The type contained in the list.</typeparam></documentation>
          <implements type="System.Collections.Generic.IList`1" assembly="mscorlib" id="T:System.Collections.Generic.IList`1">
            <genericargument name="T" displayName="T" />
          </implements>
          <implements type="System.Collections.Generic.ICollection`1" assembly="mscorlib" id="T:System.Collections.Generic.ICollection`1">
            <genericargument name="T" displayName="T" />
          </implements>
          <implements type="System.Collections.Generic.IEnumerable`1" assembly="mscorlib" id="T:System.Collections.Generic.IEnumerable`1">
            <genericargument name="T" displayName="T" />
          </implements>
          <implements type="System.Collections.IEnumerable" assembly="mscorlib" id="T:System.Collections.IEnumerable" />
          <genericargument name="T" displayName="T" />
          <implementedBy id="T:PlanetTelex.Collections.PaginatedList`1" displayName="PaginatedList{T}" namespace="PlanetTelex.Collections" assembly="PlanetTelex" />
          <property name="TotalCount" id="P:PlanetTelex.Collections.IPaginatedList`1.TotalCount" access="Public" contract="Abstract" get="Public" set="Public" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets or sets the total result count. </summary>
<value> The total result count, which may be greater than the count in this list. </value></documentation>
          </property>
        </interface>
      </namespace>
      <namespace name="PlanetTelex.Common">
        <documentation>
          <summary>Common strings, enums and data models.</summary>
        </documentation>
        <class name="RegExPattern" displayName="RegExPattern" namespace="PlanetTelex.Common" id="T:PlanetTelex.Common.RegExPattern" access="Public" static="true">
          <documentation><summary> Common regular expressions. </summary></documentation>
          <field name="ALPHABETIC" id="F:PlanetTelex.Common.RegExPattern.ALPHABETIC" access="Public" contract="Static" literal="true" value="&quot;^\\p{L}+$&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> ^\p{L}+$ </summary></documentation>
          </field>
          <field name="ALPHABETIC_WITH_WHITESPACE" id="F:PlanetTelex.Common.RegExPattern.ALPHABETIC_WITH_WHITESPACE" access="Public" contract="Static" literal="true" value="&quot;^[\\p{L}\\s]*$&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> ^[\p{L}\s]*$ </summary></documentation>
          </field>
          <field name="ALPHA_NUMERIC" id="F:PlanetTelex.Common.RegExPattern.ALPHA_NUMERIC" access="Public" contract="Static" literal="true" value="&quot;^[\\p{L}\\d]+$&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> ^[\p{L}\d]+$ </summary></documentation>
          </field>
          <field name="ALPHA_NUMERIC_WITH_WHITESPACE" id="F:PlanetTelex.Common.RegExPattern.ALPHA_NUMERIC_WITH_WHITESPACE" access="Public" contract="Static" literal="true" value="&quot;^[\\p{L}\\d\\s]*$&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> ^[\p{L}\d\s]*$ </summary></documentation>
          </field>
          <field name="FRACTION" id="F:PlanetTelex.Common.RegExPattern.FRACTION" access="Public" contract="Static" literal="true" value="&quot;[\\s-]{0,1}[0-9]+/[1-9]+&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> [\s-]{0,1}[0-9]+/[1-9]+ </summary></documentation>
          </field>
          <field name="GUID" id="F:PlanetTelex.Common.RegExPattern.GUID" access="Public" contract="Static" literal="true" value="&quot;^\\{?[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\\}&quot; +&#xD;&#xA;    &quot;?$&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> ^\{?[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\}?$ </summary></documentation>
          </field>
          <field name="HTML_TAG" id="F:PlanetTelex.Common.RegExPattern.HTML_TAG" access="Public" contract="Static" literal="true" value="&quot;&lt;[^&gt;]*&gt;&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> &lt;[^&gt;]*&gt; </summary></documentation>
          </field>
          <field name="IP_ADDRESS" id="F:PlanetTelex.Common.RegExPattern.IP_ADDRESS" access="Public" contract="Static" literal="true" value="@&quot;^(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9])$&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> ^(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9])$ </summary></documentation>
          </field>
          <field name="ISBN" id="F:PlanetTelex.Common.RegExPattern.ISBN" access="Public" contract="Static" literal="true" value="&quot;^(ISBN){0,1}[\\s-]{0,1}[0-9]{1}[\\s-]{0,1}[0-9]{6}[\\s-]{0,1}[0-9]{2}[\\s-]{0,1}[xX0-&quot; +&#xD;&#xA;    &quot;9]{1}$&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> ^(ISBN){0,1}[\s-]{0,1}[0-9]{1}[\s-]{0,1}[0-9]{6}[\s-]{0,1}[0-9]{2}[\s-]{0,1}[xX0-9]{1}$ </summary></documentation>
          </field>
          <field name="LEADING_NUMBERS" id="F:PlanetTelex.Common.RegExPattern.LEADING_NUMBERS" access="Public" contract="Static" literal="true" value="&quot;^[0-9]*&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> /^[0-9]*/ </summary></documentation>
          </field>
          <field name="NOT_ALPHA_NUMERIC" id="F:PlanetTelex.Common.RegExPattern.NOT_ALPHA_NUMERIC" access="Public" contract="Static" literal="true" value="&quot;[^0-9a-zA-Z\\s]&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> [^0-9a-zA-Z\\s] - this does include whitespaces as an alphanumeric character </summary></documentation>
          </field>
          <field name="NOT_ALPHA_NUMERIC_FOR_URL" id="F:PlanetTelex.Common.RegExPattern.NOT_ALPHA_NUMERIC_FOR_URL" access="Public" contract="Static" literal="true" value="&quot;[^0-9a-zA-Z\\s-À-ÿ]&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> [^0-9a-zA-Z\\s-\xC0-\xFF] - This does include whitespaces and hyphen characters. It also matches special extension ascii to include characters such as ê, ç, ñ. This regex expression was created specifically for a URL Rewriter. </summary></documentation>
          </field>
          <field name="NOT_ALPHA_NUMERIC_EXCLUDING_WHITE_SPACE" id="F:PlanetTelex.Common.RegExPattern.NOT_ALPHA_NUMERIC_EXCLUDING_WHITE_SPACE" access="Public" contract="Static" literal="true" value="&quot;[^0-9a-zA-Z]&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> [^0-9a-zA-Z] - does not include whitespaces as alphanumeric characters </summary></documentation>
          </field>
          <field name="NUMERIC" id="F:PlanetTelex.Common.RegExPattern.NUMERIC" access="Public" contract="Static" literal="true" value="&quot;^[\\d]+$&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> ^[\d]+$ </summary></documentation>
          </field>
          <field name="NUMERIC_WITH_WHITESPACE" id="F:PlanetTelex.Common.RegExPattern.NUMERIC_WITH_WHITESPACE" access="Public" contract="Static" literal="true" value="&quot;^[\\d\\s]*$&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> ^[\d\s]*$ </summary></documentation>
          </field>
          <field name="PHONE_NUMBER" id="F:PlanetTelex.Common.RegExPattern.PHONE_NUMBER" access="Public" contract="Static" literal="true" value="&quot;^(\\(?\\+?[0-9]*\\)?)?[0-9_\\- \\(\\)]+$&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> ^(\(?\+?[0-9]*\)?)?[0-9_\- \(\)]+$ </summary></documentation>
          </field>
          <field name="UK_NATIONAL_INSURANCE_NUMBER" id="F:PlanetTelex.Common.RegExPattern.UK_NATIONAL_INSURANCE_NUMBER" access="Public" contract="Static" literal="true" value="&quot;^[A-Za-z]{2}[0-9]{6}[A-Za-z]{1}$&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> ^[A-Za-z]{2}[0-9]{6}[A-Za-z]{1}$ </summary></documentation>
          </field>
          <field name="UK_POSTAL_CODE" id="F:PlanetTelex.Common.RegExPattern.UK_POSTAL_CODE" access="Public" contract="Static" literal="true" value="&quot;^[a-zA-Z]{1,2}[0-9][0-9A-Za-z]{0,1} {0,1}[0-9][A-Za-z]{2}$&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> ^[a-zA-Z]{1,2}[0-9][0-9A-Za-z]{0,1} {0,1}[0-9][A-Za-z]{2}$ </summary></documentation>
          </field>
          <field name="US_ZIP_CODE" id="F:PlanetTelex.Common.RegExPattern.US_ZIP_CODE" access="Public" contract="Static" literal="true" value="&quot;^(\\d{5}-\\d{4}|\\d{5})$|^([A-Z]\\d[A-Z] \\d[A-Z]\\d)$&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> ^(\d{5}-\d{4}|\d{5})$|^([A-Z]\d[A-Z] \d[A-Z]\d)$ </summary></documentation>
          </field>
          <field name="WHITESPACE" id="F:PlanetTelex.Common.RegExPattern.WHITESPACE" access="Public" contract="Static" literal="true" value="&quot;^[\\s]*$&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> ^[\s]*$ </summary></documentation>
          </field>
          <field name="XML_DOCTYPE_NODE" id="F:PlanetTelex.Common.RegExPattern.XML_DOCTYPE_NODE" access="Public" contract="Static" literal="true" value="&quot;&lt;\\?xml[^&gt;]*\\?&gt;&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> &lt;\\?xml[^&gt;]*\\?&gt; </summary></documentation>
          </field>
          <field name="XML_NAMESPACE_ATTRIBUTE" id="F:PlanetTelex.Common.RegExPattern.XML_NAMESPACE_ATTRIBUTE" access="Public" contract="Static" literal="true" value="&quot;xmlns=\&quot;[^&gt;\&quot;]*\&quot;&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> xmlns=\"[^&gt;\"]*\" </summary></documentation>
          </field>
          <field name="URI" id="F:PlanetTelex.Common.RegExPattern.URI" access="Public" contract="Static" literal="true" value="&quot;^((https?|ftp)://)?(([0-9a-z_!~*\'().&amp;=+$%-]+: )?[0-9a-z_!~*\'().&amp;=+$%-]+@)?(([0-9]&quot; +&#xD;&#xA;    &quot;{1,3}\\.){3}[0-9]{1,3}|([0-9a-z_!~*\'()-]+\\.)*([0-9a-z][0-9a-z-]{0,61})?[0-9a-z](\\&quot; +&#xD;&#xA;    &quot;.[a-z]{2,6})?)(:[0-9]{1,5})?((/?)|(/[0-9a-z_!~*\'().;?:@&amp;=+$,%#-]+)+/?)$&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          <field name="EMAIL_ADDRESS" id="F:PlanetTelex.Common.RegExPattern.EMAIL_ADDRESS" access="Public" contract="Static" literal="true" value="&quot;^(([A-Za-z0-9]+_+)|([A-Za-z0-9]+\\-+)|([A-Za-z0-9]+\\.+)|([A-Za-z0-9]+\\++))*[A-Za-z&quot; +&#xD;&#xA;    &quot;0-9]+@((\\w+\\-+)|(\\w+\\.))*\\w{1,63}\\.[a-zA-Z]{2,6}$&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> ^(([A-Za-z0-9]+_+)|([A-Za-z0-9]+\-+)|([A-Za-z0-9]+\.+)|([A-Za-z0-9]+\++))*[A-Za-z0-9]+@((\w+\-+)|(\w+\.))*\w{1,63}\.[a-zA-Z]{2,6}$ It verifies that: * Only letters, numbers and email acceptable symbols (+, _, -, .) are allowed - * No two different symbols may follow each other - * Cannot begin with a symbol - * Ending domain must be at least 2 letters - * Supports subdomains - * TLD must be between 2 and 6 letters (Ex: .ca, .museum) - * Only (-) and (.) symbols are allowed in domain, but not consecutively. Matches: g_s+gav@com.com | gav@gav.com | jim@jim.c.dc.ca Non-Matches: gs_.gs@com.com | gav@gav.c | jim@--c.ca </summary></documentation>
          </field>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Common.RegExPattern.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Common.RegExPattern.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Common.RegExPattern.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Common.RegExPattern.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Common.RegExPattern.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Common.RegExPattern.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <enumeration name="FileExtension" id="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" access="Public">
          <documentation><summary> Common file extensions with MIME type attributes. </summary></documentation>
          <field name="None" id="F:PlanetTelex.Common.FileExtension.None" access="Public" contract="Static" literal="true" value="0" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>None = 0</summary></documentation>
          </field>
          <field name="Jpg" id="F:PlanetTelex.Common.FileExtension.Jpg" access="Public" contract="Static" literal="true" value="1" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Jpg = 1</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Jpg&quot;" />
            </attribute>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;image/jpeg&quot;" />
            </attribute>
          </field>
          <field name="Gif" id="F:PlanetTelex.Common.FileExtension.Gif" access="Public" contract="Static" literal="true" value="2" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Gif = 2</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Gif&quot;" />
            </attribute>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;image/gif&quot;" />
            </attribute>
          </field>
          <field name="Png" id="F:PlanetTelex.Common.FileExtension.Png" access="Public" contract="Static" literal="true" value="3" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Png = 3</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;image/png&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Png&quot;" />
            </attribute>
          </field>
          <field name="Tiff" id="F:PlanetTelex.Common.FileExtension.Tiff" access="Public" contract="Static" literal="true" value="4" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Tiff = 4</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Tiff&quot;" />
            </attribute>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;image/tiff&quot;" />
            </attribute>
          </field>
          <field name="Bmp" id="F:PlanetTelex.Common.FileExtension.Bmp" access="Public" contract="Static" literal="true" value="5" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Bmp = 5</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Bmp&quot;" />
            </attribute>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;image/bmp&quot;" />
            </attribute>
          </field>
          <field name="Threeg2" id="F:PlanetTelex.Common.FileExtension.Threeg2" access="Public" contract="Static" literal="true" value="6" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Threeg2 = 6</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/3gpp2&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Threeg2&quot;" />
            </attribute>
          </field>
          <field name="Threegp" id="F:PlanetTelex.Common.FileExtension.Threegp" access="Public" contract="Static" literal="true" value="7" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Threegp = 7</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/3gpp&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Threegp&quot;" />
            </attribute>
          </field>
          <field name="Threegpp" id="F:PlanetTelex.Common.FileExtension.Threegpp" access="Public" contract="Static" literal="true" value="8" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Threegpp = 8</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/3gpp&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Threegpp&quot;" />
            </attribute>
          </field>
          <field name="Asf" id="F:PlanetTelex.Common.FileExtension.Asf" access="Public" contract="Static" literal="true" value="9" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Asf = 9</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Asf&quot;" />
            </attribute>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/x-ms-asf&quot;" />
            </attribute>
          </field>
          <field name="Avi" id="F:PlanetTelex.Common.FileExtension.Avi" access="Public" contract="Static" literal="true" value="10" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Avi = 10</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Avi&quot;" />
            </attribute>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/x-msvideo&quot;" />
            </attribute>
          </field>
          <field name="Dat" id="F:PlanetTelex.Common.FileExtension.Dat" access="Public" contract="Static" literal="true" value="11" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Dat = 11</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/mpeg&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Dat&quot;" />
            </attribute>
          </field>
          <field name="Flv" id="F:PlanetTelex.Common.FileExtension.Flv" access="Public" contract="Static" literal="true" value="12" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Flv = 12</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/x-flv&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Flv&quot;" />
            </attribute>
          </field>
          <field name="M4V" id="F:PlanetTelex.Common.FileExtension.M4V" access="Public" contract="Static" literal="true" value="13" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>M4V = 13</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/x-m4v&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;M4V&quot;" />
            </attribute>
          </field>
          <field name="Mkv" id="F:PlanetTelex.Common.FileExtension.Mkv" access="Public" contract="Static" literal="true" value="14" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Mkv = 14</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Mkv&quot;" />
            </attribute>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/x-matroska&quot;" />
            </attribute>
          </field>
          <field name="Mod" id="F:PlanetTelex.Common.FileExtension.Mod" access="Public" contract="Static" literal="true" value="15" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Mod = 15</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Mod&quot;" />
            </attribute>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/x-mod&quot;" />
            </attribute>
          </field>
          <field name="Mov" id="F:PlanetTelex.Common.FileExtension.Mov" access="Public" contract="Static" literal="true" value="16" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Mov = 16</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/quicktime&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Mov&quot;" />
            </attribute>
          </field>
          <field name="Mp4" id="F:PlanetTelex.Common.FileExtension.Mp4" access="Public" contract="Static" literal="true" value="17" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Mp4 = 17</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Mp4&quot;" />
            </attribute>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/mp4&quot;" />
            </attribute>
          </field>
          <field name="Mpe" id="F:PlanetTelex.Common.FileExtension.Mpe" access="Public" contract="Static" literal="true" value="18" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Mpe = 18</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/mpeg&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Mpe&quot;" />
            </attribute>
          </field>
          <field name="Mpeg" id="F:PlanetTelex.Common.FileExtension.Mpeg" access="Public" contract="Static" literal="true" value="19" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Mpeg = 19</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/mpeg&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Mpeg&quot;" />
            </attribute>
          </field>
          <field name="Mpeg4" id="F:PlanetTelex.Common.FileExtension.Mpeg4" access="Public" contract="Static" literal="true" value="20" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Mpeg4 = 20</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Mpeg4&quot;" />
            </attribute>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/mp4&quot;" />
            </attribute>
          </field>
          <field name="Mpg" id="F:PlanetTelex.Common.FileExtension.Mpg" access="Public" contract="Static" literal="true" value="21" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Mpg = 21</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/mpeg&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Mpg&quot;" />
            </attribute>
          </field>
          <field name="Nsv" id="F:PlanetTelex.Common.FileExtension.Nsv" access="Public" contract="Static" literal="true" value="22" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Nsv = 22</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Nsv&quot;" />
            </attribute>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;application/x-winamp&quot;" />
            </attribute>
          </field>
          <field name="Ogm" id="F:PlanetTelex.Common.FileExtension.Ogm" access="Public" contract="Static" literal="true" value="23" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Ogm = 23</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Ogm&quot;" />
            </attribute>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;application/ogg&quot;" />
            </attribute>
          </field>
          <field name="Ogv" id="F:PlanetTelex.Common.FileExtension.Ogv" access="Public" contract="Static" literal="true" value="24" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Ogv = 24</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;application/ogg&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Ogv&quot;" />
            </attribute>
          </field>
          <field name="Qt" id="F:PlanetTelex.Common.FileExtension.Qt" access="Public" contract="Static" literal="true" value="25" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Qt = 25</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/quicktime&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Qt&quot;" />
            </attribute>
          </field>
          <field name="Tod" id="F:PlanetTelex.Common.FileExtension.Tod" access="Public" contract="Static" literal="true" value="26" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Tod = 26</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Tod&quot;" />
            </attribute>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/x-tod&quot;" />
            </attribute>
          </field>
          <field name="Vob" id="F:PlanetTelex.Common.FileExtension.Vob" access="Public" contract="Static" literal="true" value="27" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Vob = 27</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/dvd&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Vob&quot;" />
            </attribute>
          </field>
          <field name="Wmv" id="F:PlanetTelex.Common.FileExtension.Wmv" access="Public" contract="Static" literal="true" value="28" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Wmv = 28</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;video/x-ms-wmv&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Wmv&quot;" />
            </attribute>
          </field>
          <field name="Zip" id="F:PlanetTelex.Common.FileExtension.Zip" access="Public" contract="Static" literal="true" value="29" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Zip = 29</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;application/zip&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Zip&quot;" />
            </attribute>
          </field>
          <field name="Asp" id="F:PlanetTelex.Common.FileExtension.Asp" access="Public" contract="Static" literal="true" value="30" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Asp = 30</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;text/html&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Asp&quot;" />
            </attribute>
          </field>
          <field name="Aspx" id="F:PlanetTelex.Common.FileExtension.Aspx" access="Public" contract="Static" literal="true" value="31" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Aspx = 31</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;text/html&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Aspx&quot;" />
            </attribute>
          </field>
          <field name="Html" id="F:PlanetTelex.Common.FileExtension.Html" access="Public" contract="Static" literal="true" value="32" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Html = 32</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Html&quot;" />
            </attribute>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;text/html&quot;" />
            </attribute>
          </field>
          <field name="Pdf" id="F:PlanetTelex.Common.FileExtension.Pdf" access="Public" contract="Static" literal="true" value="33" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Pdf = 33</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Pdf&quot;" />
            </attribute>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;application/pdf&quot;" />
            </attribute>
          </field>
          <field name="Config" id="F:PlanetTelex.Common.FileExtension.Config" access="Public" contract="Static" literal="true" value="34" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Config = 34</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;text/xml&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Config&quot;" />
            </attribute>
          </field>
          <field name="Exe" id="F:PlanetTelex.Common.FileExtension.Exe" access="Public" contract="Static" literal="true" value="35" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Exe = 35</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Exe&quot;" />
            </attribute>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;application/octet-stream&quot;" />
            </attribute>
          </field>
          <field name="Dll" id="F:PlanetTelex.Common.FileExtension.Dll" access="Public" contract="Static" literal="true" value="36" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Dll = 36</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;application/octet-stream&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Dll&quot;" />
            </attribute>
          </field>
          <field name="Xml" id="F:PlanetTelex.Common.FileExtension.Xml" access="Public" contract="Static" literal="true" value="36" typeId="T:PlanetTelex.Common.FileExtension" displayName="FileExtension" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Dll = 36</summary></documentation>
            <attribute name="PlanetTelex.Attributes.MimeTypeAttribute">
              <property name="Value" type="System.String" value="&quot;text/xml&quot;" />
            </attribute>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Xml&quot;" />
            </attribute>
          </field>
        </enumeration>
        <enumeration name="TextEncoding" id="T:PlanetTelex.Common.TextEncoding" displayName="TextEncoding" namespace="PlanetTelex.Common" access="Public">
          <documentation><summary> Text encodings. </summary></documentation>
          <field name="Utf8" id="F:PlanetTelex.Common.TextEncoding.Utf8" access="Public" contract="Static" literal="true" value="0" typeId="T:PlanetTelex.Common.TextEncoding" displayName="TextEncoding" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>UTF8</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;UTF8&quot;" />
            </attribute>
          </field>
          <field name="Utf16" id="F:PlanetTelex.Common.TextEncoding.Utf16" access="Public" contract="Static" literal="true" value="1" typeId="T:PlanetTelex.Common.TextEncoding" displayName="TextEncoding" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>UTF16</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;UTF16&quot;" />
            </attribute>
          </field>
          <field name="Utf32" id="F:PlanetTelex.Common.TextEncoding.Utf32" access="Public" contract="Static" literal="true" value="2" typeId="T:PlanetTelex.Common.TextEncoding" displayName="TextEncoding" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>UTF32</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;UTF32&quot;" />
            </attribute>
          </field>
          <field name="Ascii" id="F:PlanetTelex.Common.TextEncoding.Ascii" access="Public" contract="Static" literal="true" value="3" typeId="T:PlanetTelex.Common.TextEncoding" displayName="TextEncoding" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>ASCII</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Ascii&quot;" />
            </attribute>
          </field>
        </enumeration>
        <enumeration name="Order" id="T:PlanetTelex.Common.Order" displayName="Order" namespace="PlanetTelex.Common" access="Public">
          <documentation><summary> Sorting order of a list. </summary></documentation>
          <field name="Ascending" id="F:PlanetTelex.Common.Order.Ascending" access="Public" contract="Static" literal="true" value="0" typeId="T:PlanetTelex.Common.Order" displayName="Order" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Ascending</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Ascending&quot;" />
            </attribute>
          </field>
          <field name="Descending" id="F:PlanetTelex.Common.Order.Descending" access="Public" contract="Static" literal="true" value="1" typeId="T:PlanetTelex.Common.Order" displayName="Order" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Descending</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Descending&quot;" />
            </attribute>
          </field>
        </enumeration>
        <enumeration name="Seasons" id="T:PlanetTelex.Common.Seasons" displayName="Seasons" namespace="PlanetTelex.Common" access="Public" flags="true">
          <documentation><summary> Seasons of the year. </summary></documentation>
          <attribute name="System.FlagsAttribute" />
          <field name="Winter" id="F:PlanetTelex.Common.Seasons.Winter" access="Public" contract="Static" literal="true" value="1" typeId="T:PlanetTelex.Common.Seasons" displayName="Seasons" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Winter = 1</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Winter&quot;" />
            </attribute>
          </field>
          <field name="Spring" id="F:PlanetTelex.Common.Seasons.Spring" access="Public" contract="Static" literal="true" value="2" typeId="T:PlanetTelex.Common.Seasons" displayName="Seasons" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Spring = 2</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Spring&quot;" />
            </attribute>
          </field>
          <field name="Summer" id="F:PlanetTelex.Common.Seasons.Summer" access="Public" contract="Static" literal="true" value="4" typeId="T:PlanetTelex.Common.Seasons" displayName="Seasons" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Summer = 4</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Summer&quot;" />
            </attribute>
          </field>
          <field name="Fall" id="F:PlanetTelex.Common.Seasons.Fall" access="Public" contract="Static" literal="true" value="8" typeId="T:PlanetTelex.Common.Seasons" displayName="Seasons" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Fall = 8</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Fall&quot;" />
            </attribute>
          </field>
        </enumeration>
        <enumeration name="TimeMode" id="T:PlanetTelex.Common.TimeMode" displayName="TimeMode" namespace="PlanetTelex.Common" access="Public">
          <documentation><summary> Local or UTC. </summary></documentation>
          <field name="Local" id="F:PlanetTelex.Common.TimeMode.Local" access="Public" contract="Static" literal="true" value="0" typeId="T:PlanetTelex.Common.TimeMode" displayName="TimeMode" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>Local</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Local&quot;" />
            </attribute>
          </field>
          <field name="Utc" id="F:PlanetTelex.Common.TimeMode.Utc" access="Public" contract="Static" literal="true" value="1" typeId="T:PlanetTelex.Common.TimeMode" displayName="TimeMode" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>UTC</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;UTC&quot;" />
            </attribute>
          </field>
        </enumeration>
        <enumeration name="TemperatureUnit" id="T:PlanetTelex.Common.TemperatureUnit" displayName="TemperatureUnit" namespace="PlanetTelex.Common" access="Public">
          <documentation><summary> Temperature unit enum. </summary></documentation>
          <field name="C" id="F:PlanetTelex.Common.TemperatureUnit.C" access="Public" contract="Static" literal="true" value="1" typeId="T:PlanetTelex.Common.TemperatureUnit" displayName="TemperatureUnit" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>C = 1</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;C&quot;" />
            </attribute>
          </field>
          <field name="F" id="F:PlanetTelex.Common.TemperatureUnit.F" access="Public" contract="Static" literal="true" value="2" typeId="T:PlanetTelex.Common.TemperatureUnit" displayName="TemperatureUnit" namespace="PlanetTelex.Common" assembly="PlanetTelex" nullable="false" valueType="true">
            <documentation><summary>F = 2</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;F&quot;" />
            </attribute>
          </field>
        </enumeration>
      </namespace>
    </module>
  </assembly>
  <assembly name="PlanetTelex.Drawing" version="2.0.0.0">
    <assemblyReference name="mscorlib" />
    <assemblyReference name="EXIFextractor" />
    <assemblyReference name="System.Drawing" />
    <assemblyReference name="System.Core" />
    <assemblyReference name="System" />
    <attribute name="System.Reflection.AssemblyTitleAttribute" target="assembly">
      <property name="Title" type="System.String" value="&quot;Planet Telex .Net Drawing Library&quot;" />
    </attribute>
    <attribute name="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" target="assembly">
      <property name="WrapNonExceptionThrows" type="System.Boolean" value="True" />
    </attribute>
    <attribute name="System.Reflection.AssemblyConfigurationAttribute" target="assembly">
      <property name="Configuration" type="System.String" value="&quot;&quot;" />
    </attribute>
    <attribute name="System.Reflection.AssemblyCompanyAttribute" target="assembly">
      <property name="Company" type="System.String" value="&quot;Planet Telex, Inc.&quot;" />
    </attribute>
    <attribute name="System.Runtime.CompilerServices.CompilationRelaxationsAttribute" target="assembly">
      <property name="CompilationRelaxations" type="System.Int32" value="8" />
    </attribute>
    <attribute name="System.Reflection.AssemblyCopyrightAttribute" target="assembly">
      <property name="Copyright" type="System.String" value="&quot;Copyright © 2007 - 2015&quot;" />
    </attribute>
    <attribute name="System.Diagnostics.DebuggableAttribute" target="assembly">
      <property name="IsJITTrackingEnabled" type="System.Boolean" value="False" />
      <property name="IsJITOptimizerDisabled" type="System.Boolean" value="False" />
      <property name="DebuggingFlags" type="System.Diagnostics.DebuggableAttribute+DebuggingModes" value="DebuggingModes.IgnoreSymbolStoreSequencePoints" />
    </attribute>
    <attribute name="System.Reflection.AssemblyDescriptionAttribute" target="assembly">
      <property name="Description" type="System.String" value="&quot;A .Net drawing library written in C#.&quot;" />
    </attribute>
    <attribute name="System.Reflection.AssemblyProductAttribute" target="assembly">
      <property name="Product" type="System.String" value="&quot;Planet Telex .Net Drawing Library&quot;" />
    </attribute>
    <attribute name="System.Reflection.AssemblyTrademarkAttribute" target="assembly">
      <property name="Trademark" type="System.String" value="&quot;&quot;" />
    </attribute>
    <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" target="assembly">
      <property name="Value" type="System.Boolean" value="False" />
    </attribute>
    <attribute name="System.Runtime.InteropServices.GuidAttribute" target="assembly">
      <property name="Value" type="System.String" value="&quot;fd0ec82a-6bea-4733-bcf4-36c06f0cf705&quot;" />
    </attribute>
    <attribute name="System.Reflection.AssemblyFileVersionAttribute" target="assembly">
      <property name="Version" type="System.String" value="&quot;2.0.0.0&quot;" />
    </attribute>
    <module name="PlanetTelex.Drawing.dll">
      <namespace name="PlanetTelex.Drawing">
        <documentation>
          <summary>PlanetTelex.Drawing assembly root namespace.</summary>
        </documentation>
        <class name="ImageEditor" displayName="ImageEditor" namespace="PlanetTelex.Drawing" id="T:PlanetTelex.Drawing.ImageEditor" access="Public">
          <documentation><summary> A basic image editing API. </summary></documentation>
          <constructor name=".ctor" id="M:PlanetTelex.Drawing.ImageEditor.#ctor(System.String)" access="Public" contract="Normal" overload="1">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Drawing.ImageEditor" /> class. </summary>
<param name="filename">The filename.</param></documentation>
            <parameter name="filename" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </constructor>
          <constructor name=".ctor" id="M:PlanetTelex.Drawing.ImageEditor.#ctor(System.IO.Stream)" access="Public" contract="Normal" overload="2">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Drawing.ImageEditor" /> class. </summary>
<param name="stream">The stream.</param></documentation>
            <parameter name="stream" typeId="T:System.IO.Stream" displayName="Stream" namespace="System.IO" assembly="mscorlib" nullable="false" valueType="false" />
          </constructor>
          <constructor name=".ctor" id="M:PlanetTelex.Drawing.ImageEditor.#ctor(System.Drawing.Image)" access="Public" contract="Normal" overload="3">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Drawing.ImageEditor" /> class. </summary>
<param name="image">The image.</param></documentation>
            <parameter name="image" typeId="T:System.Drawing.Image" displayName="Image" namespace="System.Drawing" assembly="System.Drawing" nullable="false" valueType="false" />
          </constructor>
          <property name="Image" id="P:PlanetTelex.Drawing.ImageEditor.Image" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.Drawing.Image" displayName="Image" namespace="System.Drawing" assembly="System.Drawing" nullable="false" valueType="false">
            <documentation><summary> Returns the <see cref="P:PlanetTelex.Drawing.ImageEditor.Image" nolink="true" /> instance being manipulated by this <see cref="T:PlanetTelex.Drawing.ImageEditor" />. </summary>
<returns>The <see cref="P:PlanetTelex.Drawing.ImageEditor.Image" nolink="true" /> instance.</returns></documentation>
          </property>
          <property name="InterpolationMode" id="P:PlanetTelex.Drawing.ImageEditor.InterpolationMode" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.Drawing.Drawing2D.InterpolationMode" displayName="InterpolationMode" namespace="System.Drawing.Drawing2D" assembly="System.Drawing" nullable="false" valueType="true">
            <documentation><summary> Gets or sets the Drawing 2D interpolation mode for determining the quality of output. </summary>
<value> The interpolation mode. </value></documentation>
          </property>
          <property name="OrientationIsNormal" id="P:PlanetTelex.Drawing.ImageEditor.OrientationIsNormal" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets a value indicating whether the orientation is "normal" and not "flipped". </summary>
<value>
  <c>true</c> if the orientation is normal; otherwise, <c>false</c>. </value></documentation>
          </property>
          <property name="Orientation" id="P:PlanetTelex.Drawing.ImageEditor.Orientation" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.Drawing.RotateFlipType" displayName="RotateFlipType" namespace="System.Drawing" assembly="System.Drawing" nullable="false" valueType="true">
            <documentation><summary> Gets the orientation. </summary></documentation>
          </property>
          <method name="Resize" displayName="Resize" id="M:PlanetTelex.Drawing.ImageEditor.Resize(System.Drawing.Size)" access="Public" contract="Normal" valueType="false">
            <returnType typeId="T:PlanetTelex.Drawing.ImageEditor" displayName="ImageEditor" namespace="PlanetTelex.Drawing" assembly="PlanetTelex.Drawing" nullable="false" valueType="false" />
            <documentation><summary> Resizes the image using the specified size dimensions (keeps width and height proportionate). </summary>
<param name="size">
  <see cref="T:System.Drawing.Size" /> object representing the target height and width of the resized image.</param>
<returns>The <see cref="T:PlanetTelex.Drawing.ImageEditor" /> instance (useful for chaining methods).</returns></documentation>
            <parameter name="size" typeId="T:System.Drawing.Size" displayName="Size" namespace="System.Drawing" assembly="System.Drawing" nullable="false" valueType="true" />
          </method>
          <method name="GetResizeDimensions" displayName="GetResizeDimensions" id="M:PlanetTelex.Drawing.ImageEditor.GetResizeDimensions(System.Drawing.Size)" access="Public" contract="Normal" valueType="true">
            <returnType typeId="T:System.Drawing.Size" displayName="Size" namespace="System.Drawing" assembly="System.Drawing" nullable="false" valueType="true" />
            <documentation><summary> Calculates the new dimensions for resizing an image (maintains the original width to height ratio). </summary>
<param name="size">
  <see cref="T:System.Drawing.Size" /> object representing the target height and width.</param>
<returns>Size object representing the resize dimensions based off the target values.</returns></documentation>
            <parameter name="size" typeId="T:System.Drawing.Size" displayName="Size" namespace="System.Drawing" assembly="System.Drawing" nullable="false" valueType="true" />
          </method>
          <method name="Greyscale" displayName="Greyscale" id="M:PlanetTelex.Drawing.ImageEditor.Greyscale" access="Public" contract="Normal" valueType="false">
            <returnType typeId="T:PlanetTelex.Drawing.ImageEditor" displayName="ImageEditor" namespace="PlanetTelex.Drawing" assembly="PlanetTelex.Drawing" nullable="false" valueType="false" />
            <documentation><summary> Converts the image to greyscale colors. </summary>
<returns>The <see cref="T:PlanetTelex.Drawing.ImageEditor" /> instance (useful for chaining methods).</returns></documentation>
          </method>
          <method name="Grayscale" displayName="Grayscale" id="M:PlanetTelex.Drawing.ImageEditor.Grayscale" access="Public" contract="Normal" valueType="false">
            <returnType typeId="T:PlanetTelex.Drawing.ImageEditor" displayName="ImageEditor" namespace="PlanetTelex.Drawing" assembly="PlanetTelex.Drawing" nullable="false" valueType="false" />
            <documentation><summary> Converts the image to grayscale colors. </summary>
<returns>The <see cref="T:PlanetTelex.Drawing.ImageEditor" /> instance (useful for chaining methods).</returns></documentation>
          </method>
          <method name="Sepia" displayName="Sepia" id="M:PlanetTelex.Drawing.ImageEditor.Sepia" access="Public" contract="Normal" valueType="false">
            <returnType typeId="T:PlanetTelex.Drawing.ImageEditor" displayName="ImageEditor" namespace="PlanetTelex.Drawing" assembly="PlanetTelex.Drawing" nullable="false" valueType="false" />
            <documentation><summary> Converts the image to sepia colors. </summary>
<returns>The <see cref="T:PlanetTelex.Drawing.ImageEditor" /> instance (useful for chaining methods).</returns></documentation>
          </method>
          <method name="FixOrientation" displayName="FixOrientation" id="M:PlanetTelex.Drawing.ImageEditor.FixOrientation" access="Public" contract="Normal" valueType="false" overload="1">
            <returnType typeId="T:PlanetTelex.Drawing.ImageEditor" displayName="ImageEditor" namespace="PlanetTelex.Drawing" assembly="PlanetTelex.Drawing" nullable="false" valueType="false" />
            <documentation><summary> Fixes the orientation of this instance and resets the EXIF metadata. </summary>
<returns> The <see cref="T:PlanetTelex.Drawing.ImageEditor" /> instance (useful for chaining methods). </returns></documentation>
          </method>
          <method name="FixOrientation" displayName="FixOrientation" id="M:PlanetTelex.Drawing.ImageEditor.FixOrientation(System.Boolean)" access="Public" contract="Normal" valueType="false" overload="2">
            <returnType typeId="T:PlanetTelex.Drawing.ImageEditor" displayName="ImageEditor" namespace="PlanetTelex.Drawing" assembly="PlanetTelex.Drawing" nullable="false" valueType="false" />
            <documentation><summary> Fixes the orientation of this instance. </summary>
<param name="resetExifOrientation">if set to <c>true</c> reset orientation in EXIF metadata.</param>
<returns> The <see cref="T:PlanetTelex.Drawing.ImageEditor" /> instance (useful for chaining methods). </returns></documentation>
            <parameter name="resetExifOrientation" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="Rotate" displayName="Rotate" id="M:PlanetTelex.Drawing.ImageEditor.Rotate(System.Single)" access="Public" contract="Normal" valueType="false">
            <returnType typeId="T:PlanetTelex.Drawing.ImageEditor" displayName="ImageEditor" namespace="PlanetTelex.Drawing" assembly="PlanetTelex.Drawing" nullable="false" valueType="false" />
            <documentation><summary> Rotates the image either clockwise or counter-clockwise. </summary>
<param name="rotationAngle">The angle (in degrees). NOTE: Positive values will rotate clockwise Negative values will rotate counter-clockwise</param>
<returns>The <see cref="T:PlanetTelex.Drawing.ImageEditor" /> instance (useful for chaining methods).</returns></documentation>
            <parameter name="rotationAngle" typeId="T:System.Single" displayName="Single" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="ToBitmap" displayName="ToBitmap" id="M:PlanetTelex.Drawing.ImageEditor.ToBitmap" access="Public" contract="Normal" valueType="false">
            <returnType typeId="T:System.Drawing.Bitmap" displayName="Bitmap" namespace="System.Drawing" assembly="System.Drawing" nullable="false" valueType="false" />
            <documentation><summary> Converts this <see cref="P:PlanetTelex.Drawing.ImageEditor.Image" /> to a <see cref="T:System.Drawing.Bitmap" />. </summary>
<returns>
  <see cref="T:System.Drawing.Bitmap" />
</returns></documentation>
          </method>
          <method name="Save" displayName="Save" id="M:PlanetTelex.Drawing.ImageEditor.Save" access="Public" contract="Normal" valueType="false" overload="1">
            <returnType typeId="T:PlanetTelex.Drawing.ImageEditor" displayName="ImageEditor" namespace="PlanetTelex.Drawing" assembly="PlanetTelex.Drawing" nullable="false" valueType="false" />
            <documentation><summary> Saves the image to the same file or stream that it was loaded from. Defaults the target format to JPEG. </summary>
<returns>The <see cref="T:PlanetTelex.Drawing.ImageEditor" /> instance (useful for chaining methods).</returns>
<exception cref="T:System.ArgumentException">When the image wasn't loaded from a file.</exception></documentation>
          </method>
          <method name="Save" displayName="Save" id="M:PlanetTelex.Drawing.ImageEditor.Save(System.Drawing.Imaging.ImageFormat)" access="Public" contract="Normal" valueType="false" overload="2">
            <returnType typeId="T:PlanetTelex.Drawing.ImageEditor" displayName="ImageEditor" namespace="PlanetTelex.Drawing" assembly="PlanetTelex.Drawing" nullable="false" valueType="false" />
            <documentation><summary> Saves the image to the same file it was loaded from if loaded from a file. </summary>
<param name="format">The target <see cref="T:System.Drawing.Imaging.ImageFormat" /> of the saved image.</param>
<returns>The <see cref="T:PlanetTelex.Drawing.ImageEditor" /> instance (useful for chaining methods).</returns>
<exception cref="T:System.ArgumentException">When the image wasn't loaded from a file or stream.</exception></documentation>
            <parameter name="format" typeId="T:System.Drawing.Imaging.ImageFormat" displayName="ImageFormat" namespace="System.Drawing.Imaging" assembly="System.Drawing" nullable="false" valueType="false" />
          </method>
          <method name="Save" displayName="Save" id="M:PlanetTelex.Drawing.ImageEditor.Save(System.String)" access="Public" contract="Normal" valueType="false" overload="3">
            <returnType typeId="T:PlanetTelex.Drawing.ImageEditor" displayName="ImageEditor" namespace="PlanetTelex.Drawing" assembly="PlanetTelex.Drawing" nullable="false" valueType="false" />
            <documentation><summary> Saves the image to the specified file. Defaults the target format to JPEG. </summary>
<param name="filename">The target file path of the saved image.</param>
<returns>The <see cref="T:PlanetTelex.Drawing.ImageEditor" /> instance (useful for chaining methods).</returns></documentation>
            <parameter name="filename" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Save" displayName="Save" id="M:PlanetTelex.Drawing.ImageEditor.Save(System.String,System.Drawing.Imaging.ImageFormat)" access="Public" contract="Normal" valueType="false" overload="4">
            <returnType typeId="T:PlanetTelex.Drawing.ImageEditor" displayName="ImageEditor" namespace="PlanetTelex.Drawing" assembly="PlanetTelex.Drawing" nullable="false" valueType="false" />
            <documentation><summary> Saves the image to the specified file in the specified format. </summary>
<param name="filename">The target file path of the saved image.</param>
<param name="format">The target <see cref="T:System.Drawing.Imaging.ImageFormat" /> of the saved image.</param>
<returns>The <see cref="T:PlanetTelex.Drawing.ImageEditor" /> instance (useful for chaining methods).</returns></documentation>
            <parameter name="filename" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="format" typeId="T:System.Drawing.Imaging.ImageFormat" displayName="ImageFormat" namespace="System.Drawing.Imaging" assembly="System.Drawing" nullable="false" valueType="false" />
          </method>
          <method name="Save" displayName="Save" id="M:PlanetTelex.Drawing.ImageEditor.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)" access="Public" contract="Normal" valueType="false" overload="5">
            <returnType typeId="T:PlanetTelex.Drawing.ImageEditor" displayName="ImageEditor" namespace="PlanetTelex.Drawing" assembly="PlanetTelex.Drawing" nullable="false" valueType="false" />
            <documentation><summary> Saves the image to the specified stream in the specified format. </summary>
<param name="stream">The stream to use for saving the image.</param>
<param name="format">The target <see cref="T:System.Drawing.Imaging.ImageFormat" /> of the saved image.</param>
<returns>The <see cref="T:PlanetTelex.Drawing.ImageEditor" /> instance (useful for chaining methods).</returns></documentation>
            <parameter name="stream" typeId="T:System.IO.Stream" displayName="Stream" namespace="System.IO" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="format" typeId="T:System.Drawing.Imaging.ImageFormat" displayName="ImageFormat" namespace="System.Drawing.Imaging" assembly="System.Drawing" nullable="false" valueType="false" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Drawing.ImageEditor.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Drawing.ImageEditor.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Drawing.ImageEditor.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Drawing.ImageEditor.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Drawing.ImageEditor.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Drawing.ImageEditor.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
      </namespace>
    </module>
  </assembly>
  <assembly name="PlanetTelex.Web" version="2.0.0.0">
    <assemblyReference name="System.Web" />
    <assemblyReference name="mscorlib" />
    <assemblyReference name="System" />
    <assemblyReference name="PlanetTelex" />
    <assemblyReference name="System.Core" />
    <assemblyReference name="System.Configuration" />
    <assemblyReference name="System.Xml" />
    <attribute name="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" target="assembly">
      <property name="WrapNonExceptionThrows" type="System.Boolean" value="True" />
    </attribute>
    <attribute name="System.Reflection.AssemblyProductAttribute" target="assembly">
      <property name="Product" type="System.String" value="&quot;Planet Telex .Net Web Library&quot;" />
    </attribute>
    <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" target="assembly" />
    <attribute name="System.Reflection.AssemblyTitleAttribute" target="assembly">
      <property name="Title" type="System.String" value="&quot;Planet Telex .Net Web Library&quot;" />
    </attribute>
    <attribute name="System.Reflection.AssemblyDescriptionAttribute" target="assembly">
      <property name="Description" type="System.String" value="&quot;A .Net web library written in C#.&quot;" />
    </attribute>
    <attribute name="System.Reflection.AssemblyConfigurationAttribute" target="assembly">
      <property name="Configuration" type="System.String" value="&quot;&quot;" />
    </attribute>
    <attribute name="System.Reflection.AssemblyCompanyAttribute" target="assembly">
      <property name="Company" type="System.String" value="&quot;Planet Telex, Inc.&quot;" />
    </attribute>
    <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" target="assembly">
      <property name="Value" type="System.Boolean" value="False" />
    </attribute>
    <attribute name="System.Reflection.AssemblyCopyrightAttribute" target="assembly">
      <property name="Copyright" type="System.String" value="&quot;Copyright © 2007 - 2015&quot;" />
    </attribute>
    <attribute name="System.Reflection.AssemblyTrademarkAttribute" target="assembly">
      <property name="Trademark" type="System.String" value="&quot;&quot;" />
    </attribute>
    <attribute name="System.Reflection.AssemblyFileVersionAttribute" target="assembly">
      <property name="Version" type="System.String" value="&quot;2.0.0.0&quot;" />
    </attribute>
    <attribute name="System.Runtime.CompilerServices.CompilationRelaxationsAttribute" target="assembly">
      <property name="CompilationRelaxations" type="System.Int32" value="8" />
    </attribute>
    <attribute name="System.Runtime.InteropServices.GuidAttribute" target="assembly">
      <property name="Value" type="System.String" value="&quot;3d942457-47fc-4896-b844-36130e133fb4&quot;" />
    </attribute>
    <attribute name="System.Diagnostics.DebuggableAttribute" target="assembly">
      <property name="IsJITTrackingEnabled" type="System.Boolean" value="False" />
      <property name="IsJITOptimizerDisabled" type="System.Boolean" value="False" />
      <property name="DebuggingFlags" type="System.Diagnostics.DebuggableAttribute+DebuggingModes" value="DebuggingModes.IgnoreSymbolStoreSequencePoints" />
    </attribute>
    <module name="PlanetTelex.Web.dll">
      <namespace name="PlanetTelex.Web.Protocols.Http">
        <documentation>
          <summary>Classes to assist dealing with data over the HTTP protocol.</summary>
        </documentation>
        <class name="HttpNotFoundException" displayName="HttpNotFoundException" namespace="PlanetTelex.Web.Protocols.Http" id="T:PlanetTelex.Web.Protocols.Http.HttpNotFoundException" access="Public">
          <documentation><summary> Represents a 404 not found exception. </summary></documentation>
          <baseType name="HttpException" id="T:System.Web.HttpException" displayName="HttpException" namespace="System.Web" assembly="System.Web">
            <baseType name="ExternalException" id="T:System.Runtime.InteropServices.ExternalException" displayName="ExternalException" namespace="System.Runtime.InteropServices" assembly="mscorlib">
              <baseType name="SystemException" id="T:System.SystemException" displayName="SystemException" namespace="System" assembly="mscorlib">
                <baseType name="Exception" id="T:System.Exception" displayName="Exception" namespace="System" assembly="mscorlib" />
              </baseType>
            </baseType>
          </baseType>
          <implementsClass type="System.Runtime.Serialization.ISerializable" id="T:System.Runtime.Serialization.ISerializable" displayName="ISerializable" namespace="System.Runtime.Serialization" inherited="true" />
          <constructor name=".ctor" id="M:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.#ctor(System.String)" access="Public" contract="Normal" overload="1">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Web.Protocols.Http.HttpNotFoundException" /> class. </summary>
<param name="message">The message.</param></documentation>
            <parameter name="message" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </constructor>
          <constructor name=".ctor" id="M:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.#ctor(System.String,System.Exception)" access="Public" contract="Normal" overload="2">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Web.Protocols.Http.HttpNotFoundException" /> class. </summary>
<param name="message">The message.</param>
<param name="innerException">The inner exception.</param></documentation>
            <parameter name="message" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="innerException" typeId="T:System.Exception" displayName="Exception" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </constructor>
          <property name="ErrorCode" id="P:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.ErrorCode" access="Public" contract="Virtual" declaringType="System.Runtime.InteropServices.ExternalException" declaringAssembly="mscorlib" declaringId="P:System.Runtime.InteropServices.ExternalException.ErrorCode" get="Public" set="false" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          <property name="Message" id="P:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.Message" access="Public" contract="Virtual" declaringType="System.Exception" declaringAssembly="mscorlib" declaringId="P:System.Exception.Message" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          <property name="Data" id="P:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.Data" access="Public" contract="Virtual" declaringType="System.Exception" declaringAssembly="mscorlib" declaringId="P:System.Exception.Data" get="Public" set="false" typeId="T:System.Collections.IDictionary" displayName="IDictionary" namespace="System.Collections" assembly="mscorlib" nullable="false" valueType="false" />
          <property name="InnerException" id="P:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.InnerException" access="Public" contract="Final" declaringType="System.Exception" declaringAssembly="mscorlib" declaringId="P:System.Exception.InnerException" get="Public" set="false" typeId="T:System.Exception" displayName="Exception" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          <property name="TargetSite" id="P:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.TargetSite" access="Public" contract="Final" declaringType="System.Exception" declaringAssembly="mscorlib" declaringId="P:System.Exception.TargetSite" get="Public" set="false" typeId="T:System.Reflection.MethodBase" displayName="MethodBase" namespace="System.Reflection" assembly="mscorlib" nullable="false" valueType="false" />
          <property name="StackTrace" id="P:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.StackTrace" access="Public" contract="Virtual" declaringType="System.Exception" declaringAssembly="mscorlib" declaringId="P:System.Exception.StackTrace" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          <property name="HelpLink" id="P:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.HelpLink" access="Public" contract="Virtual" declaringType="System.Exception" declaringAssembly="mscorlib" declaringId="P:System.Exception.HelpLink" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          <property name="Source" id="P:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.Source" access="Public" contract="Virtual" declaringType="System.Exception" declaringAssembly="mscorlib" declaringId="P:System.Exception.Source" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          <property name="HResult" id="P:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.HResult" access="Family" contract="Normal" declaringType="System.Exception" declaringAssembly="mscorlib" declaringId="P:System.Exception.HResult" get="Family" set="Family" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          <method name="GetObjectData" displayName="GetObjectData" id="M:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" access="Public" contract="Override" valueType="true" declaringType="System.Web.HttpException" declaringAssembly="System.Web" declaringId="M:System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Security.Permissions.SecurityPermissionAttribute">
              <property name="Flags" type="System.Security.Permissions.SecurityPermissionFlag" value="SecurityPermissionFlag.SerializationFormatter" />
              <property name="Assertion" type="System.Boolean" value="False" />
              <property name="UnmanagedCode" type="System.Boolean" value="False" />
              <property name="SkipVerification" type="System.Boolean" value="False" />
              <property name="Execution" type="System.Boolean" value="False" />
              <property name="ControlThread" type="System.Boolean" value="False" />
              <property name="ControlEvidence" type="System.Boolean" value="False" />
              <property name="ControlPolicy" type="System.Boolean" value="False" />
              <property name="SerializationFormatter" type="System.Boolean" value="True" />
              <property name="ControlDomainPolicy" type="System.Boolean" value="False" />
              <property name="ControlPrincipal" type="System.Boolean" value="False" />
              <property name="ControlAppDomain" type="System.Boolean" value="False" />
              <property name="RemotingConfiguration" type="System.Boolean" value="False" />
              <property name="Infrastructure" type="System.Boolean" value="False" />
              <property name="BindingRedirects" type="System.Boolean" value="False" />
              <property name="Action" type="System.Security.Permissions.SecurityAction" value="SecurityAction.Demand" />
              <property name="Unrestricted" type="System.Boolean" value="False" />
            </attribute>
            <parameter name="info" typeId="T:System.Runtime.Serialization.SerializationInfo" displayName="SerializationInfo" namespace="System.Runtime.Serialization" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="context" typeId="T:System.Runtime.Serialization.StreamingContext" displayName="StreamingContext" namespace="System.Runtime.Serialization" assembly="mscorlib" nullable="false" valueType="true" />
            <implements name="GetObjectData" id="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" interface="ISerializable" interfaceId="T:System.Runtime.Serialization.ISerializable" assembly="mscorlib">
              <declaringType name="T:System.Runtime.Serialization.ISerializable" />
            </implements>
          </method>
          <method name="GetHttpCode" displayName="GetHttpCode" id="M:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.GetHttpCode" access="Public" contract="Normal" valueType="true" declaringType="System.Web.HttpException" declaringAssembly="System.Web" declaringId="M:System.Web.HttpException.GetHttpCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetHtmlErrorMessage" displayName="GetHtmlErrorMessage" id="M:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.GetHtmlErrorMessage" access="Public" contract="Normal" valueType="false" declaringType="System.Web.HttpException" declaringAssembly="System.Web" declaringId="M:System.Web.HttpException.GetHtmlErrorMessage">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetBaseException" displayName="GetBaseException" id="M:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.GetBaseException" access="Public" contract="Virtual" valueType="false" declaringType="System.Exception" declaringAssembly="mscorlib" declaringId="M:System.Exception.GetBaseException">
            <returnType typeId="T:System.Exception" displayName="Exception" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.ToString" access="Public" contract="Override" valueType="false" declaringType="System.Exception" declaringAssembly="mscorlib" declaringId="M:System.Exception.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.GetType" access="Public" contract="Final" valueType="false" declaringType="System.Exception" declaringAssembly="mscorlib" declaringId="M:System.Exception.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Protocols.Http.HttpNotFoundException.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="HttpString" displayName="HttpString" namespace="PlanetTelex.Web.Protocols.Http" id="T:PlanetTelex.Web.Protocols.Http.HttpString" access="Public" static="true">
          <documentation><summary> Common strings used by HTTP. </summary></documentation>
          <field name="STATUS_301" id="F:PlanetTelex.Web.Protocols.Http.HttpString.STATUS_301" access="Public" contract="Static" literal="true" value="&quot;301 Moved Permanently&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> "301 Moved Permanently" </summary></documentation>
          </field>
          <field name="STATUS_404" id="F:PlanetTelex.Web.Protocols.Http.HttpString.STATUS_404" access="Public" contract="Static" literal="true" value="&quot;404 Page Not Found&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> "404 Page Not Found" </summary></documentation>
          </field>
          <field name="HEADER_LOCATION" id="F:PlanetTelex.Web.Protocols.Http.HttpString.HEADER_LOCATION" access="Public" contract="Static" literal="true" value="&quot;Location&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> "Location" </summary></documentation>
          </field>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Protocols.Http.HttpString.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Protocols.Http.HttpString.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Protocols.Http.HttpString.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Protocols.Http.HttpString.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Protocols.Http.HttpString.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Protocols.Http.HttpString.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <enumeration name="StatusMessage" id="T:PlanetTelex.Web.Protocols.Http.StatusMessage" displayName="StatusMessage" namespace="PlanetTelex.Web.Protocols.Http" access="Public">
          <documentation><summary> Service response status message and codes enum. These are based off of the HTTP standard (http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html) Messages that don't correspond to the HTTP standard will use the range of Names from 1 to 99. </summary></documentation>
          <field name="Unknown" id="F:PlanetTelex.Web.Protocols.Http.StatusMessage.Unknown" access="Public" contract="Static" literal="true" value="0" typeId="T:PlanetTelex.Web.Protocols.Http.StatusMessage" displayName="StatusMessage" namespace="PlanetTelex.Web.Protocols.Http" assembly="PlanetTelex.Web" nullable="false" valueType="true">
            <documentation><summary> Unknown = 0 </summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Unknown&quot;" />
            </attribute>
          </field>
          <field name="Ok" id="F:PlanetTelex.Web.Protocols.Http.StatusMessage.Ok" access="Public" contract="Static" literal="true" value="200" typeId="T:PlanetTelex.Web.Protocols.Http.StatusMessage" displayName="StatusMessage" namespace="PlanetTelex.Web.Protocols.Http" assembly="PlanetTelex.Web" nullable="false" valueType="true">
            <documentation><summary> Ok = 200 </summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;OK&quot;" />
            </attribute>
          </field>
          <field name="BadRequest" id="F:PlanetTelex.Web.Protocols.Http.StatusMessage.BadRequest" access="Public" contract="Static" literal="true" value="400" typeId="T:PlanetTelex.Web.Protocols.Http.StatusMessage" displayName="StatusMessage" namespace="PlanetTelex.Web.Protocols.Http" assembly="PlanetTelex.Web" nullable="false" valueType="true">
            <documentation><summary> BadRequest = 400 </summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Bad Request&quot;" />
            </attribute>
          </field>
          <field name="Unauthorized" id="F:PlanetTelex.Web.Protocols.Http.StatusMessage.Unauthorized" access="Public" contract="Static" literal="true" value="401" typeId="T:PlanetTelex.Web.Protocols.Http.StatusMessage" displayName="StatusMessage" namespace="PlanetTelex.Web.Protocols.Http" assembly="PlanetTelex.Web" nullable="false" valueType="true">
            <documentation><summary> Unauthorized = 401 </summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Unauthorized&quot;" />
            </attribute>
          </field>
          <field name="Forbidden" id="F:PlanetTelex.Web.Protocols.Http.StatusMessage.Forbidden" access="Public" contract="Static" literal="true" value="403" typeId="T:PlanetTelex.Web.Protocols.Http.StatusMessage" displayName="StatusMessage" namespace="PlanetTelex.Web.Protocols.Http" assembly="PlanetTelex.Web" nullable="false" valueType="true">
            <documentation><summary> Forbidden = 403 </summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Forbidden&quot;" />
            </attribute>
          </field>
          <field name="NotFound" id="F:PlanetTelex.Web.Protocols.Http.StatusMessage.NotFound" access="Public" contract="Static" literal="true" value="404" typeId="T:PlanetTelex.Web.Protocols.Http.StatusMessage" displayName="StatusMessage" namespace="PlanetTelex.Web.Protocols.Http" assembly="PlanetTelex.Web" nullable="false" valueType="true">
            <documentation><summary> NotFound = 404 </summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Not Found&quot;" />
            </attribute>
          </field>
        </enumeration>
      </namespace>
      <namespace name="PlanetTelex.Web.Common">
        <documentation>
          <summary>Common web strings and interfaces.</summary>
        </documentation>
        <class name="HtmlString" displayName="HtmlString" namespace="PlanetTelex.Web.Common" id="T:PlanetTelex.Web.Common.HtmlString" access="Public" static="true">
          <documentation><summary> Common HTML string literals, sometimes with values to format dynamically. </summary></documentation>
          <field name="BR" id="F:PlanetTelex.Web.Common.HtmlString.BR" access="Public" contract="Static" literal="true" value="&quot;&lt;br/&gt;&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> &lt;br/&gt; </summary></documentation>
          </field>
          <field name="NBSP" id="F:PlanetTelex.Web.Common.HtmlString.NBSP" access="Public" contract="Static" literal="true" value="&quot;&amp;nbsp;&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> &amp;nbsp; </summary></documentation>
          </field>
          <field name="QUOT" id="F:PlanetTelex.Web.Common.HtmlString.QUOT" access="Public" contract="Static" literal="true" value="&quot;&amp;quot;&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> &amp;quot; </summary></documentation>
          </field>
          <field name="STRONG" id="F:PlanetTelex.Web.Common.HtmlString.STRONG" access="Public" contract="Static" literal="true" value="&quot;&lt;strong&gt;&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> &lt;strong&gt; </summary></documentation>
          </field>
          <field name="STRONG_END" id="F:PlanetTelex.Web.Common.HtmlString.STRONG_END" access="Public" contract="Static" literal="true" value="&quot;&lt;/strong&gt;&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> &lt;/strong&gt; </summary></documentation>
          </field>
          <field name="UNORDERED_LIST" id="F:PlanetTelex.Web.Common.HtmlString.UNORDERED_LIST" access="Public" contract="Static" literal="true" value="&quot;&lt;ul&gt;&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> &lt;ul&gt; </summary></documentation>
          </field>
          <field name="UNORDERED_LIST_END" id="F:PlanetTelex.Web.Common.HtmlString.UNORDERED_LIST_END" access="Public" contract="Static" literal="true" value="&quot;&lt;/ul&gt;&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> &lt;/ul&gt; </summary></documentation>
          </field>
          <field name="LIST_ITEM" id="F:PlanetTelex.Web.Common.HtmlString.LIST_ITEM" access="Public" contract="Static" literal="true" value="&quot;&lt;li&gt;{0}&lt;/li&gt;&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> &lt;li&gt;{0}&lt;/li&gt; </summary></documentation>
          </field>
          <field name="LINK" id="F:PlanetTelex.Web.Common.HtmlString.LINK" access="Public" contract="Static" literal="true" value="&quot;&lt;a href=\'{0}\' {1}&gt;{2}&lt;/a&gt;&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> &lt;a href='{0}' {1}&gt;{2}&lt;/a&gt; </summary></documentation>
          </field>
          <field name="LINK_TARGET_BLANK" id="F:PlanetTelex.Web.Common.HtmlString.LINK_TARGET_BLANK" access="Public" contract="Static" literal="true" value="&quot;target=\'_blank\' &quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> target='_blank' </summary></documentation>
          </field>
          <field name="JAVASCRIPT_INCLUDE" id="F:PlanetTelex.Web.Common.HtmlString.JAVASCRIPT_INCLUDE" access="Public" contract="Static" literal="true" value="&quot;&lt;script type=\'text/javascript\' language=\'javascript\' src=\'{0}\'&gt;&lt;/script&gt;&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> &lt;script type='text/javascript' language='javascript' src='{0}'&gt;&lt;/script&gt; </summary></documentation>
          </field>
          <field name="CSS_FILE_INCLUDE" id="F:PlanetTelex.Web.Common.HtmlString.CSS_FILE_INCLUDE" access="Public" contract="Static" literal="true" value="&quot;&lt;link type=\'text/css\' rel=\'stylesheet\' href=\'{0}\'/&gt;&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> &lt;link type='text/css' rel='stylesheet' href='{0}' /&gt; </summary></documentation>
          </field>
          <field name="LEGACY_IE_CONDITIONAL_START" id="F:PlanetTelex.Web.Common.HtmlString.LEGACY_IE_CONDITIONAL_START" access="Public" contract="Static" literal="true" value="&quot;&lt;!--[if lt IE {0}]&gt;&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> &lt;!--[if lt IE {0}]&gt; </summary></documentation>
          </field>
          <field name="LEGACY_IE_CONDITIONAL_STOP" id="F:PlanetTelex.Web.Common.HtmlString.LEGACY_IE_CONDITIONAL_STOP" access="Public" contract="Static" literal="true" value="&quot;&lt;![endif]--&gt;&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> &lt;![endif]--&gt; </summary></documentation>
          </field>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Common.HtmlString.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Common.HtmlString.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Common.HtmlString.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Common.HtmlString.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Common.HtmlString.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Common.HtmlString.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <interface name="ISelectable" displayName="ISelectable" namespace="PlanetTelex.Web.Common" id="T:PlanetTelex.Web.Common.ISelectable" access="Public">
          <documentation><summary> Defines a contract for a select list item. </summary></documentation>
          <property name="Value" id="P:PlanetTelex.Web.Common.ISelectable.Value" access="Public" contract="Abstract" get="Public" set="false" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the value of a select list item for this instance. </summary></documentation>
          </property>
          <property name="Text" id="P:PlanetTelex.Web.Common.ISelectable.Text" access="Public" contract="Abstract" get="Public" set="false" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the text of a select list item for this instance.. </summary></documentation>
          </property>
        </interface>
      </namespace>
      <namespace name="PlanetTelex.Web.Request">
        <documentation>
          <summary>Classes to assist in dealing with web requests.</summary>
        </documentation>
        <class name="UriParts" displayName="UriParts" namespace="PlanetTelex.Web.Request" id="T:PlanetTelex.Web.Request.UriParts" access="Public">
          <documentation><summary> A URL that has been parsed it into many discrete properties for easy analysis. </summary></documentation>
          <constructor name=".ctor" id="M:PlanetTelex.Web.Request.UriParts.#ctor" access="Public" contract="Normal" overload="1">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Web.Request.UriParts" /> class with the Current.Request.RawUrl. </summary></documentation>
          </constructor>
          <constructor name=".ctor" id="M:PlanetTelex.Web.Request.UriParts.#ctor(System.String)" access="Public" contract="Normal" overload="2">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Web.Request.UriParts" /> class with the provided URI. </summary>
<param name="uriString">The URI string.</param></documentation>
            <parameter name="uriString" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </constructor>
          <field name="LOCALHOST" id="F:PlanetTelex.Web.Request.UriParts.LOCALHOST" access="Public" contract="Static" literal="true" value="&quot;localhost&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> localhost </summary></documentation>
          </field>
          <property name="Current" id="P:PlanetTelex.Web.Request.UriParts.Current" access="Public" contract="Static" get="Public" set="false" typeId="T:PlanetTelex.Web.Request.UriParts" displayName="UriParts" namespace="PlanetTelex.Web.Request" assembly="PlanetTelex.Web" nullable="false" valueType="false">
            <documentation><summary> Gets the current URI parts. </summary></documentation>
          </property>
          <property name="Scheme" id="P:PlanetTelex.Web.Request.UriParts.Scheme" access="Public" contract="Normal" get="Public" set="false" typeId="T:PlanetTelex.Web.Request.UriSchemeType" displayName="UriSchemeType" namespace="PlanetTelex.Web.Request" assembly="PlanetTelex.Web" nullable="false" valueType="true">
            <documentation><summary> Gets the URI scheme. </summary></documentation>
          </property>
          <property name="UriWithoutScheme" id="P:PlanetTelex.Web.Request.UriParts.UriWithoutScheme" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the URI without the scheme part. </summary></documentation>
          </property>
          <property name="UriWithoutSchemeAndQuery" id="P:PlanetTelex.Web.Request.UriParts.UriWithoutSchemeAndQuery" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the URI without scheme and query parts. </summary></documentation>
          </property>
          <property name="UriPath" id="P:PlanetTelex.Web.Request.UriParts.UriPath" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Get the path part of the URI, which includes the page. No domain or query part. </summary></documentation>
          </property>
          <property name="UriPathWithoutPage" id="P:PlanetTelex.Web.Request.UriParts.UriPathWithoutPage" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Get the path part of the URI without the page. No domain or or query part. </summary></documentation>
          </property>
          <property name="Nodes" id="P:PlanetTelex.Web.Request.UriParts.Nodes" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <array rank="1" />
            <documentation><summary> Gets all the nodes (delimited by the '/' character) in the path. </summary></documentation>
          </property>
          <property name="IsLocalhost" id="P:PlanetTelex.Web.Request.UriParts.IsLocalhost" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets a value indicating whether this URI's domain is localhost. </summary>
<value>
  <c>true</c> if the first url node is "localhost"; otherwise, <c>false</c>. </value></documentation>
          </property>
          <property name="FirstDirectoryNodeIndex" id="P:PlanetTelex.Web.Request.UriParts.FirstDirectoryNodeIndex" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets the index of first node that can be considered a directory (is not "localhost"). </summary>
<value> The index of first node that can be considered a directory. </value></documentation>
          </property>
          <property name="FirstDirectory" id="P:PlanetTelex.Web.Request.UriParts.FirstDirectory" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the first node that can be considered a directory (is not "localhost"). </summary></documentation>
          </property>
          <property name="SecondDirectory" id="P:PlanetTelex.Web.Request.UriParts.SecondDirectory" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the second node that can be concidered a directory (is not "localhost"). </summary></documentation>
          </property>
          <property name="LastDirectoryNodeIndex" id="P:PlanetTelex.Web.Request.UriParts.LastDirectoryNodeIndex" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets the index of the last node that can be considered a directory (is not a page). </summary>
<value> The index of the last node that can be considered a directory. </value></documentation>
          </property>
          <property name="LastDirectory" id="P:PlanetTelex.Web.Request.UriParts.LastDirectory" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the last node that can be considered a directory (is not a page). </summary></documentation>
          </property>
          <property name="Domain" id="P:PlanetTelex.Web.Request.UriParts.Domain" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the domain of the current request. If localhost, this value will include the virtual directory. </summary></documentation>
          </property>
          <property name="RelativeRoot" id="P:PlanetTelex.Web.Request.UriParts.RelativeRoot" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the correct relative root url element, taking into account if this is running under "localhost". </summary></documentation>
          </property>
          <property name="QueryPart" id="P:PlanetTelex.Web.Request.UriParts.QueryPart" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the query string of the request. </summary></documentation>
          </property>
          <property name="Parameters" id="P:PlanetTelex.Web.Request.UriParts.Parameters" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.Collections.Generic.Dictionary`2" displayName="Dictionary{String,String}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
            <genericargument name="String" displayName="String" namespace="System" typeId="T:System.String" assembly="mscorlib" />
            <genericargument name="String" displayName="String" namespace="System" typeId="T:System.String" assembly="mscorlib" />
            <documentation><summary> Gets a name/value dictionary of parameters from the query part. </summary></documentation>
          </property>
          <property name="Page" id="P:PlanetTelex.Web.Request.UriParts.Page" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the requested page including its file extension. </summary></documentation>
          </property>
          <property name="PageWithoutExtension" id="P:PlanetTelex.Web.Request.UriParts.PageWithoutExtension" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the requested page without its file extension. </summary></documentation>
          </property>
          <property name="PageExtension" id="P:PlanetTelex.Web.Request.UriParts.PageExtension" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the requested page file extension. </summary></documentation>
          </property>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Request.UriParts.ToString" access="Public" contract="Override" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Returns a <see cref="T:System.String" /> that represents this instance. </summary>
<returns> A <see cref="T:System.String" /> that represents this instance. </returns></documentation>
          </method>
          <method name="GetUriPathFromIndex" displayName="GetUriPathFromIndex" id="M:PlanetTelex.Web.Request.UriParts.GetUriPathFromIndex(System.Int32)" access="Public" contract="Normal" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Gets the path from the specified start index onward. </summary>
<param name="startIndex">The node index to start at.</param>
<returns>A string.</returns></documentation>
            <parameter name="startIndex" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetUriPathNodeAt" displayName="GetUriPathNodeAt" id="M:PlanetTelex.Web.Request.UriParts.GetUriPathNodeAt(System.Int32)" access="Public" contract="Normal" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Gets the node at the given index, discouting "localhost" from the considered nodes. </summary>
<param name="nodeIndex">The node index.</param>
<returns>A string.</returns></documentation>
            <parameter name="nodeIndex" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Request.UriParts.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Request.UriParts.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Request.UriParts.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Request.UriParts.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Request.UriParts.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="UriScheme" displayName="UriScheme" namespace="PlanetTelex.Web.Request" id="T:PlanetTelex.Web.Request.UriScheme" access="Public">
          <documentation><summary> Class for using URI scheme strings. </summary></documentation>
          <constructor name=".ctor" id="M:PlanetTelex.Web.Request.UriScheme.#ctor" access="Public" contract="Normal" overload="1">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Web.Request.UriScheme" /> class using the current web context. </summary></documentation>
          </constructor>
          <constructor name=".ctor" id="M:PlanetTelex.Web.Request.UriScheme.#ctor(PlanetTelex.Web.Request.UriSchemeType)" access="Public" contract="Normal" overload="2">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Web.Request.UriScheme" /> class. </summary>
<param name="uriSchemeType">Type of the URI scheme.</param></documentation>
            <parameter name="uriSchemeType" typeId="T:PlanetTelex.Web.Request.UriSchemeType" displayName="UriSchemeType" namespace="PlanetTelex.Web.Request" assembly="PlanetTelex.Web" nullable="false" valueType="true" />
          </constructor>
          <constructor name=".ctor" id="M:PlanetTelex.Web.Request.UriScheme.#ctor(System.Uri)" access="Public" contract="Normal" overload="3">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Web.Request.UriScheme" /> class. </summary>
<param name="uri">The URI.</param></documentation>
            <parameter name="uri" typeId="T:System.Uri" displayName="Uri" namespace="System" assembly="System" nullable="false" valueType="false" />
          </constructor>
          <constructor name=".ctor" id="M:PlanetTelex.Web.Request.UriScheme.#ctor(System.String)" access="Public" contract="Normal" overload="4">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Web.Request.UriScheme" /> class. </summary>
<param name="uriString">The URI string.</param></documentation>
            <parameter name="uriString" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </constructor>
          <field name="DELIMITER" id="F:PlanetTelex.Web.Request.UriScheme.DELIMITER" access="Public" contract="Static" literal="true" value="&quot;://&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> :// </summary></documentation>
          </field>
          <field name="HTTP" id="F:PlanetTelex.Web.Request.UriScheme.HTTP" access="Public" contract="Static" literal="true" value="&quot;http&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> http </summary></documentation>
          </field>
          <field name="HTTPS" id="F:PlanetTelex.Web.Request.UriScheme.HTTPS" access="Public" contract="Static" literal="true" value="&quot;https&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> https </summary></documentation>
          </field>
          <field name="FTP" id="F:PlanetTelex.Web.Request.UriScheme.FTP" access="Public" contract="Static" literal="true" value="&quot;ftp&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> ftp </summary></documentation>
          </field>
          <field name="MAILTO" id="F:PlanetTelex.Web.Request.UriScheme.MAILTO" access="Public" contract="Static" literal="true" value="&quot;mailto&quot;" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> mailto </summary></documentation>
          </field>
          <property name="Prefix" id="P:PlanetTelex.Web.Request.UriScheme.Prefix" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the prefix string. </summary></documentation>
          </property>
          <property name="SchemeType" id="P:PlanetTelex.Web.Request.UriScheme.SchemeType" access="Public" contract="Normal" get="Public" set="false" typeId="T:PlanetTelex.Web.Request.UriSchemeType" displayName="UriSchemeType" namespace="PlanetTelex.Web.Request" assembly="PlanetTelex.Web" nullable="false" valueType="true">
            <documentation><summary> Gets the type of the scheme. </summary>
<value> The type of the scheme. </value></documentation>
          </property>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Request.UriScheme.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Request.UriScheme.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Request.UriScheme.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Request.UriScheme.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Request.UriScheme.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Request.UriScheme.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <enumeration name="UriSchemeType" id="T:PlanetTelex.Web.Request.UriSchemeType" displayName="UriSchemeType" namespace="PlanetTelex.Web.Request" access="Public">
          <documentation><summary> Common protocols for data transfer over the internet. </summary></documentation>
          <field name="None" id="F:PlanetTelex.Web.Request.UriSchemeType.None" access="Public" contract="Static" literal="true" value="0" typeId="T:PlanetTelex.Web.Request.UriSchemeType" displayName="UriSchemeType" namespace="PlanetTelex.Web.Request" assembly="PlanetTelex.Web" nullable="false" valueType="true">
            <documentation><summary>None</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;None&quot;" />
            </attribute>
          </field>
          <field name="Http" id="F:PlanetTelex.Web.Request.UriSchemeType.Http" access="Public" contract="Static" literal="true" value="1" typeId="T:PlanetTelex.Web.Request.UriSchemeType" displayName="UriSchemeType" namespace="PlanetTelex.Web.Request" assembly="PlanetTelex.Web" nullable="false" valueType="true">
            <documentation><summary>Http</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Http&quot;" />
            </attribute>
          </field>
          <field name="Https" id="F:PlanetTelex.Web.Request.UriSchemeType.Https" access="Public" contract="Static" literal="true" value="2" typeId="T:PlanetTelex.Web.Request.UriSchemeType" displayName="UriSchemeType" namespace="PlanetTelex.Web.Request" assembly="PlanetTelex.Web" nullable="false" valueType="true">
            <documentation><summary>Https</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Https&quot;" />
            </attribute>
          </field>
          <field name="Ftp" id="F:PlanetTelex.Web.Request.UriSchemeType.Ftp" access="Public" contract="Static" literal="true" value="3" typeId="T:PlanetTelex.Web.Request.UriSchemeType" displayName="UriSchemeType" namespace="PlanetTelex.Web.Request" assembly="PlanetTelex.Web" nullable="false" valueType="true">
            <documentation><summary>Ftp</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Ftp&quot;" />
            </attribute>
          </field>
          <field name="Mailto" id="F:PlanetTelex.Web.Request.UriSchemeType.Mailto" access="Public" contract="Static" literal="true" value="4" typeId="T:PlanetTelex.Web.Request.UriSchemeType" displayName="UriSchemeType" namespace="PlanetTelex.Web.Request" assembly="PlanetTelex.Web" nullable="false" valueType="true">
            <documentation><summary>mailto</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Mailto&quot;" />
            </attribute>
          </field>
          <field name="Unknown" id="F:PlanetTelex.Web.Request.UriSchemeType.Unknown" access="Public" contract="Static" literal="true" value="5" typeId="T:PlanetTelex.Web.Request.UriSchemeType" displayName="UriSchemeType" namespace="PlanetTelex.Web.Request" assembly="PlanetTelex.Web" nullable="false" valueType="true">
            <documentation><summary>Protocol is unknown</summary></documentation>
            <attribute name="System.Xml.Serialization.XmlEnumAttribute">
              <property name="Name" type="System.String" value="&quot;Unknown&quot;" />
            </attribute>
          </field>
        </enumeration>
      </namespace>
      <namespace name="PlanetTelex.Web">
        <documentation>
          <summary>PlanetTelex.Web assembly root namespace.</summary>
        </documentation>
        <class name="Settings" displayName="Settings" namespace="PlanetTelex.Web" id="T:PlanetTelex.Web.Settings" access="Public">
          <documentation><summary> Application settings for the PlanetTelex.Web assembly. </summary></documentation>
          <constructor name=".ctor" id="M:PlanetTelex.Web.Settings.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Web.Settings" /> class.</summary>
            </documentation>
          </constructor>
          <property name="Current" id="P:PlanetTelex.Web.Settings.Current" access="Public" contract="Static" get="Public" set="false" typeId="T:PlanetTelex.Web.Settings" displayName="Settings" namespace="PlanetTelex.Web" assembly="PlanetTelex.Web" nullable="false" valueType="false">
            <documentation><summary> Gets the current settings. </summary></documentation>
          </property>
          <property name="CacheEnabled" id="P:PlanetTelex.Web.Settings.CacheEnabled" access="Public" contract="Normal" get="Public" set="false" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets whether the site should be using cached data specified by the app settings key "CacheEnabled". Default: true </summary></documentation>
          </property>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Settings.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Settings.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Settings.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Settings.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Settings.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Settings.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
      </namespace>
      <namespace name="PlanetTelex.Web.Syndication">
        <documentation>
          <summary>Classes to assist in web syndication.</summary>
        </documentation>
        <class name="RssChannel`1" displayName="RssChannel{T}" namespace="PlanetTelex.Web.Syndication" id="T:PlanetTelex.Web.Syndication.RssChannel`1" access="Public">
          <documentation><summary> An RSS channel. </summary></documentation>
          <genericargument name="T" displayName="T" />
          <genericconstraints param="T">
            <constraint>PlanetTelex.Web.Syndication.IRssItem</constraint>
            <constraint>PlanetTelex.Web.Syndication.IRssPodcastItem</constraint>
          </genericconstraints>
          <constructor name=".ctor" id="M:PlanetTelex.Web.Syndication.RssChannel`1.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Web.Syndication.RssChannel`1" /> class.</summary>
            </documentation>
          </constructor>
          <property name="Title" id="P:PlanetTelex.Web.Syndication.RssChannel`1.Title" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the text for the title element. </summary></documentation>
          </property>
          <property name="Link" id="P:PlanetTelex.Web.Syndication.RssChannel`1.Link" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the text for the link element. </summary></documentation>
          </property>
          <property name="Description" id="P:PlanetTelex.Web.Syndication.RssChannel`1.Description" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the text for the description element. </summary></documentation>
          </property>
          <property name="Language" id="P:PlanetTelex.Web.Syndication.RssChannel`1.Language" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the text for the language element. </summary></documentation>
          </property>
          <property name="PublicationDate" id="P:PlanetTelex.Web.Syndication.RssChannel`1.PublicationDate" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets or sets the date for the pubDate element. </summary></documentation>
          </property>
          <property name="LastBuildDate" id="P:PlanetTelex.Web.Syndication.RssChannel`1.LastBuildDate" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets or sets the date for the lastBuildDate element. </summary></documentation>
          </property>
          <property name="Copyright" id="P:PlanetTelex.Web.Syndication.RssChannel`1.Copyright" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the text for the copyright element. </summary></documentation>
          </property>
          <property name="Generator" id="P:PlanetTelex.Web.Syndication.RssChannel`1.Generator" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the text for the generator element. </summary></documentation>
          </property>
          <property name="ManagingEditor" id="P:PlanetTelex.Web.Syndication.RssChannel`1.ManagingEditor" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the text for the managingEditor element. </summary></documentation>
          </property>
          <property name="WebMaster" id="P:PlanetTelex.Web.Syndication.RssChannel`1.WebMaster" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets or sets the text for the webMaster element. </summary></documentation>
          </property>
          <property name="Items" id="P:PlanetTelex.Web.Syndication.RssChannel`1.Items" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.Collections.Generic.List`1" displayName="List{T}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
            <genericargument name="T" displayName="T" />
            <documentation><summary> Gets or sets a list of items for this channel. </summary></documentation>
          </property>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Syndication.RssChannel`1.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Syndication.RssChannel`1.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Syndication.RssChannel`1.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Syndication.RssChannel`1.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Syndication.RssChannel`1.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Syndication.RssChannel`1.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="RssWriter`1" displayName="RssWriter{T}" namespace="PlanetTelex.Web.Syndication" id="T:PlanetTelex.Web.Syndication.RssWriter`1" access="Public">
          <documentation><summary> Writes an RSS feed. </summary></documentation>
          <genericargument name="T" displayName="T" />
          <genericconstraints param="T">
            <constraint>PlanetTelex.Web.Syndication.IRssItem</constraint>
            <constraint>PlanetTelex.Web.Syndication.IRssPodcastItem</constraint>
          </genericconstraints>
          <constructor name=".ctor" id="M:PlanetTelex.Web.Syndication.RssWriter`1.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Web.Syndication.RssWriter`1" /> class.</summary>
            </documentation>
          </constructor>
          <method name="WriteRss" displayName="WriteRss" id="M:PlanetTelex.Web.Syndication.RssWriter`1.WriteRss(PlanetTelex.Web.Syndication.RssChannel{`0})" access="Public" contract="Virtual" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Generates an RSS XML feed. </summary>
<param name="rssChannel">A <see cref="T:PlanetTelex.Web.Syndication.RssChannel`1" />.</param>
<returns>An XML string.</returns></documentation>
            <parameter name="rssChannel" typeId="T:PlanetTelex.Web.Syndication.RssChannel`1" displayName="RssChannel{T}" namespace="PlanetTelex.Web.Syndication" assembly="PlanetTelex.Web" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
            </parameter>
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Syndication.RssWriter`1.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Syndication.RssWriter`1.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Syndication.RssWriter`1.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Syndication.RssWriter`1.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Syndication.RssWriter`1.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Syndication.RssWriter`1.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <interface name="IRssItem" displayName="IRssItem" namespace="PlanetTelex.Web.Syndication" id="T:PlanetTelex.Web.Syndication.IRssItem" access="Public">
          <documentation><summary> An RSS item. An RSS channel will contain a collection of RSS items. </summary></documentation>
          <derivedBy id="T:PlanetTelex.Web.Syndication.IRssPodcastItem" displayName="IRssPodcastItem" namespace="PlanetTelex.Web.Syndication" assembly="PlanetTelex.Web" />
          <property name="RssItemTitle" id="P:PlanetTelex.Web.Syndication.IRssItem.RssItemTitle" access="Public" contract="Abstract" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the title of this rss item. Example: Venice Film Festival Tries to Quit Sinking </summary></documentation>
          </property>
          <property name="RssItemLink" id="P:PlanetTelex.Web.Syndication.IRssItem.RssItemLink" access="Public" contract="Abstract" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the link of this rss item. Example: http://nytimes.com/2004/12/07FEST.html </summary></documentation>
          </property>
          <property name="RssItemDescription" id="P:PlanetTelex.Web.Syndication.IRssItem.RssItemDescription" access="Public" contract="Abstract" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the description of this rss item. Example: Some of the most heated chatter at the Venice Film Festival this week was about the way that the arrival of the stars at the Palazzo del Cinema was being staged. </summary></documentation>
          </property>
          <property name="RssItemAuthor" id="P:PlanetTelex.Web.Syndication.IRssItem.RssItemAuthor" access="Public" contract="Abstract" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the email address of the author of this rss item. Example: author@site.com </summary></documentation>
          </property>
          <property name="RssItemComments" id="P:PlanetTelex.Web.Syndication.IRssItem.RssItemComments" access="Public" contract="Abstract" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the URL of a page containing comments about this item. Example: http://www.myblog.org/cgi-local/mt/mt-comments.cgi?entry_id=290 </summary></documentation>
          </property>
          <property name="RssItemPublishedDate" id="P:PlanetTelex.Web.Syndication.IRssItem.RssItemPublishedDate" access="Public" contract="Abstract" get="Public" set="false" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets the datetime when this item was published. Example(coverted to string): Sun, 19 May 2002 15:21:36 GMT </summary></documentation>
          </property>
        </interface>
        <interface name="IRssPodcastItem" displayName="IRssPodcastItem" namespace="PlanetTelex.Web.Syndication" id="T:PlanetTelex.Web.Syndication.IRssPodcastItem" access="Public">
          <documentation><summary> An RSS item for Podcast feeds. A podcast RSS channel will contain a collection of RSS items, these items need the enclosure node and it's attributes. </summary></documentation>
          <implements type="PlanetTelex.Web.Syndication.IRssItem" assembly="PlanetTelex.Web" id="T:PlanetTelex.Web.Syndication.IRssItem" />
          <property name="RssItemEnclosureFileLocationUrl" id="P:PlanetTelex.Web.Syndication.IRssPodcastItem.RssItemEnclosureFileLocationUrl" access="Public" contract="Abstract" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the Url for a media file. </summary></documentation>
          </property>
          <property name="RssItemEnclosureFileSize" id="P:PlanetTelex.Web.Syndication.IRssPodcastItem.RssItemEnclosureFileSize" access="Public" contract="Abstract" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the File Size for the media file. </summary></documentation>
          </property>
          <property name="RssItemEnclosureFileType" id="P:PlanetTelex.Web.Syndication.IRssPodcastItem.RssItemEnclosureFileType" access="Public" contract="Abstract" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false">
            <documentation><summary> Gets the File Type for the media file. </summary></documentation>
          </property>
        </interface>
      </namespace>
      <namespace name="PlanetTelex.Web.Caching">
        <documentation>
          <summary>Data caching helpers.</summary>
        </documentation>
        <class name="DataCache" displayName="DataCache" namespace="PlanetTelex.Web.Caching" id="T:PlanetTelex.Web.Caching.DataCache" access="Public">
          <documentation><summary> A wrapper for System.Web.Caching Cache that can be turned on and off caching using the app setting "CacheEnabled". </summary></documentation>
          <constructor name=".ctor" id="M:PlanetTelex.Web.Caching.DataCache.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Web.Caching.DataCache" /> class.</summary>
            </documentation>
          </constructor>
          <method name="SetCache" displayName="SetCache" id="M:PlanetTelex.Web.Caching.DataCache.SetCache(System.String,System.Object)" access="Public" contract="Normal" valueType="true" overload="1">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Places a provided object in the cache, indexed with a specified key. </summary>
<param name="cacheKey">The cache key.</param>
<param name="obj">The object.</param></documentation>
            <parameter name="cacheKey" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="SetCache" displayName="SetCache" id="M:PlanetTelex.Web.Caching.DataCache.SetCache(System.String,System.Object,System.Web.Caching.CacheDependency)" access="Public" contract="Normal" valueType="true" overload="2">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Places a provided object in the cache along with dependencies, indexed with a specified key. </summary>
<param name="cacheKey">The cache key.</param>
<param name="obj">The in object.</param>
<param name="dependency">The dependency.</param></documentation>
            <parameter name="cacheKey" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="dependency" typeId="T:System.Web.Caching.CacheDependency" displayName="CacheDependency" namespace="System.Web.Caching" assembly="System.Web" nullable="false" valueType="false" />
          </method>
          <method name="SetCache" displayName="SetCache" id="M:PlanetTelex.Web.Caching.DataCache.SetCache(System.String,System.Object,System.Int32)" access="Public" contract="Normal" valueType="true" overload="3">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Places a provided object in the cache, indexed with a specified key. The object will be removed from the cache if not accessed within a provided TimeSpan. </summary>
<param name="cacheKey">Key to access cached object.</param>
<param name="obj">Object to cache.</param>
<param name="slidingExpiration">The sliding expiration in seconds.</param></documentation>
            <parameter name="cacheKey" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="slidingExpiration" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="SetCache" displayName="SetCache" id="M:PlanetTelex.Web.Caching.DataCache.SetCache(System.String,System.Object,System.DateTime)" access="Public" contract="Normal" valueType="true" overload="4">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Places a provided object in the cache, indexed with a specified key. The object will be removed from the cache by a certain DateTime. </summary>
<param name="cacheKey">Key to access cached object.</param>
<param name="obj">Object to cache.</param>
<param name="absoluteExpiration">The absolute expiration.</param></documentation>
            <parameter name="cacheKey" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="absoluteExpiration" typeId="T:System.DateTime" displayName="DateTime" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetCache" displayName="GetCache" id="M:PlanetTelex.Web.Caching.DataCache.GetCache(System.String)" access="Public" contract="Normal" valueType="false">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Gets a value from the cache given key. </summary>
<param name="cacheKey">The key for the value to retrieve.</param>
<returns>An object from the cache.</returns></documentation>
            <parameter name="cacheKey" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetCacheOfType{T}" displayName="GetCacheOfType{T}" id="M:PlanetTelex.Web.Caching.DataCache.GetCacheOfType``1(System.String)" access="Public" contract="Normal" valueType="false">
            <returnType typeId="T:T" displayName="DataCache.T" namespace="PlanetTelex.Web.Caching" assembly="PlanetTelex.Web" nullable="false" valueType="false" />
            <documentation><summary> Gets a strongly typed value from the cache given key. </summary>
<typeparam name="T"></typeparam>
<param name="cacheKey">The cache key.</param></documentation>
            <parameter name="cacheKey" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <genericargument name="T" displayName="T" />
          </method>
          <method name="RemoveCache" displayName="RemoveCache" id="M:PlanetTelex.Web.Caching.DataCache.RemoveCache(System.String)" access="Public" contract="Normal" valueType="true">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Removes the cache for a given cache key. </summary>
<param name="cacheKey">A cache key.</param></documentation>
            <parameter name="cacheKey" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="RemoveAllCache" displayName="RemoveAllCache" id="M:PlanetTelex.Web.Caching.DataCache.RemoveAllCache(System.String)" access="Public" contract="Normal" valueType="true">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Removes all items from the cache with keys like the given key. </summary>
<param name="likeCacheKey">All keys containing this value will be removed from cache.</param></documentation>
            <parameter name="likeCacheKey" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="EmptyCache" displayName="EmptyCache" id="M:PlanetTelex.Web.Caching.DataCache.EmptyCache" access="Public" contract="Normal" valueType="true">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Removes all items from the cache. </summary></documentation>
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Caching.DataCache.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Caching.DataCache.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Caching.DataCache.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Caching.DataCache.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Caching.DataCache.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Caching.DataCache.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
      </namespace>
      <namespace name="PlanetTelex.Web.Extensions">
        <documentation>
          <summary>Extension methods with dependencies on web classes.</summary>
        </documentation>
        <class name="StringExtensions" displayName="StringExtensions" namespace="PlanetTelex.Web.Extensions" id="T:PlanetTelex.Web.Extensions.StringExtensions" access="Public" static="true">
          <documentation><summary> String extension methods with web dependencies. </summary></documentation>
          <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
          <method name="HtmlEncode" displayName="HtmlEncode" id="M:PlanetTelex.Web.Extensions.StringExtensions.HtmlEncode(System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> HTML encodes this string. </summary>
<param name="s">This string.</param>
<returns>A new HTML encoded string.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ReplaceNewlineCharsWithBrTags" displayName="ReplaceNewlineCharsWithBrTags" id="M:PlanetTelex.Web.Extensions.StringExtensions.ReplaceNewlineCharsWithBrTags(System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Replaces the newlines with &lt;br&gt; tags in this string. </summary>
<param name="s">This string.</param>
<returns>A new string with newlines replaced with &lt;br&gt; tags.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="s" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Extensions.StringExtensions.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Extensions.StringExtensions.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Extensions.StringExtensions.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Extensions.StringExtensions.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Extensions.StringExtensions.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Extensions.StringExtensions.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
      </namespace>
      <namespace name="PlanetTelex.Web.Common.ModelViews">
        <documentation>
          <summary>HTML markup views of common data models.</summary>
        </documentation>
        <class name="HoursOfOperationView" displayName="HoursOfOperationView" namespace="PlanetTelex.Web.Common.ModelViews" id="T:PlanetTelex.Web.Common.ModelViews.HoursOfOperationView" access="Public">
          <documentation><summary> A view of an HoursOfOperation class. </summary></documentation>
          <constructor name=".ctor" id="M:PlanetTelex.Web.Common.ModelViews.HoursOfOperationView.#ctor(PlanetTelex.Common.Models.HoursOfOperation)" access="Public" contract="Normal">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Web.Common.ModelViews.HoursOfOperationView" /> class. </summary>
<param name="hoursOfOperation">The hours of operation.</param></documentation>
            <parameter name="hoursOfOperation" typeId="T:PlanetTelex.Common.Models.HoursOfOperation" displayName="HoursOfOperation" namespace="PlanetTelex.Common.Models" assembly="PlanetTelex" nullable="false" valueType="false" />
          </constructor>
          <method name="Html" displayName="Html" id="M:PlanetTelex.Web.Common.ModelViews.HoursOfOperationView.Html" access="Public" contract="Final" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Creates an HTML representation of this instance. </summary></documentation>
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Common.ModelViews.HoursOfOperationView.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Common.ModelViews.HoursOfOperationView.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Common.ModelViews.HoursOfOperationView.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Common.ModelViews.HoursOfOperationView.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Common.ModelViews.HoursOfOperationView.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Common.ModelViews.HoursOfOperationView.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
      </namespace>
    </module>
  </assembly>
  <assembly name="PlanetTelex.Web.Mvc" version="2.0.0.0">
    <assemblyReference name="System.Web.Mvc" />
    <assemblyReference name="mscorlib" />
    <assemblyReference name="PlanetTelex.Web" />
    <assemblyReference name="PlanetTelex" />
    <assemblyReference name="System.Core" />
    <assemblyReference name="System.Web.Abstractions" />
    <assemblyReference name="System" />
    <assemblyReference name="System.Web" />
    <attribute name="System.Runtime.CompilerServices.CompilationRelaxationsAttribute" target="assembly">
      <property name="CompilationRelaxations" type="System.Int32" value="8" />
    </attribute>
    <attribute name="System.Reflection.AssemblyDescriptionAttribute" target="assembly">
      <property name="Description" type="System.String" value="&quot;A .Net web MVC library written in C#.&quot;" />
    </attribute>
    <attribute name="System.Diagnostics.DebuggableAttribute" target="assembly">
      <property name="IsJITTrackingEnabled" type="System.Boolean" value="False" />
      <property name="IsJITOptimizerDisabled" type="System.Boolean" value="False" />
      <property name="DebuggingFlags" type="System.Diagnostics.DebuggableAttribute+DebuggingModes" value="DebuggingModes.IgnoreSymbolStoreSequencePoints" />
    </attribute>
    <attribute name="System.Reflection.AssemblyCompanyAttribute" target="assembly">
      <property name="Company" type="System.String" value="&quot;Planet Telex, Inc.&quot;" />
    </attribute>
    <attribute name="System.Reflection.AssemblyFileVersionAttribute" target="assembly">
      <property name="Version" type="System.String" value="&quot;2.0.0.0&quot;" />
    </attribute>
    <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" target="assembly" />
    <attribute name="System.Reflection.AssemblyTitleAttribute" target="assembly">
      <property name="Title" type="System.String" value="&quot;Planet Telex .Net Web MVC Library&quot;" />
    </attribute>
    <attribute name="System.Reflection.AssemblyConfigurationAttribute" target="assembly">
      <property name="Configuration" type="System.String" value="&quot;&quot;" />
    </attribute>
    <attribute name="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" target="assembly">
      <property name="WrapNonExceptionThrows" type="System.Boolean" value="True" />
    </attribute>
    <attribute name="System.Reflection.AssemblyProductAttribute" target="assembly">
      <property name="Product" type="System.String" value="&quot;Planet Telex .Net Web MVC Library&quot;" />
    </attribute>
    <attribute name="System.Reflection.AssemblyCopyrightAttribute" target="assembly">
      <property name="Copyright" type="System.String" value="&quot;Copyright © 2007 - 2015&quot;" />
    </attribute>
    <attribute name="System.Reflection.AssemblyTrademarkAttribute" target="assembly">
      <property name="Trademark" type="System.String" value="&quot;&quot;" />
    </attribute>
    <attribute name="System.Runtime.InteropServices.ComVisibleAttribute" target="assembly">
      <property name="Value" type="System.Boolean" value="False" />
    </attribute>
    <attribute name="System.Runtime.InteropServices.GuidAttribute" target="assembly">
      <property name="Value" type="System.String" value="&quot;f0a48d07-82d5-4d18-a4bc-44e75b0b3365&quot;" />
    </attribute>
    <module name="PlanetTelex.Web.Mvc.dll">
      <namespace name="PlanetTelex.Web.Mvc.Attributes">
        <documentation>
          <summary>MVC action attributes.</summary>
        </documentation>
        <class name="CompressOutputAttribute" displayName="CompressOutputAttribute" namespace="PlanetTelex.Web.Mvc.Attributes" id="T:PlanetTelex.Web.Mvc.Attributes.CompressOutputAttribute" access="Public">
          <documentation><summary> An action filter attribute that compresses that method's output using Gzip or default compression depending on client browser support. </summary></documentation>
          <attribute name="System.AttributeUsageAttribute">
            <property name="ValidOn" type="System.AttributeTargets" value="(AttributeTargets.Class|AttributeTargets.Method)" />
            <property name="AllowMultiple" type="System.Boolean" value="False" />
            <property name="Inherited" type="System.Boolean" value="True" />
          </attribute>
          <baseType name="ActionFilterAttribute" id="T:System.Web.Mvc.ActionFilterAttribute" displayName="ActionFilterAttribute" namespace="System.Web.Mvc" assembly="System.Web.Mvc">
            <baseType name="FilterAttribute" id="T:System.Web.Mvc.FilterAttribute" displayName="FilterAttribute" namespace="System.Web.Mvc" assembly="System.Web.Mvc">
              <baseType name="Attribute" id="T:System.Attribute" displayName="Attribute" namespace="System" assembly="mscorlib" />
            </baseType>
          </baseType>
          <implementsClass type="System.Web.Mvc.IActionFilter" id="T:System.Web.Mvc.IActionFilter" displayName="IActionFilter" namespace="System.Web.Mvc" inherited="true" />
          <implementsClass type="System.Web.Mvc.IResultFilter" id="T:System.Web.Mvc.IResultFilter" displayName="IResultFilter" namespace="System.Web.Mvc" inherited="true" />
          <constructor name=".ctor" id="M:PlanetTelex.Web.Mvc.Attributes.CompressOutputAttribute.#ctor" access="Public" contract="Normal">
            <documentation>
              <summary>Initializes a new instance of the <see cref="T:PlanetTelex.Web.Mvc.Attributes.CompressOutputAttribute" /> class.</summary>
            </documentation>
          </constructor>
          <property name="Order" id="P:PlanetTelex.Web.Mvc.Attributes.CompressOutputAttribute.Order" access="Public" contract="Normal" declaringType="System.Web.Mvc.FilterAttribute" declaringAssembly="System.Web.Mvc" declaringId="P:System.Web.Mvc.FilterAttribute.Order" get="Public" set="Public" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          <property name="TypeId" id="P:PlanetTelex.Web.Mvc.Attributes.CompressOutputAttribute.TypeId" access="Public" contract="Virtual" declaringType="System.Attribute" declaringAssembly="mscorlib" declaringId="P:System.Attribute.TypeId" get="Public" set="false" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          <method name="OnActionExecuting" displayName="OnActionExecuting" id="M:PlanetTelex.Web.Mvc.Attributes.CompressOutputAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" access="Public" contract="Override" valueType="true">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Called by the MVC framework before the action method executes. </summary>
<param name="filterContext">The filter context.</param></documentation>
            <parameter name="filterContext" typeId="T:System.Web.Mvc.ActionExecutingContext" displayName="ActionExecutingContext" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <implements name="OnActionExecuting" id="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" interface="IActionFilter" interfaceId="T:System.Web.Mvc.IActionFilter" assembly="System.Web.Mvc">
              <declaringType name="T:System.Web.Mvc.IActionFilter" />
            </implements>
          </method>
          <method name="OnActionExecuted" displayName="OnActionExecuted" id="M:PlanetTelex.Web.Mvc.Attributes.CompressOutputAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" access="Public" contract="Virtual" valueType="true" declaringType="System.Web.Mvc.ActionFilterAttribute" declaringAssembly="System.Web.Mvc" declaringId="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="filterContext" typeId="T:System.Web.Mvc.ActionExecutedContext" displayName="ActionExecutedContext" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <implements name="OnActionExecuted" id="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" interface="IActionFilter" interfaceId="T:System.Web.Mvc.IActionFilter" assembly="System.Web.Mvc">
              <declaringType name="T:System.Web.Mvc.IActionFilter" />
            </implements>
          </method>
          <method name="OnResultExecuting" displayName="OnResultExecuting" id="M:PlanetTelex.Web.Mvc.Attributes.CompressOutputAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)" access="Public" contract="Virtual" valueType="true" declaringType="System.Web.Mvc.ActionFilterAttribute" declaringAssembly="System.Web.Mvc" declaringId="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="filterContext" typeId="T:System.Web.Mvc.ResultExecutingContext" displayName="ResultExecutingContext" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <implements name="OnResultExecuting" id="M:System.Web.Mvc.IResultFilter.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)" interface="IResultFilter" interfaceId="T:System.Web.Mvc.IResultFilter" assembly="System.Web.Mvc">
              <declaringType name="T:System.Web.Mvc.IResultFilter" />
            </implements>
          </method>
          <method name="OnResultExecuted" displayName="OnResultExecuted" id="M:PlanetTelex.Web.Mvc.Attributes.CompressOutputAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" access="Public" contract="Virtual" valueType="true" declaringType="System.Web.Mvc.ActionFilterAttribute" declaringAssembly="System.Web.Mvc" declaringId="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="filterContext" typeId="T:System.Web.Mvc.ResultExecutedContext" displayName="ResultExecutedContext" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <implements name="OnResultExecuted" id="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" interface="IResultFilter" interfaceId="T:System.Web.Mvc.IResultFilter" assembly="System.Web.Mvc">
              <declaringType name="T:System.Web.Mvc.IResultFilter" />
            </implements>
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Mvc.Attributes.CompressOutputAttribute.Equals(System.Object)" access="Public" contract="Override" valueType="true" declaringType="System.Attribute" declaringAssembly="mscorlib" declaringId="M:System.Attribute.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Mvc.Attributes.CompressOutputAttribute.GetHashCode" access="Public" contract="Override" valueType="true" declaringType="System.Attribute" declaringAssembly="mscorlib" declaringId="M:System.Attribute.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="Match" displayName="Match" id="M:PlanetTelex.Web.Mvc.Attributes.CompressOutputAttribute.Match(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Attribute" declaringAssembly="mscorlib" declaringId="M:System.Attribute.Match(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="IsDefaultAttribute" displayName="IsDefaultAttribute" id="M:PlanetTelex.Web.Mvc.Attributes.CompressOutputAttribute.IsDefaultAttribute" access="Public" contract="Virtual" valueType="true" declaringType="System.Attribute" declaringAssembly="mscorlib" declaringId="M:System.Attribute.IsDefaultAttribute">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Mvc.Attributes.CompressOutputAttribute.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Mvc.Attributes.CompressOutputAttribute.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Mvc.Attributes.CompressOutputAttribute.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Mvc.Attributes.CompressOutputAttribute.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="CacheDurationAttribute" displayName="CacheDurationAttribute" namespace="PlanetTelex.Web.Mvc.Attributes" id="T:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute" access="Public">
          <documentation><summary> An action filter attribute that writes caching HTTP headers with the specified duration. </summary></documentation>
          <attribute name="System.AttributeUsageAttribute">
            <property name="Inherited" type="System.Boolean" value="True" />
            <property name="AllowMultiple" type="System.Boolean" value="False" />
            <property name="ValidOn" type="System.AttributeTargets" value="(AttributeTargets.Class|AttributeTargets.Method)" />
          </attribute>
          <baseType name="ActionFilterAttribute" id="T:System.Web.Mvc.ActionFilterAttribute" displayName="ActionFilterAttribute" namespace="System.Web.Mvc" assembly="System.Web.Mvc">
            <baseType name="FilterAttribute" id="T:System.Web.Mvc.FilterAttribute" displayName="FilterAttribute" namespace="System.Web.Mvc" assembly="System.Web.Mvc">
              <baseType name="Attribute" id="T:System.Attribute" displayName="Attribute" namespace="System" assembly="mscorlib" />
            </baseType>
          </baseType>
          <implementsClass type="System.Web.Mvc.IActionFilter" id="T:System.Web.Mvc.IActionFilter" displayName="IActionFilter" namespace="System.Web.Mvc" inherited="true" />
          <implementsClass type="System.Web.Mvc.IResultFilter" id="T:System.Web.Mvc.IResultFilter" displayName="IResultFilter" namespace="System.Web.Mvc" inherited="true" />
          <constructor name=".ctor" id="M:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute.#ctor" access="Public" contract="Normal">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute" /> class. </summary></documentation>
          </constructor>
          <property name="Duration" id="P:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute.Duration" access="Public" contract="Normal" get="Public" set="Public" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Gets or sets the cache duration in seconds. The default is 10 seconds. </summary>
<value>The cache duration in seconds.</value></documentation>
          </property>
          <property name="DurationInMinutes" id="P:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute.DurationInMinutes" access="Public" contract="Normal" get="false" set="Public" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Sets the cache duration in minutes. </summary>
<value> The duration in minutes. </value></documentation>
          </property>
          <property name="DurationInHours" id="P:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute.DurationInHours" access="Public" contract="Normal" get="false" set="Public" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true">
            <documentation><summary> Sets the cache duration in hours. </summary>
<value> The duration in minutes. </value></documentation>
          </property>
          <property name="Order" id="P:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute.Order" access="Public" contract="Normal" declaringType="System.Web.Mvc.FilterAttribute" declaringAssembly="System.Web.Mvc" declaringId="P:System.Web.Mvc.FilterAttribute.Order" get="Public" set="Public" typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          <property name="TypeId" id="P:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute.TypeId" access="Public" contract="Virtual" declaringType="System.Attribute" declaringAssembly="mscorlib" declaringId="P:System.Attribute.TypeId" get="Public" set="false" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          <method name="OnActionExecuted" displayName="OnActionExecuted" id="M:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" access="Public" contract="Override" valueType="true">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Called after an action is executed. </summary>
<param name="filterContext">The filter context.</param></documentation>
            <parameter name="filterContext" typeId="T:System.Web.Mvc.ActionExecutedContext" displayName="ActionExecutedContext" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <implements name="OnActionExecuted" id="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" interface="IActionFilter" interfaceId="T:System.Web.Mvc.IActionFilter" assembly="System.Web.Mvc">
              <declaringType name="T:System.Web.Mvc.IActionFilter" />
            </implements>
          </method>
          <method name="OnActionExecuting" displayName="OnActionExecuting" id="M:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" access="Public" contract="Virtual" valueType="true" declaringType="System.Web.Mvc.ActionFilterAttribute" declaringAssembly="System.Web.Mvc" declaringId="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="filterContext" typeId="T:System.Web.Mvc.ActionExecutingContext" displayName="ActionExecutingContext" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <implements name="OnActionExecuting" id="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" interface="IActionFilter" interfaceId="T:System.Web.Mvc.IActionFilter" assembly="System.Web.Mvc">
              <declaringType name="T:System.Web.Mvc.IActionFilter" />
            </implements>
          </method>
          <method name="OnResultExecuting" displayName="OnResultExecuting" id="M:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)" access="Public" contract="Virtual" valueType="true" declaringType="System.Web.Mvc.ActionFilterAttribute" declaringAssembly="System.Web.Mvc" declaringId="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="filterContext" typeId="T:System.Web.Mvc.ResultExecutingContext" displayName="ResultExecutingContext" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <implements name="OnResultExecuting" id="M:System.Web.Mvc.IResultFilter.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)" interface="IResultFilter" interfaceId="T:System.Web.Mvc.IResultFilter" assembly="System.Web.Mvc">
              <declaringType name="T:System.Web.Mvc.IResultFilter" />
            </implements>
          </method>
          <method name="OnResultExecuted" displayName="OnResultExecuted" id="M:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" access="Public" contract="Virtual" valueType="true" declaringType="System.Web.Mvc.ActionFilterAttribute" declaringAssembly="System.Web.Mvc" declaringId="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="filterContext" typeId="T:System.Web.Mvc.ResultExecutedContext" displayName="ResultExecutedContext" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <implements name="OnResultExecuted" id="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" interface="IResultFilter" interfaceId="T:System.Web.Mvc.IResultFilter" assembly="System.Web.Mvc">
              <declaringType name="T:System.Web.Mvc.IResultFilter" />
            </implements>
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute.Equals(System.Object)" access="Public" contract="Override" valueType="true" declaringType="System.Attribute" declaringAssembly="mscorlib" declaringId="M:System.Attribute.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute.GetHashCode" access="Public" contract="Override" valueType="true" declaringType="System.Attribute" declaringAssembly="mscorlib" declaringId="M:System.Attribute.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="Match" displayName="Match" id="M:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute.Match(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Attribute" declaringAssembly="mscorlib" declaringId="M:System.Attribute.Match(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="IsDefaultAttribute" displayName="IsDefaultAttribute" id="M:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute.IsDefaultAttribute" access="Public" contract="Virtual" valueType="true" declaringType="System.Attribute" declaringAssembly="mscorlib" declaringId="M:System.Attribute.IsDefaultAttribute">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Mvc.Attributes.CacheDurationAttribute.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
      </namespace>
      <namespace name="PlanetTelex.Web.Mvc.Extensions.Html.Links">
        <documentation>
          <summary>HtmlHelper extensions for links.</summary>
        </documentation>
        <class name="MirrorSiteLinkExtensions" displayName="MirrorSiteLinkExtensions" namespace="PlanetTelex.Web.Mvc.Extensions.Html.Links" id="T:PlanetTelex.Web.Mvc.Extensions.Html.Links.MirrorSiteLinkExtensions" access="Public" static="true">
          <documentation><summary>
  <see cref="T:System.Web.Mvc.HtmlHelper" /> extensions for working with links to a mirror site (i.e. it has the same sitemap). </summary></documentation>
          <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
          <method name="MirrorSiteLink" displayName="MirrorSiteLink" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Links.MirrorSiteLinkExtensions.MirrorSiteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,PlanetTelex.Web.Request.UriScheme)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.Web.Mvc.MvcHtmlString" displayName="MvcHtmlString" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <documentation><summary> Creates a link to a mirror site at the same relative path as the current URL of this site. </summary>
<param name="htmlHelper">This HTML helper.</param>
<param name="linkText">The link text.</param>
<param name="domain">The domain of the mirror site.</param>
<param name="scheme">The scheme of the URL to build.</param>
<returns>A <see cref="T:System.Web.Mvc.MvcHtmlString" />.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="htmlHelper" extension="true" typeId="T:System.Web.Mvc.HtmlHelper" displayName="HtmlHelper" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <parameter name="linkText" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="domain" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="scheme" extension="true" typeId="T:PlanetTelex.Web.Request.UriScheme" displayName="UriScheme" namespace="PlanetTelex.Web.Request" assembly="PlanetTelex.Web" nullable="false" valueType="false" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Links.MirrorSiteLinkExtensions.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Links.MirrorSiteLinkExtensions.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Links.MirrorSiteLinkExtensions.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Links.MirrorSiteLinkExtensions.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Links.MirrorSiteLinkExtensions.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Links.MirrorSiteLinkExtensions.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="UrlLinkExtensions" displayName="UrlLinkExtensions" namespace="PlanetTelex.Web.Mvc.Extensions.Html.Links" id="T:PlanetTelex.Web.Mvc.Extensions.Html.Links.UrlLinkExtensions" access="Public" static="true">
          <documentation><summary>
  <see cref="T:System.Web.Mvc.HtmlHelper" /> extensions for making links out of URL strings. </summary></documentation>
          <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
          <method name="UrlLink" displayName="UrlLink" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Links.UrlLinkExtensions.UrlLink(System.Web.Mvc.HtmlHelper,System.String)" access="Public" contract="Static" valueType="false" overload="1">
            <returnType typeId="T:System.Web.Mvc.MvcHtmlString" displayName="MvcHtmlString" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <documentation><summary> Creates a link for the specified URL. </summary>
<param name="htmlHelper">This HTML helper.</param>
<param name="url">The URL.</param>
<returns>A <see cref="T:System.Web.Mvc.MvcHtmlString" />.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="htmlHelper" extension="true" typeId="T:System.Web.Mvc.HtmlHelper" displayName="HtmlHelper" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <parameter name="url" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="UrlLink" displayName="UrlLink" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Links.UrlLinkExtensions.UrlLink(System.Web.Mvc.HtmlHelper,System.String,System.String)" access="Public" contract="Static" valueType="false" overload="2">
            <returnType typeId="T:System.Web.Mvc.MvcHtmlString" displayName="MvcHtmlString" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <documentation><summary> Creates a link for the specified URL. </summary>
<param name="htmlHelper">This HTML helper.</param>
<param name="url">The URL.</param>
<param name="linkText">The link text.</param>
<returns>A <see cref="T:System.Web.Mvc.MvcHtmlString" />.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="htmlHelper" extension="true" typeId="T:System.Web.Mvc.HtmlHelper" displayName="HtmlHelper" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <parameter name="url" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="linkText" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="UrlLink" displayName="UrlLink" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Links.UrlLinkExtensions.UrlLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Boolean)" access="Public" contract="Static" valueType="false" overload="3">
            <returnType typeId="T:System.Web.Mvc.MvcHtmlString" displayName="MvcHtmlString" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <documentation><summary> Creates a link for the specified URL. </summary>
<param name="htmlHelper">This HTML helper.</param>
<param name="url">The URL.</param>
<param name="linkText">The link text.</param>
<param name="openInNewWindow">If set to <c>true</c> link will have a target='blank' tag.</param>
<returns>A <see cref="T:System.Web.Mvc.MvcHtmlString" />.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="htmlHelper" extension="true" typeId="T:System.Web.Mvc.HtmlHelper" displayName="HtmlHelper" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <parameter name="url" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="linkText" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="openInNewWindow" extension="true" typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Links.UrlLinkExtensions.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Links.UrlLinkExtensions.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Links.UrlLinkExtensions.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Links.UrlLinkExtensions.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Links.UrlLinkExtensions.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Links.UrlLinkExtensions.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
      </namespace>
      <namespace name="PlanetTelex.Web.Mvc.Extensions.Html.Lists">
        <documentation>
          <summary>HtmlHelper extensions for lists.</summary>
        </documentation>
        <class name="ListExtensions" displayName="ListExtensions" namespace="PlanetTelex.Web.Mvc.Extensions.Html.Lists" id="T:PlanetTelex.Web.Mvc.Extensions.Html.Lists.ListExtensions" access="Public" static="true">
          <documentation><summary>
  <see cref="T:System.Web.Mvc.HtmlHelper" /> extensions for working with HTML lists. </summary></documentation>
          <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
          <method name="ToHtmlList" displayName="ToHtmlList" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.ListExtensions.ToHtmlList(System.Web.Mvc.HtmlHelper,System.Collections.IEnumerable)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.Web.Mvc.MvcHtmlString" displayName="MvcHtmlString" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <documentation><summary> Creates an unordered list based on the items in a provided IEnumerable class. </summary>
<param name="htmlHelper">This HTML helper.</param>
<param name="items">The IEnumerable of items.</param>
<returns>A <see cref="T:System.Web.Mvc.MvcHtmlString" />.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="htmlHelper" extension="true" typeId="T:System.Web.Mvc.HtmlHelper" displayName="HtmlHelper" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <parameter name="items" extension="true" typeId="T:System.Collections.IEnumerable" displayName="IEnumerable" namespace="System.Collections" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.ListExtensions.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.ListExtensions.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.ListExtensions.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.ListExtensions.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.ListExtensions.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.ListExtensions.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="TimeDropDownListExtensions" displayName="TimeDropDownListExtensions" namespace="PlanetTelex.Web.Mvc.Extensions.Html.Lists" id="T:PlanetTelex.Web.Mvc.Extensions.Html.Lists.TimeDropDownListExtensions" access="Public" static="true">
          <documentation><summary>
  <see cref="T:System.Web.Mvc.HtmlHelper" /> extensions generating time drop down lists. </summary></documentation>
          <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
          <method name="HourDropDownList" displayName="HourDropDownList" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.TimeDropDownListExtensions.HourDropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Object)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.Web.Mvc.MvcHtmlString" displayName="MvcHtmlString" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <documentation><summary> Creates a drop down list of hours needed for non-24 hour clocks (i.e. the numbers 0-12). </summary>
<param name="htmlHelper">This HTML helper.</param>
<param name="name">The drop down list name.</param>
<param name="htmlAttributes">The HTML attributes.</param>
<returns>A <see cref="T:System.Web.Mvc.MvcHtmlString" />.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="htmlHelper" extension="true" typeId="T:System.Web.Mvc.HtmlHelper" displayName="HtmlHelper" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <parameter name="name" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="htmlAttributes" extension="true" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="MinuteDropDownList" displayName="MinuteDropDownList" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.TimeDropDownListExtensions.MinuteDropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Object)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.Web.Mvc.MvcHtmlString" displayName="MvcHtmlString" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <documentation><summary> Creates a drop down list of minutes in an hour (i.e. the numbers 0-60). </summary>
<param name="htmlHelper">This HTML helper.</param>
<param name="name">The drop down list name.</param>
<param name="htmlAttributes">The HTML attributes.</param>
<returns>A <see cref="T:System.Web.Mvc.MvcHtmlString" />.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="htmlHelper" extension="true" typeId="T:System.Web.Mvc.HtmlHelper" displayName="HtmlHelper" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <parameter name="name" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="htmlAttributes" extension="true" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="AmPmDropDownList" displayName="AmPmDropDownList" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.TimeDropDownListExtensions.AmPmDropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Object)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.Web.Mvc.MvcHtmlString" displayName="MvcHtmlString" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <documentation><summary> Creates a drop down list with resourced AM and PM designators. </summary>
<param name="htmlHelper">This HTML helper.</param>
<param name="name">The drop down list name.</param>
<param name="htmlAttributes">The HTML attributes.</param>
<returns>A <see cref="T:System.Web.Mvc.MvcHtmlString" />.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="htmlHelper" extension="true" typeId="T:System.Web.Mvc.HtmlHelper" displayName="HtmlHelper" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <parameter name="name" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="htmlAttributes" extension="true" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.TimeDropDownListExtensions.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.TimeDropDownListExtensions.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.TimeDropDownListExtensions.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.TimeDropDownListExtensions.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.TimeDropDownListExtensions.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.TimeDropDownListExtensions.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
        <class name="SelectListExtensions" displayName="SelectListExtensions" namespace="PlanetTelex.Web.Mvc.Extensions.Html.Lists" id="T:PlanetTelex.Web.Mvc.Extensions.Html.Lists.SelectListExtensions" access="Public" static="true">
          <documentation><summary>
  <see cref="T:System.Web.Mvc.HtmlHelper" /> extensions for working with <see cref="T:System.Web.Mvc.SelectList" /> classes. </summary></documentation>
          <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
          <method name="ToSelectList{T}" displayName="ToSelectList{T}" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.SelectListExtensions.ToSelectList``1(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IEnumerable{``0},``0)" access="Public" contract="Static" valueType="false" overload="1">
            <returnType typeId="T:System.Web.Mvc.SelectList" displayName="SelectList" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <documentation><summary> Creates a select list based on the items in a provided IEnumerable class. </summary>
<typeparam name="T">The type contained in the IEnumerable.</typeparam>
<param name="htmlHelper">This HTML helper.</param>
<param name="items">The IEnumerable of items.</param>
<param name="selectedItem">The selected item.</param>
<returns>A <see cref="T:System.Web.Mvc.SelectList" />.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="htmlHelper" extension="true" typeId="T:System.Web.Mvc.HtmlHelper" displayName="HtmlHelper" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <parameter name="items" extension="true" typeId="T:System.Collections.Generic.IEnumerable`1" displayName="IEnumerable{T}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
            </parameter>
            <parameter name="selectedItem" extension="true" typeId="T:T" displayName="SelectListExtensions.T" namespace="PlanetTelex.Web.Mvc.Extensions.Html.Lists" assembly="PlanetTelex.Web.Mvc" nullable="false" valueType="false" />
            <genericargument name="T" displayName="T" />
            <genericconstraints param="T">
              <constraint>PlanetTelex.Web.Common.ISelectable</constraint>
            </genericconstraints>
          </method>
          <method name="ToSelectList{T}" displayName="ToSelectList{T}" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.SelectListExtensions.ToSelectList``1(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IEnumerable{``0},``0,System.String)" access="Public" contract="Static" valueType="false" overload="2">
            <returnType typeId="T:System.Web.Mvc.SelectList" displayName="SelectList" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <documentation><summary> Creates a select list based on the items in a provided IEnumerable class. </summary>
<typeparam name="T">The type contained in the IEnumerable.</typeparam>
<param name="htmlHelper">This HTML helper.</param>
<param name="items">The IEnumerable of items.</param>
<param name="selectedItem">The selected item.</param>
<param name="defaultOption">A default option to insert at the top of the <see cref="T:System.Web.Mvc.SelectList" />.</param>
<returns>A <see cref="T:System.Web.Mvc.SelectList" />.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="htmlHelper" extension="true" typeId="T:System.Web.Mvc.HtmlHelper" displayName="HtmlHelper" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <parameter name="items" extension="true" typeId="T:System.Collections.Generic.IEnumerable`1" displayName="IEnumerable{T}" namespace="System.Collections.Generic" assembly="mscorlib" nullable="false" valueType="false">
              <genericargument name="T" displayName="T" />
            </parameter>
            <parameter name="selectedItem" extension="true" typeId="T:T" displayName="SelectListExtensions.T" namespace="PlanetTelex.Web.Mvc.Extensions.Html.Lists" assembly="PlanetTelex.Web.Mvc" nullable="false" valueType="false" />
            <parameter name="defaultOption" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <genericargument name="T" displayName="T" />
            <genericconstraints param="T">
              <constraint>PlanetTelex.Web.Common.ISelectable</constraint>
            </genericconstraints>
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.SelectListExtensions.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.SelectListExtensions.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.SelectListExtensions.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.SelectListExtensions.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.SelectListExtensions.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Lists.SelectListExtensions.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
      </namespace>
      <namespace name="PlanetTelex.Web.Mvc.Extensions.Html.Analytics">
        <documentation>
          <summary>HtmlHelper extensions for analytics.</summary>
        </documentation>
        <class name="GoogleAnalyticsExtensions" displayName="GoogleAnalyticsExtensions" namespace="PlanetTelex.Web.Mvc.Extensions.Html.Analytics" id="T:PlanetTelex.Web.Mvc.Extensions.Html.Analytics.GoogleAnalyticsExtensions" access="Public" static="true">
          <documentation><summary>
  <see cref="T:System.Web.Mvc.HtmlHelper" /> extensions for working with Google Analytics. </summary></documentation>
          <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
          <method name="GoogleAnalyticsScript" displayName="GoogleAnalyticsScript" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Analytics.GoogleAnalyticsExtensions.GoogleAnalyticsScript(System.Web.Mvc.HtmlHelper,System.String,System.String)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.Web.Mvc.MvcHtmlString" displayName="MvcHtmlString" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <documentation><summary> Renders the Google Analytics script when on a specified domain. </summary>
<param name="htmlHelper">This HTML helper.</param>
<param name="analyticsAccount">The analytics account.</param>
<param name="domain">The domain to render on.</param>
<returns>A <see cref="T:System.Web.Mvc.MvcHtmlString" />.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="htmlHelper" extension="true" typeId="T:System.Web.Mvc.HtmlHelper" displayName="HtmlHelper" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <parameter name="analyticsAccount" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="domain" extension="true" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Analytics.GoogleAnalyticsExtensions.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Analytics.GoogleAnalyticsExtensions.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Analytics.GoogleAnalyticsExtensions.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Analytics.GoogleAnalyticsExtensions.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Analytics.GoogleAnalyticsExtensions.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Mvc.Extensions.Html.Analytics.GoogleAnalyticsExtensions.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
      </namespace>
      <namespace name="PlanetTelex.Web.Mvc.Extensions.Ajax">
        <documentation>
          <summary>AjaxHelper extension methods.</summary>
        </documentation>
        <class name="AjaxExtensions" displayName="AjaxExtensions" namespace="PlanetTelex.Web.Mvc.Extensions.Ajax" id="T:PlanetTelex.Web.Mvc.Extensions.Ajax.AjaxExtensions" access="Public" static="true">
          <documentation><summary> Extension methods to the <see cref="T:System.Web.Mvc.AjaxHelper" /> class. </summary></documentation>
          <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
          <method name="JsonSerialize{T}" displayName="JsonSerialize{T}" id="M:PlanetTelex.Web.Mvc.Extensions.Ajax.AjaxExtensions.JsonSerialize``1(System.Web.Mvc.AjaxHelper,``0)" access="Public" contract="Static" valueType="false">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <documentation><summary> Serializes an instance as JSON. </summary>
<typeparam name="T">The type of object being serialized.</typeparam>
<param name="helper">This AJAX helper.</param>
<param name="instance">The object to serialize.</param>
<returns>A JSON string.</returns></documentation>
            <attribute name="System.Runtime.CompilerServices.ExtensionAttribute" />
            <parameter name="helper" extension="true" typeId="T:System.Web.Mvc.AjaxHelper" displayName="AjaxHelper" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
            <parameter name="instance" extension="true" typeId="T:T" displayName="AjaxExtensions.T" namespace="PlanetTelex.Web.Mvc.Extensions.Ajax" assembly="PlanetTelex.Web.Mvc" nullable="false" valueType="false" />
            <genericargument name="T" displayName="T" />
            <genericconstraints param="T">
              <constraint>class</constraint>
            </genericconstraints>
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Mvc.Extensions.Ajax.AjaxExtensions.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Mvc.Extensions.Ajax.AjaxExtensions.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Mvc.Extensions.Ajax.AjaxExtensions.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Mvc.Extensions.Ajax.AjaxExtensions.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Mvc.Extensions.Ajax.AjaxExtensions.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Mvc.Extensions.Ajax.AjaxExtensions.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
      </namespace>
      <namespace name="PlanetTelex.Web.Mvc.Results">
        <documentation>
          <summary>MVC results.</summary>
        </documentation>
        <class name="StreamTrackingResult" displayName="StreamTrackingResult" namespace="PlanetTelex.Web.Mvc.Results" id="T:PlanetTelex.Web.Mvc.Results.StreamTrackingResult" access="Public">
          <documentation><summary> Outputs a stream through the HTTP response and allows tracking when the stream writing is complete. </summary></documentation>
          <baseType name="FileStreamResult" id="T:System.Web.Mvc.FileStreamResult" displayName="FileStreamResult" namespace="System.Web.Mvc" assembly="System.Web.Mvc">
            <baseType name="FileResult" id="T:System.Web.Mvc.FileResult" displayName="FileResult" namespace="System.Web.Mvc" assembly="System.Web.Mvc">
              <baseType name="ActionResult" id="T:System.Web.Mvc.ActionResult" displayName="ActionResult" namespace="System.Web.Mvc" assembly="System.Web.Mvc" />
            </baseType>
          </baseType>
          <constructor name=".ctor" id="M:PlanetTelex.Web.Mvc.Results.StreamTrackingResult.#ctor(System.IO.Stream,System.String,System.Action)" access="Public" contract="Normal">
            <documentation><summary> Initializes a new instance of the <see cref="T:PlanetTelex.Web.Mvc.Results.StreamTrackingResult" /> class. </summary>
<param name="stream">The stream.</param>
<param name="contentType">Type of the content.</param>
<param name="onWriteComplete">The delegate invoked when the writing is complete.</param></documentation>
            <parameter name="stream" typeId="T:System.IO.Stream" displayName="Stream" namespace="System.IO" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="contentType" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
            <parameter name="onWriteComplete" typeId="T:System.Action" displayName="Action" namespace="System" assembly="System.Core" nullable="false" valueType="false" />
          </constructor>
          <property name="OnWriteComplete" id="P:PlanetTelex.Web.Mvc.Results.StreamTrackingResult.OnWriteComplete" access="Public" contract="Normal" get="Public" set="Private" typeId="T:System.Action" displayName="Action" namespace="System" assembly="System.Core" nullable="false" valueType="false">
            <documentation><summary> Gets the on write complete action. </summary></documentation>
          </property>
          <property name="FileStream" id="P:PlanetTelex.Web.Mvc.Results.StreamTrackingResult.FileStream" access="Public" contract="Normal" declaringType="System.Web.Mvc.FileStreamResult" declaringAssembly="System.Web.Mvc" declaringId="P:System.Web.Mvc.FileStreamResult.FileStream" get="Public" set="false" typeId="T:System.IO.Stream" displayName="Stream" namespace="System.IO" assembly="mscorlib" nullable="false" valueType="false" />
          <property name="ContentType" id="P:PlanetTelex.Web.Mvc.Results.StreamTrackingResult.ContentType" access="Public" contract="Normal" declaringType="System.Web.Mvc.FileResult" declaringAssembly="System.Web.Mvc" declaringId="P:System.Web.Mvc.FileResult.ContentType" get="Public" set="false" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          <property name="FileDownloadName" id="P:PlanetTelex.Web.Mvc.Results.StreamTrackingResult.FileDownloadName" access="Public" contract="Normal" declaringType="System.Web.Mvc.FileResult" declaringAssembly="System.Web.Mvc" declaringId="P:System.Web.Mvc.FileResult.FileDownloadName" get="Public" set="Public" typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          <method name="WriteFile" displayName="WriteFile" id="M:PlanetTelex.Web.Mvc.Results.StreamTrackingResult.WriteFile(System.Web.HttpResponseBase)" access="Family" contract="Override" valueType="true">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <documentation><summary> Writes the file to the response. </summary>
<param name="response">The response.</param></documentation>
            <parameter name="response" typeId="T:System.Web.HttpResponseBase" displayName="HttpResponseBase" namespace="System.Web" assembly="System.Web.Abstractions" nullable="false" valueType="false" />
          </method>
          <method name="ExecuteResult" displayName="ExecuteResult" id="M:PlanetTelex.Web.Mvc.Results.StreamTrackingResult.ExecuteResult(System.Web.Mvc.ControllerContext)" access="Public" contract="Override" valueType="true" declaringType="System.Web.Mvc.FileResult" declaringAssembly="System.Web.Mvc" declaringId="M:System.Web.Mvc.FileResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="context" typeId="T:System.Web.Mvc.ControllerContext" displayName="ControllerContext" namespace="System.Web.Mvc" assembly="System.Web.Mvc" nullable="false" valueType="false" />
          </method>
          <method name="ToString" displayName="ToString" id="M:PlanetTelex.Web.Mvc.Results.StreamTrackingResult.ToString" access="Public" contract="Virtual" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.ToString">
            <returnType typeId="T:System.String" displayName="String" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Equals" displayName="Equals" id="M:PlanetTelex.Web.Mvc.Results.StreamTrackingResult.Equals(System.Object)" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Equals(System.Object)">
            <returnType typeId="T:System.Boolean" displayName="Boolean" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <parameter name="obj" typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="GetHashCode" displayName="GetHashCode" id="M:PlanetTelex.Web.Mvc.Results.StreamTrackingResult.GetHashCode" access="Public" contract="Virtual" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetHashCode">
            <returnType typeId="T:System.Int32" displayName="Int32" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
          </method>
          <method name="GetType" displayName="GetType" id="M:PlanetTelex.Web.Mvc.Results.StreamTrackingResult.GetType" access="Public" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.GetType">
            <returnType typeId="T:System.Type" displayName="Type" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
          <method name="Finalize" displayName="Finalize" id="M:PlanetTelex.Web.Mvc.Results.StreamTrackingResult.Finalize" access="Family" contract="Override" valueType="true" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.Finalize">
            <returnType typeId="T:System.Void" displayName="Void" namespace="System" assembly="mscorlib" nullable="false" valueType="true" />
            <attribute name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
              <property name="ConsistencyGuarantee" type="System.Runtime.ConstrainedExecution.Consistency" value="Consistency.WillNotCorruptState" />
              <property name="Cer" type="System.Runtime.ConstrainedExecution.Cer" value="Cer.Success" />
            </attribute>
          </method>
          <method name="MemberwiseClone" displayName="MemberwiseClone" id="M:PlanetTelex.Web.Mvc.Results.StreamTrackingResult.MemberwiseClone" access="Family" contract="Normal" valueType="false" declaringType="System.Object" declaringAssembly="mscorlib" declaringId="M:System.Object.MemberwiseClone">
            <returnType typeId="T:System.Object" displayName="Object" namespace="System" assembly="mscorlib" nullable="false" valueType="false" />
          </method>
        </class>
      </namespace>
    </module>
  </assembly>
</ndoc>